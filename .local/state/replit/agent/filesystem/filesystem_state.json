{"file_contents":{"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/pages/cases.tsx":{"content":"import { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Plus, Search, MoreVertical, FileText, Calendar, User } from \"lucide-react\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { insertCaseSchema, type Case } from \"@shared/schema\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest, queryClient } from \"@/lib/queryClient\";\nimport { isUnauthorizedError } from \"@/lib/authUtils\";\n\nexport default function Cases() {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [isNewCaseOpen, setIsNewCaseOpen] = useState(false);\n  const { toast } = useToast();\n\n  const { data: cases, isLoading } = useQuery<Case[]>({\n    queryKey: [\"/api/cases\"],\n  });\n\n  const form = useForm({\n    resolver: zodResolver(insertCaseSchema.extend({\n      caseNumber: insertCaseSchema.shape.caseNumber,\n      title: insertCaseSchema.shape.title,\n      description: insertCaseSchema.shape.description.optional(),\n      status: insertCaseSchema.shape.status,\n      priority: insertCaseSchema.shape.priority,\n    })),\n    defaultValues: {\n      caseNumber: \"\",\n      title: \"\",\n      description: \"\",\n      status: \"open\",\n      priority: \"medium\",\n    },\n  });\n\n  const createCaseMutation = useMutation({\n    mutationFn: async (data: any) => {\n      return await apiRequest(\"POST\", \"/api/cases\", data);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/cases\"] });\n      toast({\n        title: \"Success\",\n        description: \"Case created successfully\",\n      });\n      setIsNewCaseOpen(false);\n      form.reset();\n    },\n    onError: (error: Error) => {\n      if (isUnauthorizedError(error)) {\n        toast({\n          title: \"Unauthorized\",\n          description: \"You are logged out. Logging in again...\",\n          variant: \"destructive\",\n        });\n        setTimeout(() => {\n          window.location.href = \"/api/login\";\n        }, 500);\n        return;\n      }\n      toast({\n        title: \"Error\",\n        description: error.message || \"Failed to create case\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const onSubmit = (data: any) => {\n    createCaseMutation.mutate(data);\n  };\n\n  const filteredCases = cases?.filter(\n    (c) =>\n      c.caseNumber.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      c.title.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case \"open\":\n        return \"bg-chart-2/10 text-chart-2\";\n      case \"in_progress\":\n        return \"bg-chart-3/10 text-chart-3\";\n      case \"closed\":\n        return \"bg-chart-4/10 text-chart-4\";\n      case \"archived\":\n        return \"bg-muted text-muted-foreground\";\n      default:\n        return \"bg-muted text-muted-foreground\";\n    }\n  };\n\n  const getPriorityColor = (priority: string) => {\n    switch (priority) {\n      case \"critical\":\n        return \"bg-destructive/10 text-destructive\";\n      case \"high\":\n        return \"bg-chart-5/10 text-chart-5\";\n      case \"medium\":\n        return \"bg-chart-3/10 text-chart-3\";\n      case \"low\":\n        return \"bg-muted text-muted-foreground\";\n      default:\n        return \"bg-muted text-muted-foreground\";\n    }\n  };\n\n  return (\n    <div className=\"space-y-6 p-6\">\n      {/* Header */}\n      <div className=\"flex flex-wrap items-center justify-between gap-4\">\n        <div>\n          <h1 className=\"text-3xl font-semibold\">Case Management</h1>\n          <p className=\"text-muted-foreground\">\n            Manage and track all investigation cases\n          </p>\n        </div>\n        <Dialog open={isNewCaseOpen} onOpenChange={setIsNewCaseOpen}>\n          <DialogTrigger asChild>\n            <Button data-testid=\"button-new-case\">\n              <Plus className=\"mr-1 h-4 w-4\" />\n              New Case\n            </Button>\n          </DialogTrigger>\n          <DialogContent className=\"max-w-2xl\">\n            <DialogHeader>\n              <DialogTitle>Create New Case</DialogTitle>\n            </DialogHeader>\n            <Form {...form}>\n              <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n                <div className=\"grid gap-4 md:grid-cols-2\">\n                  <FormField\n                    control={form.control}\n                    name=\"caseNumber\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Case Number</FormLabel>\n                        <FormControl>\n                          <Input\n                            placeholder=\"CASE-2025-0001\"\n                            data-testid=\"input-case-number\"\n                            {...field}\n                          />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  <FormField\n                    control={form.control}\n                    name=\"priority\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Priority</FormLabel>\n                        <Select\n                          onValueChange={field.onChange}\n                          defaultValue={field.value}\n                        >\n                          <FormControl>\n                            <SelectTrigger data-testid=\"select-priority\">\n                              <SelectValue placeholder=\"Select priority\" />\n                            </SelectTrigger>\n                          </FormControl>\n                          <SelectContent>\n                            <SelectItem value=\"low\">Low</SelectItem>\n                            <SelectItem value=\"medium\">Medium</SelectItem>\n                            <SelectItem value=\"high\">High</SelectItem>\n                            <SelectItem value=\"critical\">Critical</SelectItem>\n                          </SelectContent>\n                        </Select>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                </div>\n\n                <FormField\n                  control={form.control}\n                  name=\"title\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Case Title</FormLabel>\n                      <FormControl>\n                        <Input\n                          placeholder=\"Enter case title\"\n                          data-testid=\"input-case-title\"\n                          {...field}\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"description\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Description</FormLabel>\n                      <FormControl>\n                        <Textarea\n                          placeholder=\"Enter case description...\"\n                          className=\"min-h-24\"\n                          data-testid=\"input-case-description\"\n                          {...field}\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <div className=\"flex justify-end gap-2\">\n                  <Button\n                    type=\"button\"\n                    variant=\"outline\"\n                    onClick={() => setIsNewCaseOpen(false)}\n                    data-testid=\"button-cancel\"\n                  >\n                    Cancel\n                  </Button>\n                  <Button\n                    type=\"submit\"\n                    disabled={createCaseMutation.isPending}\n                    data-testid=\"button-submit-case\"\n                  >\n                    {createCaseMutation.isPending ? \"Creating...\" : \"Create Case\"}\n                  </Button>\n                </div>\n              </form>\n            </Form>\n          </DialogContent>\n        </Dialog>\n      </div>\n\n      {/* Search */}\n      <div className=\"flex gap-4\">\n        <div className=\"relative flex-1\">\n          <Search className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground\" />\n          <Input\n            placeholder=\"Search cases by number or title...\"\n            className=\"pl-9\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n            data-testid=\"input-search-cases\"\n          />\n        </div>\n      </div>\n\n      {/* Cases List */}\n      {isLoading ? (\n        <div className=\"grid gap-4\">\n          {[1, 2, 3].map((i) => (\n            <Card key={i} className=\"h-32 animate-pulse bg-card\" />\n          ))}\n        </div>\n      ) : filteredCases && filteredCases.length > 0 ? (\n        <div className=\"grid gap-4\">\n          {filteredCases.map((caseItem) => (\n            <Card\n              key={caseItem.id}\n              className=\"p-6 hover-elevate cursor-pointer\"\n              onClick={() => (window.location.href = `/cases/${caseItem.id}`)}\n              data-testid={`case-${caseItem.id}`}\n            >\n              <div className=\"flex items-start justify-between gap-4\">\n                <div className=\"flex-1 min-w-0\">\n                  <div className=\"mb-2 flex flex-wrap items-center gap-2\">\n                    <h3 className=\"text-lg font-semibold\">{caseItem.title}</h3>\n                    <Badge className={getStatusColor(caseItem.status)} variant=\"secondary\">\n                      {caseItem.status.replace(\"_\", \" \")}\n                    </Badge>\n                    <Badge className={getPriorityColor(caseItem.priority)} variant=\"secondary\">\n                      {caseItem.priority}\n                    </Badge>\n                  </div>\n                  <p className=\"mb-3 text-sm text-muted-foreground line-clamp-2\">\n                    {caseItem.description || \"No description provided\"}\n                  </p>\n                  <div className=\"flex flex-wrap gap-4 text-sm text-muted-foreground\">\n                    <div className=\"flex items-center gap-1\">\n                      <FileText className=\"h-3 w-3\" />\n                      <span>{caseItem.caseNumber}</span>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <Calendar className=\"h-3 w-3\" />\n                      <span>\n                        {caseItem.createdAt\n                          ? new Date(caseItem.createdAt).toLocaleDateString()\n                          : \"N/A\"}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <Button\n                  variant=\"ghost\"\n                  size=\"icon\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                  }}\n                  data-testid={`button-case-menu-${caseItem.id}`}\n                >\n                  <MoreVertical className=\"h-4 w-4\" />\n                </Button>\n              </div>\n            </Card>\n          ))}\n        </div>\n      ) : (\n        <Card className=\"flex flex-col items-center justify-center p-12 text-center\">\n          <FileText className=\"mb-4 h-12 w-12 text-muted-foreground\" />\n          <h3 className=\"mb-2 text-lg font-semibold\">No cases found</h3>\n          <p className=\"mb-4 text-sm text-muted-foreground\">\n            {searchQuery\n              ? \"Try adjusting your search query\"\n              : \"Get started by creating your first case\"}\n          </p>\n          {!searchQuery && (\n            <Button onClick={() => setIsNewCaseOpen(true)} data-testid=\"button-empty-new-case\">\n              <Plus className=\"mr-1 h-4 w-4\" />\n              Create Case\n            </Button>\n          )}\n        </Card>\n      )}\n    </div>\n  );\n}\n","size_bytes":12580},"client/src/pages/dashboard.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { Card } from \"@/components/ui/card\";\nimport { \n  FileText, \n  Database, \n  Activity, \n  CheckCircle2,\n  Clock,\n  AlertTriangle,\n  TrendingUp,\n  Users\n} from \"lucide-react\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, PieChart, Pie, Cell, LineChart, Line } from \"recharts\";\n\nexport default function Dashboard() {\n  const { data: stats, isLoading } = useQuery({\n    queryKey: [\"/api/stats\"],\n  });\n\n  const kpiCards = [\n    {\n      title: \"Active Cases\",\n      value: stats?.activeCases || 0,\n      icon: FileText,\n      trend: \"+12%\",\n      color: \"text-chart-1\",\n      bgColor: \"bg-chart-1/10\",\n    },\n    {\n      title: \"Evidence Items\",\n      value: stats?.evidenceCount || 0,\n      icon: Database,\n      trend: \"+8%\",\n      color: \"text-chart-2\",\n      bgColor: \"bg-chart-2/10\",\n    },\n    {\n      title: \"Active Analyses\",\n      value: stats?.activeAnalyses || 0,\n      icon: Activity,\n      trend: \"+15%\",\n      color: \"text-chart-3\",\n      bgColor: \"bg-chart-3/10\",\n    },\n    {\n      title: \"Completed This Month\",\n      value: stats?.completedCases || 0,\n      icon: CheckCircle2,\n      trend: \"+24%\",\n      color: \"text-chart-4\",\n      bgColor: \"bg-chart-4/10\",\n    },\n  ];\n\n  const casesByStatus = [\n    { name: \"Open\", value: 12, color: \"hsl(var(--chart-1))\" },\n    { name: \"In Progress\", value: 28, color: \"hsl(var(--chart-2))\" },\n    { name: \"Under Review\", value: 15, color: \"hsl(var(--chart-3))\" },\n    { name: \"Closed\", value: 45, color: \"hsl(var(--chart-4))\" },\n  ];\n\n  const moduleUsage = [\n    { module: \"Image Forensics\", count: 42 },\n    { module: \"Mobile Analysis\", count: 38 },\n    { module: \"Network Traffic\", count: 31 },\n    { module: \"Email Forensics\", count: 28 },\n    { module: \"Social Media\", count: 24 },\n    { module: \"Face Recognition\", count: 19 },\n  ];\n\n  const weeklyActivity = [\n    { day: \"Mon\", cases: 12, evidence: 24 },\n    { day: \"Tue\", cases: 18, evidence: 32 },\n    { day: \"Wed\", cases: 15, evidence: 28 },\n    { day: \"Thu\", cases: 22, evidence: 38 },\n    { day: \"Fri\", cases: 19, evidence: 35 },\n    { day: \"Sat\", cases: 8, evidence: 15 },\n    { day: \"Sun\", cases: 6, evidence: 12 },\n  ];\n\n  if (isLoading) {\n    return (\n      <div className=\"space-y-6 p-6\">\n        <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n          {[1, 2, 3, 4].map((i) => (\n            <Card key={i} className=\"h-32 animate-pulse bg-card\" />\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6 p-6\">\n      {/* Header */}\n      <div>\n        <h1 className=\"text-3xl font-semibold\">Investigation Dashboard</h1>\n        <p className=\"text-muted-foreground\">\n          Real-time overview of forensic investigations and analysis\n        </p>\n      </div>\n\n      {/* KPI Cards */}\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n        {kpiCards.map((card) => (\n          <Card key={card.title} className=\"p-6\">\n            <div className=\"flex items-start justify-between\">\n              <div className=\"space-y-1\">\n                <p className=\"text-sm text-muted-foreground\">{card.title}</p>\n                <div className=\"flex items-baseline gap-2\">\n                  <p className=\"text-3xl font-bold\" data-testid={`stat-${card.title.toLowerCase().replace(/\\s+/g, '-')}`}>\n                    {card.value}\n                  </p>\n                  <span className=\"text-xs text-chart-4\">{card.trend}</span>\n                </div>\n              </div>\n              <div className={`flex h-12 w-12 items-center justify-center rounded-lg ${card.bgColor}`}>\n                <card.icon className={`h-6 w-6 ${card.color}`} />\n              </div>\n            </div>\n          </Card>\n        ))}\n      </div>\n\n      {/* Charts Row */}\n      <div className=\"grid gap-6 lg:grid-cols-2\">\n        {/* Weekly Activity */}\n        <Card className=\"p-6\">\n          <div className=\"mb-4 flex items-center justify-between\">\n            <h3 className=\"text-lg font-semibold\">Weekly Activity</h3>\n            <TrendingUp className=\"h-5 w-5 text-chart-4\" />\n          </div>\n          <ResponsiveContainer width=\"100%\" height={250}>\n            <LineChart data={weeklyActivity}>\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"hsl(var(--border))\" />\n              <XAxis dataKey=\"day\" stroke=\"hsl(var(--muted-foreground))\" />\n              <YAxis stroke=\"hsl(var(--muted-foreground))\" />\n              <Tooltip\n                contentStyle={{\n                  backgroundColor: \"hsl(var(--popover))\",\n                  border: \"1px solid hsl(var(--border))\",\n                  borderRadius: \"8px\",\n                }}\n              />\n              <Line\n                type=\"monotone\"\n                dataKey=\"cases\"\n                stroke=\"hsl(var(--chart-1))\"\n                strokeWidth={2}\n                name=\"Cases\"\n              />\n              <Line\n                type=\"monotone\"\n                dataKey=\"evidence\"\n                stroke=\"hsl(var(--chart-2))\"\n                strokeWidth={2}\n                name=\"Evidence\"\n              />\n            </LineChart>\n          </ResponsiveContainer>\n        </Card>\n\n        {/* Cases by Status */}\n        <Card className=\"p-6\">\n          <div className=\"mb-4 flex items-center justify-between\">\n            <h3 className=\"text-lg font-semibold\">Cases by Status</h3>\n            <Activity className=\"h-5 w-5 text-chart-3\" />\n          </div>\n          <ResponsiveContainer width=\"100%\" height={250}>\n            <PieChart>\n              <Pie\n                data={casesByStatus}\n                cx=\"50%\"\n                cy=\"50%\"\n                innerRadius={60}\n                outerRadius={90}\n                paddingAngle={2}\n                dataKey=\"value\"\n              >\n                {casesByStatus.map((entry, index) => (\n                  <Cell key={`cell-${index}`} fill={entry.color} />\n                ))}\n              </Pie>\n              <Tooltip\n                contentStyle={{\n                  backgroundColor: \"hsl(var(--popover))\",\n                  border: \"1px solid hsl(var(--border))\",\n                  borderRadius: \"8px\",\n                }}\n              />\n            </PieChart>\n          </ResponsiveContainer>\n          <div className=\"mt-4 grid grid-cols-2 gap-2\">\n            {casesByStatus.map((item) => (\n              <div key={item.name} className=\"flex items-center gap-2\">\n                <div\n                  className=\"h-3 w-3 rounded-sm\"\n                  style={{ backgroundColor: item.color }}\n                />\n                <span className=\"text-sm text-muted-foreground\">\n                  {item.name} ({item.value})\n                </span>\n              </div>\n            ))}\n          </div>\n        </Card>\n      </div>\n\n      {/* Module Usage */}\n      <Card className=\"p-6\">\n        <div className=\"mb-4 flex items-center justify-between\">\n          <h3 className=\"text-lg font-semibold\">Module Usage (This Week)</h3>\n          <Users className=\"h-5 w-5 text-chart-1\" />\n        </div>\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <BarChart data={moduleUsage}>\n            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"hsl(var(--border))\" />\n            <XAxis\n              dataKey=\"module\"\n              stroke=\"hsl(var(--muted-foreground))\"\n              angle={-45}\n              textAnchor=\"end\"\n              height={80}\n            />\n            <YAxis stroke=\"hsl(var(--muted-foreground))\" />\n            <Tooltip\n              contentStyle={{\n                backgroundColor: \"hsl(var(--popover))\",\n                border: \"1px solid hsl(var(--border))\",\n                borderRadius: \"8px\",\n              }}\n            />\n            <Bar dataKey=\"count\" fill=\"hsl(var(--chart-1))\" radius={[4, 4, 0, 0]} />\n          </BarChart>\n        </ResponsiveContainer>\n      </Card>\n\n      {/* Recent Activity */}\n      <Card className=\"p-6\">\n        <div className=\"mb-4 flex items-center justify-between\">\n          <h3 className=\"text-lg font-semibold\">Recent Activity</h3>\n          <Clock className=\"h-5 w-5 text-muted-foreground\" />\n        </div>\n        <div className=\"space-y-3\">\n          {[\n            {\n              action: \"New evidence uploaded\",\n              case: \"CASE-2025-0042\",\n              user: \"Sarah Chen\",\n              time: \"2 minutes ago\",\n              icon: Database,\n            },\n            {\n              action: \"Analysis completed\",\n              case: \"CASE-2025-0041\",\n              user: \"Michael Brown\",\n              time: \"15 minutes ago\",\n              icon: CheckCircle2,\n            },\n            {\n              action: \"Case status updated\",\n              case: \"CASE-2025-0039\",\n              user: \"Jessica Park\",\n              time: \"1 hour ago\",\n              icon: FileText,\n            },\n            {\n              action: \"High priority alert\",\n              case: \"CASE-2025-0038\",\n              user: \"System\",\n              time: \"2 hours ago\",\n              icon: AlertTriangle,\n            },\n          ].map((activity, index) => (\n            <div\n              key={index}\n              className=\"flex items-start gap-4 rounded-lg border border-border p-3 hover-elevate\"\n            >\n              <div className=\"flex h-9 w-9 items-center justify-center rounded-lg bg-primary/10\">\n                <activity.icon className=\"h-4 w-4 text-primary\" />\n              </div>\n              <div className=\"flex-1 min-w-0\">\n                <p className=\"text-sm font-medium\">{activity.action}</p>\n                <p className=\"text-xs text-muted-foreground\">\n                  {activity.case} • {activity.user}\n                </p>\n              </div>\n              <span className=\"text-xs text-muted-foreground whitespace-nowrap\">\n                {activity.time}\n              </span>\n            </div>\n          ))}\n        </div>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":9967},"client/src/components/theme-toggle.tsx":{"content":"import { Moon, Sun } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { useEffect, useState } from \"react\";\n\nexport function ThemeToggle() {\n  const [theme, setTheme] = useState<\"light\" | \"dark\">(\"dark\");\n\n  useEffect(() => {\n    const stored = localStorage.getItem(\"theme\") as \"light\" | \"dark\" | null;\n    const initialTheme = stored || \"dark\";\n    setTheme(initialTheme);\n    document.documentElement.classList.toggle(\"dark\", initialTheme === \"dark\");\n  }, []);\n\n  const toggleTheme = () => {\n    const newTheme = theme === \"dark\" ? \"light\" : \"dark\";\n    setTheme(newTheme);\n    localStorage.setItem(\"theme\", newTheme);\n    document.documentElement.classList.toggle(\"dark\", newTheme === \"dark\");\n  };\n\n  return (\n    <Button\n      variant=\"ghost\"\n      size=\"icon\"\n      onClick={toggleTheme}\n      data-testid=\"button-theme-toggle\"\n      className=\"h-9 w-9\"\n    >\n      {theme === \"dark\" ? (\n        <Sun className=\"h-4 w-4\" />\n      ) : (\n        <Moon className=\"h-4 w-4\" />\n      )}\n      <span className=\"sr-only\">Toggle theme</span>\n    </Button>\n  );\n}\n","size_bytes":1090},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\" +\n  \" hover-elevate active-elevate-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground border border-primary-border\",\n        destructive:\n          \"bg-destructive text-destructive-foreground border border-destructive-border\",\n        outline:\n          // Shows the background color of whatever card / sidebar / accent background it is inside of.\n          // Inherits the current text color.\n          \" border [border-color:var(--button-outline)]  shadow-xs active:shadow-none \",\n        secondary: \"border bg-secondary text-secondary-foreground border border-secondary-border \",\n        // Add a transparent border so that when someone toggles a border on later, it doesn't shift layout/size.\n        ghost: \"border border-transparent\",\n      },\n      // Heights are set as \"min\" heights, because sometimes Ai will place large amount of content\n      // inside buttons. With a min-height they will look appropriate with small amounts of content,\n      // but will expand to fit large amounts of content.\n      size: {\n        default: \"min-h-9 px-4 py-2\",\n        sm: \"min-h-8 rounded-md px-3 text-xs\",\n        lg: \"min-h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  },\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":2359},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"server/storage.ts":{"content":"// Reference: Replit Auth and PostgreSQL database integration blueprints\nimport {\n  users,\n  cases,\n  evidence,\n  chainOfCustody,\n  analysisResults,\n  auditLogs,\n  type User,\n  type UpsertUser,\n  type Case,\n  type InsertCase,\n  type Evidence,\n  type InsertEvidence,\n  type InsertChainOfCustody,\n  type InsertAnalysisResult,\n  type AuditLog,\n} from \"@shared/schema\";\nimport { db } from \"./db\";\nimport { eq, desc } from \"drizzle-orm\";\n\n// Interface for storage operations\nexport interface IStorage {\n  // User operations (Required for Replit Auth)\n  getUser(id: string): Promise<User | undefined>;\n  upsertUser(user: UpsertUser): Promise<User>;\n\n  // Case operations\n  getCases(): Promise<Case[]>;\n  getCase(id: string): Promise<Case | undefined>;\n  createCase(caseData: InsertCase): Promise<Case>;\n  updateCaseStatus(id: string, status: string): Promise<Case>;\n\n  // Evidence operations\n  getEvidence(caseId?: string): Promise<Evidence[]>;\n  createEvidence(evidenceData: InsertEvidence): Promise<Evidence>;\n\n  // Chain of Custody operations\n  addCustodyEntry(entry: InsertChainOfCustody): Promise<void>;\n  getCustodyChain(evidenceId: string): Promise<any[]>;\n\n  // Analysis Results operations\n  createAnalysisResult(result: InsertAnalysisResult): Promise<void>;\n\n  // Audit Log operations\n  logActivity(userId: string, action: string, resourceType?: string, resourceId?: string, details?: any, ipAddress?: string, userAgent?: string): Promise<void>;\n  getAuditLogs(limit?: number): Promise<AuditLog[]>;\n\n  // Stats operations\n  getStats(): Promise<any>;\n}\n\nexport class DatabaseStorage implements IStorage {\n  // ==================== USER OPERATIONS ====================\n  // (IMPORTANT) Required for Replit Auth\n\n  async getUser(id: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.id, id));\n    return user;\n  }\n\n  async upsertUser(userData: UpsertUser): Promise<User> {\n    const [user] = await db\n      .insert(users)\n      .values(userData)\n      .onConflictDoUpdate({\n        target: users.id,\n        set: {\n          ...userData,\n          updatedAt: new Date(),\n        },\n      })\n      .returning();\n    return user;\n  }\n\n  // ==================== CASE OPERATIONS ====================\n\n  async getCases(): Promise<Case[]> {\n    return await db.select().from(cases).orderBy(desc(cases.createdAt));\n  }\n\n  async getCase(id: string): Promise<Case | undefined> {\n    const [caseItem] = await db.select().from(cases).where(eq(cases.id, id));\n    return caseItem;\n  }\n\n  async createCase(caseData: InsertCase): Promise<Case> {\n    const [newCase] = await db\n      .insert(cases)\n      .values(caseData)\n      .returning();\n    return newCase;\n  }\n\n  async updateCaseStatus(id: string, status: string): Promise<Case> {\n    const [updatedCase] = await db\n      .update(cases)\n      .set({ status, updatedAt: new Date() })\n      .where(eq(cases.id, id))\n      .returning();\n    return updatedCase;\n  }\n\n  // ==================== EVIDENCE OPERATIONS ====================\n\n  async getEvidence(caseId?: string): Promise<Evidence[]> {\n    if (caseId) {\n      return await db\n        .select()\n        .from(evidence)\n        .where(eq(evidence.caseId, caseId))\n        .orderBy(desc(evidence.createdAt));\n    }\n    return await db.select().from(evidence).orderBy(desc(evidence.createdAt));\n  }\n\n  async createEvidence(evidenceData: InsertEvidence): Promise<Evidence> {\n    const [newEvidence] = await db\n      .insert(evidence)\n      .values(evidenceData)\n      .returning();\n    return newEvidence;\n  }\n\n  // ==================== CHAIN OF CUSTODY OPERATIONS ====================\n\n  async addCustodyEntry(entry: InsertChainOfCustody): Promise<void> {\n    await db.insert(chainOfCustody).values(entry);\n  }\n\n  async getCustodyChain(evidenceId: string): Promise<any[]> {\n    return await db\n      .select()\n      .from(chainOfCustody)\n      .where(eq(chainOfCustody.evidenceId, evidenceId))\n      .orderBy(desc(chainOfCustody.timestamp));\n  }\n\n  // ==================== ANALYSIS RESULTS OPERATIONS ====================\n\n  async createAnalysisResult(result: InsertAnalysisResult): Promise<void> {\n    await db.insert(analysisResults).values(result);\n  }\n\n  // ==================== AUDIT LOG OPERATIONS ====================\n\n  async logActivity(\n    userId: string,\n    action: string,\n    resourceType?: string,\n    resourceId?: string,\n    details?: any,\n    ipAddress?: string,\n    userAgent?: string\n  ): Promise<void> {\n    await db.insert(auditLogs).values({\n      userId,\n      action,\n      resourceType,\n      resourceId,\n      details,\n      ipAddress,\n      userAgent,\n    });\n  }\n\n  async getAuditLogs(limit: number = 100): Promise<AuditLog[]> {\n    return await db\n      .select()\n      .from(auditLogs)\n      .orderBy(desc(auditLogs.timestamp))\n      .limit(limit);\n  }\n\n  // ==================== STATS OPERATIONS ====================\n\n  async getStats(): Promise<any> {\n    const allCases = await db.select().from(cases);\n    const allEvidence = await db.select().from(evidence);\n    const allAnalyses = await db.select().from(analysisResults);\n\n    const now = new Date();\n    const firstDayOfMonth = new Date(now.getFullYear(), now.getMonth(), 1);\n\n    const activeCases = allCases.filter(\n      c => c.status === 'open' || c.status === 'in_progress'\n    ).length;\n\n    const completedCases = allCases.filter(\n      c => c.status === 'closed' && c.updatedAt && c.updatedAt >= firstDayOfMonth\n    ).length;\n\n    return {\n      activeCases,\n      evidenceCount: allEvidence.length,\n      activeAnalyses: allAnalyses.length,\n      completedCases,\n    };\n  }\n}\n\nexport const storage = new DatabaseStorage();\n","size_bytes":5666},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/hooks/useAuth.ts":{"content":"// Reference: Replit Auth integration blueprint\nimport { useQuery } from \"@tanstack/react-query\";\nimport type { User } from \"@shared/schema\";\n\nexport function useAuth() {\n  const { data: user, isLoading } = useQuery<User>({\n    queryKey: [\"/api/auth/user\"],\n    retry: false,\n  });\n\n  return {\n    user,\n    isLoading,\n    isAuthenticated: !!user,\n  };\n}\n","size_bytes":355},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"server/replitAuth.ts":{"content":"// Reference: Replit Auth integration blueprint\nimport * as client from \"openid-client\";\nimport { Strategy, type VerifyFunction } from \"openid-client/passport\";\n\nimport passport from \"passport\";\nimport session from \"express-session\";\nimport type { Express, RequestHandler } from \"express\";\nimport memoize from \"memoizee\";\nimport connectPg from \"connect-pg-simple\";\nimport { storage } from \"./storage\";\n\nconst getOidcConfig = memoize(\n  async () => {\n    return await client.discovery(\n      new URL(process.env.ISSUER_URL ?? \"https://replit.com/oidc\"),\n      process.env.REPL_ID!\n    );\n  },\n  { maxAge: 3600 * 1000 }\n);\n\nexport function getSession() {\n  const sessionTtl = 7 * 24 * 60 * 60 * 1000; // 1 week\n  const pgStore = connectPg(session);\n  const sessionStore = new pgStore({\n    conString: process.env.DATABASE_URL,\n    createTableIfMissing: false,\n    ttl: sessionTtl,\n    tableName: \"sessions\",\n  });\n  return session({\n    secret: process.env.SESSION_SECRET!,\n    store: sessionStore,\n    resave: false,\n    saveUninitialized: false,\n    cookie: {\n      httpOnly: true,\n      secure: true,\n      maxAge: sessionTtl,\n    },\n  });\n}\n\nfunction updateUserSession(\n  user: any,\n  tokens: client.TokenEndpointResponse & client.TokenEndpointResponseHelpers\n) {\n  user.claims = tokens.claims();\n  user.access_token = tokens.access_token;\n  user.refresh_token = tokens.refresh_token;\n  user.expires_at = user.claims?.exp;\n}\n\nasync function upsertUser(\n  claims: any,\n) {\n  await storage.upsertUser({\n    id: claims[\"sub\"],\n    email: claims[\"email\"],\n    firstName: claims[\"first_name\"],\n    lastName: claims[\"last_name\"],\n    profileImageUrl: claims[\"profile_image_url\"],\n  });\n}\n\nexport async function setupAuth(app: Express) {\n  app.set(\"trust proxy\", 1);\n  app.use(getSession());\n  app.use(passport.initialize());\n  app.use(passport.session());\n\n  const config = await getOidcConfig();\n\n  const verify: VerifyFunction = async (\n    tokens: client.TokenEndpointResponse & client.TokenEndpointResponseHelpers,\n    verified: passport.AuthenticateCallback\n  ) => {\n    const user = {};\n    updateUserSession(user, tokens);\n    await upsertUser(tokens.claims());\n    verified(null, user);\n  };\n\n  // Keep track of registered strategies\n  const registeredStrategies = new Set<string>();\n\n  // Helper function to ensure strategy exists for a domain\n  const ensureStrategy = (domain: string) => {\n    const strategyName = `replitauth:${domain}`;\n    if (!registeredStrategies.has(strategyName)) {\n      const strategy = new Strategy(\n        {\n          name: strategyName,\n          config,\n          scope: \"openid email profile offline_access\",\n          callbackURL: `https://${domain}/api/callback`,\n        },\n        verify,\n      );\n      passport.use(strategy);\n      registeredStrategies.add(strategyName);\n    }\n  };\n\n  passport.serializeUser((user: Express.User, cb) => cb(null, user));\n  passport.deserializeUser((user: Express.User, cb) => cb(null, user));\n\n  app.get(\"/api/login\", (req, res, next) => {\n    ensureStrategy(req.hostname);\n    passport.authenticate(`replitauth:${req.hostname}`, {\n      prompt: \"login consent\",\n      scope: [\"openid\", \"email\", \"profile\", \"offline_access\"],\n    })(req, res, next);\n  });\n\n  app.get(\"/api/callback\", (req, res, next) => {\n    ensureStrategy(req.hostname);\n    passport.authenticate(`replitauth:${req.hostname}`, {\n      successReturnToOrRedirect: \"/\",\n      failureRedirect: \"/api/login\",\n    })(req, res, next);\n  });\n\n  app.get(\"/api/logout\", (req, res) => {\n    req.logout(() => {\n      res.redirect(\n        client.buildEndSessionUrl(config, {\n          client_id: process.env.REPL_ID!,\n          post_logout_redirect_uri: `${req.protocol}://${req.hostname}`,\n        }).href\n      );\n    });\n  });\n}\n\nexport const isAuthenticated: RequestHandler = async (req, res, next) => {\n  const user = req.user as any;\n\n  if (!req.isAuthenticated() || !user.expires_at) {\n    return res.status(401).json({ message: \"Unauthorized\" });\n  }\n\n  const now = Math.floor(Date.now() / 1000);\n  if (now <= user.expires_at) {\n    return next();\n  }\n\n  const refreshToken = user.refresh_token;\n  if (!refreshToken) {\n    res.status(401).json({ message: \"Unauthorized\" });\n    return;\n  }\n\n  try {\n    const config = await getOidcConfig();\n    const tokenResponse = await client.refreshTokenGrant(config, refreshToken);\n    updateUserSession(user, tokenResponse);\n    return next();\n  } catch (error) {\n    res.status(401).json({ message: \"Unauthorized\" });\n    return;\n  }\n};\n","size_bytes":4520},"client/src/pages/landing.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Shield, Lock, FileCheck, Users, Database, TrendingUp } from \"lucide-react\";\n\nexport default function Landing() {\n  const features = [\n    {\n      icon: Shield,\n      title: \"36 Forensic Modules\",\n      description: \"Comprehensive suite of specialized investigation tools\",\n    },\n    {\n      icon: Lock,\n      title: \"Chain-of-Custody\",\n      description: \"Complete evidence tracking with SHA-256 verification\",\n    },\n    {\n      icon: FileCheck,\n      title: \"Audit Compliance\",\n      description: \"Full audit trail for legal proceedings\",\n    },\n    {\n      icon: Users,\n      title: \"Role-Based Access\",\n      description: \"Secure access control for your entire team\",\n    },\n    {\n      icon: Database,\n      title: \"Case Management\",\n      description: \"Organize and track investigations efficiently\",\n    },\n    {\n      icon: TrendingUp,\n      title: \"Advanced Analytics\",\n      description: \"AI-powered insights and visualizations\",\n    },\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      {/* Hero Section */}\n      <div className=\"relative overflow-hidden\">\n        {/* Background gradient */}\n        <div className=\"absolute inset-0 bg-gradient-to-br from-primary/20 via-background to-background\" />\n        \n        <div className=\"relative\">\n          <div className=\"container mx-auto px-4 py-16 md:py-24\">\n            <div className=\"flex flex-col items-center text-center\">\n              <div className=\"mb-8 flex h-20 w-20 items-center justify-center rounded-2xl bg-primary\">\n                <Shield className=\"h-12 w-12 text-primary-foreground\" />\n              </div>\n              \n              <h1 className=\"mb-4 text-4xl font-semibold md:text-5xl lg:text-6xl\">\n                CPT Digital Forensics Platform\n              </h1>\n              \n              <p className=\"mb-8 max-w-2xl text-lg text-muted-foreground md:text-xl\">\n                Comprehensive investigation platform for law enforcement, cyber cells, and security agencies.\n                Advanced forensic analysis with complete chain-of-custody tracking.\n              </p>\n              \n              <Button\n                size=\"lg\"\n                onClick={() => window.location.href = \"/api/login\"}\n                data-testid=\"button-login\"\n                className=\"h-12 px-8 text-base\"\n              >\n                Sign In to Platform\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Features Grid */}\n      <div className=\"container mx-auto px-4 py-16\">\n        <div className=\"mb-12 text-center\">\n          <h2 className=\"mb-4 text-3xl font-semibold\">Platform Features</h2>\n          <p className=\"text-muted-foreground\">\n            Professional-grade tools for digital investigation and forensic analysis\n          </p>\n        </div>\n\n        <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\n          {features.map((feature) => (\n            <div\n              key={feature.title}\n              className=\"rounded-lg border border-border bg-card p-6 hover-elevate\"\n            >\n              <div className=\"mb-4 flex h-12 w-12 items-center justify-center rounded-lg bg-primary/10\">\n                <feature.icon className=\"h-6 w-6 text-primary\" />\n              </div>\n              <h3 className=\"mb-2 text-lg font-semibold\">{feature.title}</h3>\n              <p className=\"text-sm text-muted-foreground\">{feature.description}</p>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Module Categories */}\n      <div className=\"border-t border-border bg-card/50 py-16\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"mb-12 text-center\">\n            <h2 className=\"mb-4 text-3xl font-semibold\">Investigation Modules</h2>\n            <p className=\"text-muted-foreground\">\n              Specialized tools for every aspect of digital forensics\n            </p>\n          </div>\n\n          <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n            {[\n              \"AI & Media Analysis\",\n              \"Network & Communications\",\n              \"Device & Hardware\",\n              \"Financial & Fraud\",\n              \"Social & OSINT\",\n              \"Security & Malware\",\n              \"Case Management\",\n              \"Data & Cloud\",\n            ].map((category) => (\n              <div\n                key={category}\n                className=\"rounded-lg border border-border bg-background p-4 text-center\"\n              >\n                <p className=\"font-medium\">{category}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* Footer */}\n      <div className=\"border-t border-border py-8\">\n        <div className=\"container mx-auto px-4 text-center text-sm text-muted-foreground\">\n          <p>© 2025 CPT Digital Forensics Platform. All rights reserved.</p>\n          <p className=\"mt-2\">Secure • Compliant • Professional</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":5032},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"server/routes.ts":{"content":"// Reference: Replit Auth integration blueprint\nimport type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { setupAuth, isAuthenticated } from \"./replitAuth\";\nimport { insertCaseSchema, insertEvidenceSchema } from \"@shared/schema\";\nimport { createHash } from \"crypto\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Auth middleware\n  await setupAuth(app);\n\n  // ==================== AUTH ROUTES ====================\n\n  app.get('/api/auth/user', isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n      const user = await storage.getUser(userId);\n      \n      if (!user) {\n        return res.status(404).json({ message: \"User not found\" });\n      }\n\n      // Log activity\n      await storage.logActivity(\n        userId,\n        \"accessed_profile\",\n        \"user\",\n        userId,\n        null,\n        req.ip,\n        req.get('user-agent')\n      );\n\n      res.json(user);\n    } catch (error) {\n      console.error(\"Error fetching user:\", error);\n      res.status(500).json({ message: \"Failed to fetch user\" });\n    }\n  });\n\n  // ==================== DASHBOARD STATS ====================\n\n  app.get('/api/stats', isAuthenticated, async (req: any, res) => {\n    try {\n      const stats = await storage.getStats();\n      res.json(stats);\n    } catch (error) {\n      console.error(\"Error fetching stats:\", error);\n      res.status(500).json({ message: \"Failed to fetch statistics\" });\n    }\n  });\n\n  // ==================== ROLE CHECK MIDDLEWARE ====================\n\n  const requireRole = (allowedRoles: string[]) => {\n    return async (req: any, res: any, next: any) => {\n      try {\n        const userId = req.user.claims.sub;\n        const user = await storage.getUser(userId);\n\n        if (!user || !allowedRoles.includes(user.role)) {\n          return res.status(403).json({ message: \"Insufficient permissions\" });\n        }\n\n        next();\n      } catch (error) {\n        res.status(500).json({ message: \"Error checking permissions\" });\n      }\n    };\n  };\n\n  // ==================== CASE MANAGEMENT ====================\n\n  app.get('/api/cases', isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n      const cases = await storage.getCases();\n\n      // Log activity\n      await storage.logActivity(\n        userId,\n        \"viewed_cases\",\n        \"case\",\n        undefined,\n        { count: cases.length },\n        req.ip,\n        req.get('user-agent')\n      );\n\n      res.json(cases);\n    } catch (error) {\n      console.error(\"Error fetching cases:\", error);\n      res.status(500).json({ message: \"Failed to fetch cases\" });\n    }\n  });\n\n  app.get('/api/cases/:id', isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n      const caseItem = await storage.getCase(req.params.id);\n\n      if (!caseItem) {\n        return res.status(404).json({ message: \"Case not found\" });\n      }\n\n      // Log activity\n      await storage.logActivity(\n        userId,\n        \"viewed_case\",\n        \"case\",\n        caseItem.id,\n        { caseNumber: caseItem.caseNumber },\n        req.ip,\n        req.get('user-agent')\n      );\n\n      res.json(caseItem);\n    } catch (error) {\n      console.error(\"Error fetching case:\", error);\n      res.status(500).json({ message: \"Failed to fetch case\" });\n    }\n  });\n\n  app.post('/api/cases', isAuthenticated, requireRole(['admin', 'analyst']), async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n      \n      // Validate request body\n      const validatedData = insertCaseSchema.parse({\n        ...req.body,\n        createdById: userId,\n      });\n\n      const newCase = await storage.createCase(validatedData);\n\n      // Log activity\n      await storage.logActivity(\n        userId,\n        \"created_case\",\n        \"case\",\n        newCase.id,\n        { caseNumber: newCase.caseNumber, title: newCase.title },\n        req.ip,\n        req.get('user-agent')\n      );\n\n      res.status(201).json(newCase);\n    } catch (error: any) {\n      console.error(\"Error creating case:\", error);\n      if (error.name === 'ZodError') {\n        return res.status(400).json({ message: \"Invalid case data\", errors: error.errors });\n      }\n      res.status(500).json({ message: \"Failed to create case\" });\n    }\n  });\n\n  app.patch('/api/cases/:id/status', isAuthenticated, requireRole(['admin', 'analyst', 'supervisor']), async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n      const { status } = req.body;\n\n      if (!status) {\n        return res.status(400).json({ message: \"Status is required\" });\n      }\n\n      const updatedCase = await storage.updateCaseStatus(req.params.id, status);\n\n      // Log activity\n      await storage.logActivity(\n        userId,\n        \"updated_case_status\",\n        \"case\",\n        updatedCase.id,\n        { caseNumber: updatedCase.caseNumber, newStatus: status },\n        req.ip,\n        req.get('user-agent')\n      );\n\n      res.json(updatedCase);\n    } catch (error) {\n      console.error(\"Error updating case status:\", error);\n      res.status(500).json({ message: \"Failed to update case status\" });\n    }\n  });\n\n  // ==================== EVIDENCE MANAGEMENT ====================\n\n  app.get('/api/evidence', isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n      const caseId = req.query.caseId as string | undefined;\n      const evidenceList = await storage.getEvidence(caseId);\n\n      // Log activity\n      await storage.logActivity(\n        userId,\n        \"viewed_evidence\",\n        \"evidence\",\n        undefined,\n        { caseId, count: evidenceList.length },\n        req.ip,\n        req.get('user-agent')\n      );\n\n      res.json(evidenceList);\n    } catch (error) {\n      console.error(\"Error fetching evidence:\", error);\n      res.status(500).json({ message: \"Failed to fetch evidence\" });\n    }\n  });\n\n  app.post('/api/evidence', isAuthenticated, requireRole(['admin', 'analyst']), async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n\n      // For MVP, we'll accept evidence data with file info\n      // In production, this would handle file uploads via multipart/form-data\n      const { caseId, evidenceNumber, type, fileName, fileContent, description, collectedAt } = req.body;\n\n      if (!caseId || !evidenceNumber || !type || !fileName) {\n        return res.status(400).json({ message: \"Missing required fields\" });\n      }\n\n      // Generate SHA-256 hash (in production, this would be from actual file)\n      const hash = createHash('sha256');\n      hash.update(fileContent || fileName);\n      const sha256Hash = hash.digest('hex');\n\n      const evidenceData = {\n        caseId,\n        evidenceNumber,\n        type,\n        fileName,\n        fileSize: fileContent?.length || 0,\n        filePath: `/evidence/${caseId}/${fileName}`,\n        sha256Hash,\n        description,\n        collectedBy: userId,\n        collectedAt: collectedAt ? new Date(collectedAt) : new Date(),\n      };\n\n      const newEvidence = await storage.createEvidence(evidenceData);\n\n      // Add chain of custody entry\n      await storage.addCustodyEntry({\n        evidenceId: newEvidence.id,\n        action: \"collected\",\n        userId,\n        timestamp: new Date(),\n        location: \"Evidence Collection Site\",\n        notes: \"Initial evidence collection\",\n        ipAddress: req.ip,\n      });\n\n      // Log activity\n      await storage.logActivity(\n        userId,\n        \"uploaded_evidence\",\n        \"evidence\",\n        newEvidence.id,\n        { evidenceNumber, fileName, caseId },\n        req.ip,\n        req.get('user-agent')\n      );\n\n      res.status(201).json(newEvidence);\n    } catch (error: any) {\n      console.error(\"Error creating evidence:\", error);\n      res.status(500).json({ message: \"Failed to upload evidence\" });\n    }\n  });\n\n  // ==================== ANALYSIS RESULTS ====================\n\n  app.post('/api/analysis', isAuthenticated, requireRole(['admin', 'analyst']), async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n      const { caseId, evidenceId, moduleType, analysisType, results, confidence, flagged } = req.body;\n\n      if (!caseId || !moduleType || !analysisType || !results) {\n        return res.status(400).json({ message: \"Missing required fields\" });\n      }\n\n      await storage.createAnalysisResult({\n        caseId,\n        evidenceId,\n        moduleType,\n        analysisType,\n        results,\n        confidence,\n        flagged,\n        analyzedBy: userId,\n        analyzedAt: new Date(),\n      });\n\n      // Log activity\n      await storage.logActivity(\n        userId,\n        \"performed_analysis\",\n        \"analysis\",\n        evidenceId,\n        { moduleType, analysisType, caseId },\n        req.ip,\n        req.get('user-agent')\n      );\n\n      res.status(201).json({ message: \"Analysis result saved successfully\" });\n    } catch (error) {\n      console.error(\"Error saving analysis:\", error);\n      res.status(500).json({ message: \"Failed to save analysis result\" });\n    }\n  });\n\n  // ==================== AUDIT LOGS ====================\n\n  app.get('/api/audit-logs', isAuthenticated, requireRole(['admin', 'auditor']), async (req: any, res) => {\n    try {\n      const limit = parseInt(req.query.limit as string) || 100;\n      const logs = await storage.getAuditLogs(limit);\n\n      res.json(logs);\n    } catch (error) {\n      console.error(\"Error fetching audit logs:\", error);\n      res.status(500).json({ message: \"Failed to fetch audit logs\" });\n    }\n  });\n\n  // ==================== CHAIN OF CUSTODY ====================\n\n  app.get('/api/evidence/:id/custody', isAuthenticated, requireRole(['admin', 'analyst', 'supervisor']), async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n      const custodyChain = await storage.getCustodyChain(req.params.id);\n\n      // Log activity\n      await storage.logActivity(\n        userId,\n        \"viewed_custody_chain\",\n        \"evidence\",\n        req.params.id,\n        null,\n        req.ip,\n        req.get('user-agent')\n      );\n\n      res.json(custodyChain);\n    } catch (error) {\n      console.error(\"Error fetching custody chain:\", error);\n      res.status(500).json({ message: \"Failed to fetch custody chain\" });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":10451},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"shadcn-card rounded-xl border bg-card border-card-border text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n));\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n));\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n}\n","size_bytes":1904},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/pages/modules/face-recognition.tsx":{"content":"import { useState } from \"react\";\nimport { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Fingerprint, Upload, FileImage, CheckCircle2 } from \"lucide-react\";\n\nexport default function FaceRecognition() {\n  const [uploading, setUploading] = useState(false);\n  const [analyzing, setAnalyzing] = useState(false);\n  const [results, setResults] = useState<any>(null);\n\n  const simulateAnalysis = () => {\n    setAnalyzing(true);\n    setTimeout(() => {\n      setResults({\n        facesDetected: 3,\n        matches: [\n          {\n            name: \"John Smith\",\n            confidence: 94,\n            caseReference: \"CASE-2024-0087\",\n            lastSeen: \"2024-12-15\",\n          },\n          {\n            name: \"Unknown Person #1\",\n            confidence: 0,\n            caseReference: null,\n            lastSeen: null,\n          },\n          {\n            name: \"Unknown Person #2\",\n            confidence: 0,\n            caseReference: null,\n            lastSeen: null,\n          },\n        ],\n        quality: {\n          resolution: \"High\",\n          lighting: \"Good\",\n          angle: \"Frontal\",\n        },\n      });\n      setAnalyzing(false);\n    }, 2000);\n  };\n\n  return (\n    <div className=\"space-y-6 p-6\">\n      <div>\n        <h1 className=\"text-3xl font-semibold\">Face Recognition & Comparison</h1>\n        <p className=\"text-muted-foreground\">\n          Advanced facial recognition, matching, and database comparison\n        </p>\n      </div>\n\n      <div className=\"grid gap-6 lg:grid-cols-2\">\n        <Card className=\"p-6\">\n          <h3 className=\"mb-4 text-lg font-semibold flex items-center gap-2\">\n            <Fingerprint className=\"h-5 w-5 text-primary\" />\n            Upload Image for Recognition\n          </h3>\n          \n          <label className=\"flex min-h-48 w-full cursor-pointer flex-col items-center justify-center rounded-lg border-2 border-dashed border-border hover-elevate active-elevate-2\">\n            <FileImage className=\"mb-3 h-12 w-12 text-muted-foreground\" />\n            <p className=\"text-sm text-muted-foreground\">\n              Click to upload image containing faces\n            </p>\n            <p className=\"text-xs text-muted-foreground\">\n              PNG, JPG up to 10MB\n            </p>\n          </label>\n\n          <div className=\"mt-4 flex gap-2\">\n            <Button\n              onClick={simulateAnalysis}\n              disabled={analyzing}\n              className=\"flex-1\"\n              data-testid=\"button-analyze-faces\"\n            >\n              {analyzing ? (\n                <>\n                  <div className=\"mr-2 h-4 w-4 animate-spin rounded-full border-2 border-primary-foreground border-t-transparent\" />\n                  Analyzing...\n                </>\n              ) : (\n                <>\n                  <Upload className=\"mr-1 h-4 w-4\" />\n                  Analyze Faces\n                </>\n              )}\n            </Button>\n          </div>\n        </Card>\n\n        <Card className=\"p-6\">\n          <h3 className=\"mb-4 text-lg font-semibold\">Recognition Results</h3>\n          \n          {!results ? (\n            <div className=\"flex min-h-48 flex-col items-center justify-center rounded-lg border-2 border-dashed border-border\">\n              <Fingerprint className=\"mb-3 h-12 w-12 text-muted-foreground\" />\n              <p className=\"text-sm text-muted-foreground\">\n                Upload image to begin facial recognition\n              </p>\n            </div>\n          ) : (\n            <div className=\"space-y-4\">\n              <div className=\"rounded-lg border border-border p-4\">\n                <div className=\"flex items-center justify-between mb-3\">\n                  <span className=\"text-sm font-medium\">Faces Detected</span>\n                  <Badge>{results.facesDetected}</Badge>\n                </div>\n                <div className=\"grid grid-cols-3 gap-2 text-xs text-muted-foreground\">\n                  <div>\n                    <p>Resolution</p>\n                    <p className=\"font-medium text-foreground\">{results.quality.resolution}</p>\n                  </div>\n                  <div>\n                    <p>Lighting</p>\n                    <p className=\"font-medium text-foreground\">{results.quality.lighting}</p>\n                  </div>\n                  <div>\n                    <p>Angle</p>\n                    <p className=\"font-medium text-foreground\">{results.quality.angle}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </Card>\n      </div>\n\n      {results && (\n        <Card className=\"p-6\">\n          <h3 className=\"mb-4 text-lg font-semibold\">Database Matches</h3>\n          <div className=\"space-y-3\">\n            {results.matches.map((match: any, index: number) => (\n              <div\n                key={index}\n                className=\"rounded-lg border border-border p-4 hover-elevate\"\n              >\n                <div className=\"flex items-start justify-between\">\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center gap-2 mb-2\">\n                      <h4 className=\"font-semibold\">{match.name}</h4>\n                      {match.confidence > 0 && (\n                        <Badge className=\"bg-chart-4/10 text-chart-4\">\n                          <CheckCircle2 className=\"mr-1 h-3 w-3\" />\n                          Match Found\n                        </Badge>\n                      )}\n                    </div>\n                    {match.caseReference && (\n                      <div className=\"text-sm text-muted-foreground space-y-1\">\n                        <p>Case: {match.caseReference}</p>\n                        <p>Last Seen: {match.lastSeen}</p>\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"text-right\">\n                    <div className=\"text-2xl font-bold\">\n                      {match.confidence}%\n                    </div>\n                    <div className=\"text-xs text-muted-foreground\">Confidence</div>\n                  </div>\n                </div>\n                <div className=\"mt-3\">\n                  <div className=\"h-2 w-full overflow-hidden rounded-full bg-muted\">\n                    <div\n                      className={`h-full ${\n                        match.confidence > 80\n                          ? \"bg-chart-4\"\n                          : match.confidence > 0\n                          ? \"bg-chart-3\"\n                          : \"bg-muted-foreground\"\n                      }`}\n                      style={{ width: `${match.confidence}%` }}\n                    />\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </Card>\n      )}\n    </div>\n  );\n}\n","size_bytes":6855},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"shared/schema.ts":{"content":"// Reference: Replit Auth integration blueprint\nimport { sql } from 'drizzle-orm';\nimport { relations } from 'drizzle-orm';\nimport {\n  index,\n  jsonb,\n  pgTable,\n  timestamp,\n  varchar,\n  text,\n  integer,\n  boolean,\n} from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\n// ==================== AUTH TABLES (Required for Replit Auth) ====================\n\n// Session storage table - Required for Replit Auth\nexport const sessions = pgTable(\n  \"sessions\",\n  {\n    sid: varchar(\"sid\").primaryKey(),\n    sess: jsonb(\"sess\").notNull(),\n    expire: timestamp(\"expire\").notNull(),\n  },\n  (table) => [index(\"IDX_session_expire\").on(table.expire)],\n);\n\n// User storage table - Required for Replit Auth\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  email: varchar(\"email\").unique(),\n  firstName: varchar(\"first_name\"),\n  lastName: varchar(\"last_name\"),\n  profileImageUrl: varchar(\"profile_image_url\"),\n  role: varchar(\"role\", { length: 20 }).notNull().default('analyst'), // admin, analyst, supervisor, auditor\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport type UpsertUser = typeof users.$inferInsert;\nexport type User = typeof users.$inferSelect;\n\n// ==================== FORENSICS TABLES ====================\n\n// Cases table\nexport const cases = pgTable(\"cases\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  caseNumber: varchar(\"case_number\", { length: 50 }).notNull().unique(),\n  title: varchar(\"title\", { length: 255 }).notNull(),\n  description: text(\"description\"),\n  status: varchar(\"status\", { length: 20 }).notNull().default('open'), // open, in_progress, closed, archived\n  priority: varchar(\"priority\", { length: 20 }).notNull().default('medium'), // low, medium, high, critical\n  assignedToId: varchar(\"assigned_to_id\").references(() => users.id),\n  createdById: varchar(\"created_by_id\").notNull().references(() => users.id),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport const casesRelations = relations(cases, ({ one, many }) => ({\n  assignedTo: one(users, {\n    fields: [cases.assignedToId],\n    references: [users.id],\n    relationName: \"assignedCases\",\n  }),\n  createdBy: one(users, {\n    fields: [cases.createdById],\n    references: [users.id],\n    relationName: \"createdCases\",\n  }),\n  evidence: many(evidence),\n  analysisResults: many(analysisResults),\n}));\n\n// Evidence table\nexport const evidence = pgTable(\"evidence\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  caseId: varchar(\"case_id\").notNull().references(() => cases.id, { onDelete: 'cascade' }),\n  evidenceNumber: varchar(\"evidence_number\", { length: 50 }).notNull(),\n  type: varchar(\"type\", { length: 50 }).notNull(), // image, video, document, mobile_data, network_capture, etc.\n  fileName: varchar(\"file_name\", { length: 255 }).notNull(),\n  fileSize: integer(\"file_size\"), // in bytes\n  filePath: text(\"file_path\"), // storage path\n  sha256Hash: varchar(\"sha256_hash\", { length: 64 }).notNull(),\n  description: text(\"description\"),\n  collectedBy: varchar(\"collected_by\").notNull().references(() => users.id),\n  collectedAt: timestamp(\"collected_at\").notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const evidenceRelations = relations(evidence, ({ one, many }) => ({\n  case: one(cases, {\n    fields: [evidence.caseId],\n    references: [cases.id],\n  }),\n  collector: one(users, {\n    fields: [evidence.collectedBy],\n    references: [users.id],\n  }),\n  custodyChain: many(chainOfCustody),\n  analysisResults: many(analysisResults),\n}));\n\n// Chain of Custody table\nexport const chainOfCustody = pgTable(\"chain_of_custody\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  evidenceId: varchar(\"evidence_id\").notNull().references(() => evidence.id, { onDelete: 'cascade' }),\n  action: varchar(\"action\", { length: 100 }).notNull(), // collected, transferred, analyzed, stored, etc.\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  timestamp: timestamp(\"timestamp\").notNull().defaultNow(),\n  location: varchar(\"location\", { length: 255 }),\n  notes: text(\"notes\"),\n  ipAddress: varchar(\"ip_address\", { length: 45 }),\n});\n\nexport const chainOfCustodyRelations = relations(chainOfCustody, ({ one }) => ({\n  evidence: one(evidence, {\n    fields: [chainOfCustody.evidenceId],\n    references: [evidence.id],\n  }),\n  user: one(users, {\n    fields: [chainOfCustody.userId],\n    references: [users.id],\n  }),\n}));\n\n// Analysis Results table (for all forensic modules)\nexport const analysisResults = pgTable(\"analysis_results\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  caseId: varchar(\"case_id\").notNull().references(() => cases.id, { onDelete: 'cascade' }),\n  evidenceId: varchar(\"evidence_id\").references(() => evidence.id, { onDelete: 'cascade' }),\n  moduleType: varchar(\"module_type\", { length: 50 }).notNull(), // ai_deepfake, social_media, image_forensics, etc.\n  analysisType: varchar(\"analysis_type\", { length: 100 }).notNull(),\n  results: jsonb(\"results\").notNull(), // JSON structure varies by module\n  confidence: integer(\"confidence\"), // 0-100\n  flagged: boolean(\"flagged\").default(false),\n  analyzedBy: varchar(\"analyzed_by\").notNull().references(() => users.id),\n  analyzedAt: timestamp(\"analyzed_at\").notNull().defaultNow(),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const analysisResultsRelations = relations(analysisResults, ({ one }) => ({\n  case: one(cases, {\n    fields: [analysisResults.caseId],\n    references: [cases.id],\n  }),\n  evidence: one(evidence, {\n    fields: [analysisResults.evidenceId],\n    references: [evidence.id],\n  }),\n  analyzer: one(users, {\n    fields: [analysisResults.analyzedBy],\n    references: [users.id],\n  }),\n}));\n\n// Audit Log table\nexport const auditLogs = pgTable(\"audit_logs\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  action: varchar(\"action\", { length: 100 }).notNull(),\n  resourceType: varchar(\"resource_type\", { length: 50 }), // case, evidence, analysis, etc.\n  resourceId: varchar(\"resource_id\"),\n  details: jsonb(\"details\"),\n  ipAddress: varchar(\"ip_address\", { length: 45 }),\n  userAgent: text(\"user_agent\"),\n  timestamp: timestamp(\"timestamp\").notNull().defaultNow(),\n}, (table) => [\n  index(\"idx_audit_logs_user\").on(table.userId),\n  index(\"idx_audit_logs_timestamp\").on(table.timestamp),\n]);\n\nexport const auditLogsRelations = relations(auditLogs, ({ one }) => ({\n  user: one(users, {\n    fields: [auditLogs.userId],\n    references: [users.id],\n  }),\n}));\n\n// ==================== INSERT SCHEMAS ====================\n\nexport const insertCaseSchema = createInsertSchema(cases).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertEvidenceSchema = createInsertSchema(evidence).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertAnalysisResultSchema = createInsertSchema(analysisResults).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertChainOfCustodySchema = createInsertSchema(chainOfCustody).omit({\n  id: true,\n});\n\n// ==================== TYPES ====================\n\nexport type InsertCase = z.infer<typeof insertCaseSchema>;\nexport type Case = typeof cases.$inferSelect;\n\nexport type InsertEvidence = z.infer<typeof insertEvidenceSchema>;\nexport type Evidence = typeof evidence.$inferSelect;\n\nexport type InsertAnalysisResult = z.infer<typeof insertAnalysisResultSchema>;\nexport type AnalysisResult = typeof analysisResults.$inferSelect;\n\nexport type InsertChainOfCustody = z.infer<typeof insertChainOfCustodySchema>;\nexport type ChainOfCustody = typeof chainOfCustody.$inferSelect;\n\nexport type AuditLog = typeof auditLogs.$inferSelect;\n","size_bytes":7923},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"server/db.ts":{"content":"// Reference: PostgreSQL database integration blueprint\nimport { Pool, neonConfig } from '@neondatabase/serverless';\nimport { drizzle } from 'drizzle-orm/neon-serverless';\nimport ws from \"ws\";\nimport * as schema from \"@shared/schema\";\n\nneonConfig.webSocketConstructor = ws;\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\n    \"DATABASE_URL must be set. Did you forget to provision a database?\",\n  );\n}\n\nexport const pool = new Pool({ connectionString: process.env.DATABASE_URL });\nexport const db = drizzle({ client: pool, schema });\n","size_bytes":539},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"client/src/pages/modules/network-traffic.tsx":{"content":"import { useState } from \"react\";\nimport { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Network, Upload, FileText } from \"lucide-react\";\nimport { PieChart, Pie, Cell, ResponsiveContainer, Tooltip, BarChart, Bar, XAxis, YAxis, CartesianGrid } from \"recharts\";\n\nexport default function NetworkTraffic() {\n  const [analyzing, setAnalyzing] = useState(false);\n  const [results, setResults] = useState<any>(null);\n\n  const simulateAnalysis = () => {\n    setAnalyzing(true);\n    setTimeout(() => {\n      setResults({\n        totalPackets: 45672,\n        protocols: [\n          { name: \"HTTP\", value: 15234, color: \"hsl(var(--chart-1))\" },\n          { name: \"HTTPS\", value: 12456, color: \"hsl(var(--chart-2))\" },\n          { name: \"DNS\", value: 8901, color: \"hsl(var(--chart-3))\" },\n          { name: \"TCP\", value: 5678, color: \"hsl(var(--chart-4))\" },\n          { name: \"UDP\", value: 3403, color: \"hsl(var(--chart-5))\" },\n        ],\n        topConnections: [\n          { ip: \"192.168.1.100\", packets: 8234, type: \"Internal\" },\n          { ip: \"8.8.8.8\", packets: 6543, type: \"DNS Server\" },\n          { ip: \"172.217.14.206\", packets: 5432, type: \"Google\" },\n          { ip: \"151.101.1.140\", packets: 4321, type: \"CDN\" },\n        ],\n        suspiciousActivity: [\n          { type: \"Port Scan Detected\", severity: \"High\", count: 12 },\n          { type: \"Unusual Traffic Pattern\", severity: \"Medium\", count: 5 },\n          { type: \"Unknown Protocol\", severity: \"Low\", count: 3 },\n        ],\n      });\n      setAnalyzing(false);\n    }, 2000);\n  };\n\n  return (\n    <div className=\"space-y-6 p-6\">\n      <div>\n        <h1 className=\"text-3xl font-semibold\">Network Traffic Analyzer</h1>\n        <p className=\"text-muted-foreground\">\n          PCAP file analysis, protocol breakdown, and traffic visualization\n        </p>\n      </div>\n\n      <Card className=\"p-6\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h3 className=\"text-lg font-semibold\">Upload PCAP File</h3>\n            <p className=\"text-sm text-muted-foreground\">\n              Upload network capture files for analysis\n            </p>\n          </div>\n          <Button\n            onClick={simulateAnalysis}\n            disabled={analyzing}\n            data-testid=\"button-analyze-pcap\"\n          >\n            {analyzing ? (\n              <>\n                <div className=\"mr-2 h-4 w-4 animate-spin rounded-full border-2 border-primary-foreground border-t-transparent\" />\n                Analyzing...\n              </>\n            ) : (\n              <>\n                <Upload className=\"mr-1 h-4 w-4\" />\n                {results ? \"Re-analyze\" : \"Analyze Sample\"}\n              </>\n            )}\n          </Button>\n        </div>\n      </Card>\n\n      {results && (\n        <>\n          <div className=\"grid gap-6 md:grid-cols-3\">\n            <Card className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm text-muted-foreground\">Total Packets</p>\n                  <p className=\"text-3xl font-bold\">{results.totalPackets.toLocaleString()}</p>\n                </div>\n                <div className=\"flex h-12 w-12 items-center justify-center rounded-lg bg-chart-1/10\">\n                  <Network className=\"h-6 w-6 text-chart-1\" />\n                </div>\n              </div>\n            </Card>\n            <Card className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm text-muted-foreground\">Protocols</p>\n                  <p className=\"text-3xl font-bold\">{results.protocols.length}</p>\n                </div>\n                <div className=\"flex h-12 w-12 items-center justify-center rounded-lg bg-chart-2/10\">\n                  <FileText className=\"h-6 w-6 text-chart-2\" />\n                </div>\n              </div>\n            </Card>\n            <Card className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm text-muted-foreground\">Alerts</p>\n                  <p className=\"text-3xl font-bold text-destructive\">\n                    {results.suspiciousActivity.reduce((acc: number, item: any) => acc + item.count, 0)}\n                  </p>\n                </div>\n                <div className=\"flex h-12 w-12 items-center justify-center rounded-lg bg-destructive/10\">\n                  <Network className=\"h-6 w-6 text-destructive\" />\n                </div>\n              </div>\n            </Card>\n          </div>\n\n          <div className=\"grid gap-6 lg:grid-cols-2\">\n            <Card className=\"p-6\">\n              <h3 className=\"mb-4 text-lg font-semibold\">Protocol Distribution</h3>\n              <ResponsiveContainer width=\"100%\" height={250}>\n                <PieChart>\n                  <Pie\n                    data={results.protocols}\n                    cx=\"50%\"\n                    cy=\"50%\"\n                    outerRadius={90}\n                    paddingAngle={2}\n                    dataKey=\"value\"\n                    label\n                  >\n                    {results.protocols.map((entry: any, index: number) => (\n                      <Cell key={`cell-${index}`} fill={entry.color} />\n                    ))}\n                  </Pie>\n                  <Tooltip />\n                </PieChart>\n              </ResponsiveContainer>\n              <div className=\"mt-4 grid grid-cols-2 gap-2\">\n                {results.protocols.map((protocol: any) => (\n                  <div key={protocol.name} className=\"flex items-center gap-2\">\n                    <div className=\"h-3 w-3 rounded-sm\" style={{ backgroundColor: protocol.color }} />\n                    <span className=\"text-sm\">{protocol.name}</span>\n                  </div>\n                ))}\n              </div>\n            </Card>\n\n            <Card className=\"p-6\">\n              <h3 className=\"mb-4 text-lg font-semibold\">Top Connections</h3>\n              <ResponsiveContainer width=\"100%\" height={250}>\n                <BarChart data={results.topConnections}>\n                  <CartesianGrid strokeDasharray=\"3 3\" stroke=\"hsl(var(--border))\" />\n                  <XAxis dataKey=\"ip\" stroke=\"hsl(var(--muted-foreground))\" tick={{ fontSize: 10 }} />\n                  <YAxis stroke=\"hsl(var(--muted-foreground))\" />\n                  <Tooltip />\n                  <Bar dataKey=\"packets\" fill=\"hsl(var(--chart-1))\" radius={[4, 4, 0, 0]} />\n                </BarChart>\n              </ResponsiveContainer>\n            </Card>\n          </div>\n\n          <Card className=\"p-6\">\n            <h3 className=\"mb-4 text-lg font-semibold\">Suspicious Activity</h3>\n            <div className=\"space-y-3\">\n              {results.suspiciousActivity.map((activity: any, index: number) => (\n                <div key={index} className=\"flex items-center justify-between rounded-lg border border-border p-3\">\n                  <div className=\"flex items-center gap-3\">\n                    <Badge variant={activity.severity === \"High\" ? \"destructive\" : \"secondary\"}>\n                      {activity.severity}\n                    </Badge>\n                    <span className=\"text-sm font-medium\">{activity.type}</span>\n                  </div>\n                  <Badge variant=\"outline\">{activity.count} occurrences</Badge>\n                </div>\n              ))}\n            </div>\n          </Card>\n        </>\n      )}\n    </div>\n  );\n}\n","size_bytes":7581},"client/src/pages/modules/module-placeholder.tsx":{"content":"import { Card } from \"@/components/ui/card\";\nimport { Construction } from \"lucide-react\";\n\ninterface ModulePlaceholderProps {\n  title: string;\n  description: string;\n  features: string[];\n}\n\nexport default function ModulePlaceholder({ title, description, features }: ModulePlaceholderProps) {\n  return (\n    <div className=\"space-y-6 p-6\">\n      <div>\n        <h1 className=\"text-3xl font-semibold\">{title}</h1>\n        <p className=\"text-muted-foreground\">{description}</p>\n      </div>\n\n      <Card className=\"p-12 text-center\">\n        <div className=\"mx-auto mb-6 flex h-20 w-20 items-center justify-center rounded-full bg-primary/10\">\n          <Construction className=\"h-10 w-10 text-primary\" />\n        </div>\n        <h3 className=\"mb-2 text-xl font-semibold\">Module Under Development</h3>\n        <p className=\"mb-6 text-muted-foreground\">\n          This forensic analysis module is currently being developed and will be available in a future update.\n        </p>\n        \n        <div className=\"mx-auto max-w-md rounded-lg bg-muted p-4 text-left\">\n          <p className=\"mb-2 text-sm font-medium\">Planned Features:</p>\n          <ul className=\"list-inside list-disc space-y-1 text-sm text-muted-foreground\">\n            {features.map((feature, index) => (\n              <li key={index}>{feature}</li>\n            ))}\n          </ul>\n        </div>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":1392},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/sidebar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, VariantProps } from \"class-variance-authority\"\nimport { PanelLeftIcon } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nfunction SidebarProvider({\n  defaultOpen = true,\n  open: openProp,\n  onOpenChange: setOpenProp,\n  className,\n  style,\n  children,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  defaultOpen?: boolean\n  open?: boolean\n  onOpenChange?: (open: boolean) => void\n}) {\n  const isMobile = useIsMobile()\n  const [openMobile, setOpenMobile] = React.useState(false)\n\n  // This is the internal state of the sidebar.\n  // We use openProp and setOpenProp for control from outside the component.\n  const [_open, _setOpen] = React.useState(defaultOpen)\n  const open = openProp ?? _open\n  const setOpen = React.useCallback(\n    (value: boolean | ((value: boolean) => boolean)) => {\n      const openState = typeof value === \"function\" ? value(open) : value\n      if (setOpenProp) {\n        setOpenProp(openState)\n      } else {\n        _setOpen(openState)\n      }\n\n      // This sets the cookie to keep the sidebar state.\n      document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n    },\n    [setOpenProp, open]\n  )\n\n  // Helper to toggle the sidebar.\n  const toggleSidebar = React.useCallback(() => {\n    return isMobile ? setOpenMobile((open) => !open) : setOpen((open) => !open)\n  }, [isMobile, setOpen, setOpenMobile])\n\n  // Adds a keyboard shortcut to toggle the sidebar.\n  React.useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (\n        event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n        (event.metaKey || event.ctrlKey)\n      ) {\n        event.preventDefault()\n        toggleSidebar()\n      }\n    }\n\n    window.addEventListener(\"keydown\", handleKeyDown)\n    return () => window.removeEventListener(\"keydown\", handleKeyDown)\n  }, [toggleSidebar])\n\n  // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n  // This makes it easier to style the sidebar with Tailwind classes.\n  const state = open ? \"expanded\" : \"collapsed\"\n\n  const contextValue = React.useMemo<SidebarContextProps>(\n    () => ({\n      state,\n      open,\n      setOpen,\n      isMobile,\n      openMobile,\n      setOpenMobile,\n      toggleSidebar,\n    }),\n    [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n  )\n\n  return (\n    <SidebarContext.Provider value={contextValue}>\n      <TooltipProvider delayDuration={0}>\n        <div\n          data-slot=\"sidebar-wrapper\"\n          style={\n            {\n              \"--sidebar-width\": SIDEBAR_WIDTH,\n              \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n              ...style,\n            } as React.CSSProperties\n          }\n          className={cn(\n            \"group/sidebar-wrapper has-data-[variant=inset]:bg-sidebar flex min-h-svh w-full\",\n            className\n          )}\n          {...props}\n        >\n          {children}\n        </div>\n      </TooltipProvider>\n    </SidebarContext.Provider>\n  )\n}\n\nfunction Sidebar({\n  side = \"left\",\n  variant = \"sidebar\",\n  collapsible = \"offcanvas\",\n  className,\n  children,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  side?: \"left\" | \"right\"\n  variant?: \"sidebar\" | \"floating\" | \"inset\"\n  collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n}) {\n  const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n  if (collapsible === \"none\") {\n    return (\n      <div\n        data-slot=\"sidebar\"\n        className={cn(\n          \"bg-sidebar text-sidebar-foreground flex h-full w-[var(--sidebar-width)] flex-col\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n\n  if (isMobile) {\n    return (\n      <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n        <SheetContent\n          data-sidebar=\"sidebar\"\n          data-slot=\"sidebar\"\n          data-mobile=\"true\"\n          className=\"bg-sidebar text-sidebar-foreground w-[var(--sidebar-width)] p-0 [&>button]:hidden\"\n          style={\n            {\n              \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n            } as React.CSSProperties\n          }\n          side={side}\n        >\n          <SheetHeader className=\"sr-only\">\n            <SheetTitle>Sidebar</SheetTitle>\n            <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n          </SheetHeader>\n          <div className=\"flex h-full w-full flex-col\">{children}</div>\n        </SheetContent>\n      </Sheet>\n    )\n  }\n\n  return (\n    <div\n      className=\"group peer text-sidebar-foreground hidden md:block\"\n      data-state={state}\n      data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n      data-variant={variant}\n      data-side={side}\n      data-slot=\"sidebar\"\n    >\n      {/* This is what handles the sidebar gap on desktop */}\n      <div\n        data-slot=\"sidebar-gap\"\n        className={cn(\n          \"relative w-[var(--sidebar-width)] bg-transparent transition-[width] duration-200 ease-linear\",\n          \"group-data-[collapsible=offcanvas]:w-0\",\n          \"group-data-[side=right]:rotate-180\",\n          variant === \"floating\" || variant === \"inset\"\n            ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+var(--spacing-4))]\"\n            : \"group-data-[collapsible=icon]:w-[var(--sidebar-width-icon)]\"\n        )}\n      />\n      <div\n        data-slot=\"sidebar-container\"\n        className={cn(\n          \"fixed inset-y-0 z-10 hidden h-svh w-[var(--sidebar-width)] transition-[left,right,width] duration-200 ease-linear md:flex\",\n          side === \"left\"\n            ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n            : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n          // Adjust the padding for floating and inset variants.\n          variant === \"floating\" || variant === \"inset\"\n            ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+var(--spacing-4)+2px)]\"\n            : \"group-data-[collapsible=icon]:w-[var(--sidebar-width-icon)] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n          className\n        )}\n        {...props}\n      >\n        <div\n          data-sidebar=\"sidebar\"\n          data-slot=\"sidebar-inner\"\n          className=\"bg-sidebar group-data-[variant=floating]:border-sidebar-border flex h-full w-full flex-col group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:shadow-sm\"\n        >\n          {children}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction SidebarTrigger({\n  className,\n  onClick,\n  ...props\n}: React.ComponentProps<typeof Button>) {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      data-sidebar=\"trigger\"\n      data-slot=\"sidebar-trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeftIcon />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n}\n\nfunction SidebarRail({ className, ...props }: React.ComponentProps<\"button\">) {\n  const { toggleSidebar } = useSidebar()\n\n  // Note: Tailwind v3.4 doesn't support \"in-\" selectors. So the rail won't work perfectly.\n  return (\n    <button\n      data-sidebar=\"rail\"\n      data-slot=\"sidebar-rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"hover:after:bg-sidebar-border absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear group-data-[side=left]:-right-4 group-data-[side=right]:left-0 after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] sm:flex\",\n        \"in-data-[side=left]:cursor-w-resize in-data-[side=right]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"hover:group-data-[collapsible=offcanvas]:bg-sidebar group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarInset({ className, ...props }: React.ComponentProps<\"main\">) {\n  return (\n    <main\n      data-slot=\"sidebar-inset\"\n      className={cn(\n        \"bg-background relative flex w-full flex-1 flex-col\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow-sm md:peer-data-[variant=inset]:peer-data-[state=collapsed]:ml-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarInput({\n  className,\n  ...props\n}: React.ComponentProps<typeof Input>) {\n  return (\n    <Input\n      data-slot=\"sidebar-input\"\n      data-sidebar=\"input\"\n      className={cn(\"bg-background h-8 w-full shadow-none\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-header\"\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-footer\"\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof Separator>) {\n  return (\n    <Separator\n      data-slot=\"sidebar-separator\"\n      data-sidebar=\"separator\"\n      className={cn(\"bg-sidebar-border mx-2 w-auto\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-content\"\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroup({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-group\"\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupLabel({\n  className,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"div\"> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-group-label\"\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"text-sidebar-foreground/70 ring-sidebar-ring flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium outline-hidden transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:h-4 [&>svg]:w-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupAction({\n  className,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-group-action\"\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground absolute top-3.5 right-3 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 md:after:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupContent({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-group-content\"\n      data-sidebar=\"group-content\"\n      className={cn(\"w-full text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenu({ className, ...props }: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n      data-slot=\"sidebar-menu\"\n      data-sidebar=\"menu\"\n      className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuItem({ className, ...props }: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"sidebar-menu-item\"\n      data-sidebar=\"menu-item\"\n      className={cn(\"group/menu-item relative\", className)}\n      {...props}\n    />\n  )\n}\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-hidden ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-data-[sidebar=menu-action]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:w-8! group-data-[collapsible=icon]:h-8! group-data-[collapsible=icon]:p-2! [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:p-0!\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction SidebarMenuButton({\n  asChild = false,\n  isActive = false,\n  variant = \"default\",\n  size = \"default\",\n  tooltip,\n  className,\n  ...props\n}: React.ComponentProps<\"button\"> & {\n  asChild?: boolean\n  isActive?: boolean\n  tooltip?: string | React.ComponentProps<typeof TooltipContent>\n} & VariantProps<typeof sidebarMenuButtonVariants>) {\n  const Comp = asChild ? Slot : \"button\"\n  const { isMobile, state } = useSidebar()\n\n  const button = (\n    <Comp\n      data-slot=\"sidebar-menu-button\"\n      data-sidebar=\"menu-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n      {...props}\n    />\n  )\n\n  if (!tooltip) {\n    return button\n  }\n\n  if (typeof tooltip === \"string\") {\n    tooltip = {\n      children: tooltip,\n    }\n  }\n\n  return (\n    <Tooltip>\n      <TooltipTrigger asChild>{button}</TooltipTrigger>\n      <TooltipContent\n        side=\"right\"\n        align=\"center\"\n        hidden={state !== \"collapsed\" || isMobile}\n        {...tooltip}\n      />\n    </Tooltip>\n  )\n}\n\nfunction SidebarMenuAction({\n  className,\n  asChild = false,\n  showOnHover = false,\n  ...props\n}: React.ComponentProps<\"button\"> & {\n  asChild?: boolean\n  showOnHover?: boolean\n}) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-menu-action\"\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground peer-hover/menu-button:text-sidebar-accent-foreground absolute top-1.5 right-1 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 md:after:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"peer-data-[active=true]/menu-button:text-sidebar-accent-foreground group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuBadge({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-menu-badge\"\n      data-sidebar=\"menu-badge\"\n      className={cn(\n        \"text-sidebar-foreground pointer-events-none absolute right-1 flex h-5 min-w-5 items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums select-none\",\n        \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSkeleton({\n  className,\n  showIcon = false,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  showIcon?: boolean\n}) {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      data-slot=\"sidebar-menu-skeleton\"\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[var(--skeleton-width)] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n}\n\nfunction SidebarMenuSub({ className, ...props }: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n      data-slot=\"sidebar-menu-sub\"\n      data-sidebar=\"menu-sub\"\n      className={cn(\n        \"border-sidebar-border mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l px-2.5 py-0.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSubItem({\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"sidebar-menu-sub-item\"\n      data-sidebar=\"menu-sub-item\"\n      className={cn(\"group/menu-sub-item relative\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSubButton({\n  asChild = false,\n  size = \"md\",\n  isActive = false,\n  className,\n  ...props\n}: React.ComponentProps<\"a\"> & {\n  asChild?: boolean\n  size?: \"sm\" | \"md\"\n  isActive?: boolean\n}) {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-menu-sub-button\"\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground active:bg-sidebar-accent active:text-sidebar-accent-foreground [&>svg]:text-sidebar-accent-foreground flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 outline outline-2 outline-transparent outline-offset-2 focus-visible:ring-2 disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":21846},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/lib/authUtils.ts":{"content":"// Reference: Replit Auth integration blueprint\nexport function isUnauthorizedError(error: Error): boolean {\n  return /^401: .*Unauthorized/.test(error.message);\n}\n","size_bytes":164},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\n\ndeclare module 'http' {\n  interface IncomingMessage {\n    rawBody: unknown\n  }\n}\napp.use(express.json({\n  verify: (req, _res, buf) => {\n    req.rawBody = buf;\n  }\n}));\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2210},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/pages/evidence.tsx":{"content":"import { useState } from \"react\";\nimport { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { \n  Upload, \n  Image as ImageIcon, \n  Hash, \n  MapPin, \n  Calendar, \n  Camera,\n  CheckCircle2,\n  AlertTriangle,\n  FileImage\n} from \"lucide-react\";\nimport { useToast } from \"@/hooks/use-toast\";\n\nexport default function ImageForensics() {\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [preview, setPreview] = useState<string | null>(null);\n  const [analyzing, setAnalyzing] = useState(false);\n  const [results, setResults] = useState<any>(null);\n  const { toast } = useToast();\n\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      setSelectedFile(file);\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        setPreview(event.target?.result as string);\n      };\n      reader.readAsDataURL(file);\n      setResults(null);\n    }\n  };\n\n  const simulateAnalysis = () => {\n    setAnalyzing(true);\n    setTimeout(() => {\n      setResults({\n        sha256: \"a3c4f5e2b1d8c9f7e6a5b4c3d2e1f0a9b8c7d6e5f4a3b2c1d0e9f8a7b6c5d4e3\",\n        fileSize: \"2.4 MB\",\n        dimensions: \"3024 x 4032\",\n        format: \"JPEG\",\n        tamperingScore: 12,\n        tampered: false,\n        metadata: {\n          camera: \"Apple iPhone 14 Pro\",\n          dateTaken: \"2025-01-15 14:23:45\",\n          gpsLocation: \"37.7749°N, 122.4194°W\",\n          software: \"iOS 17.2.1\",\n          fNumber: \"f/1.78\",\n          iso: \"ISO 64\",\n          exposureTime: \"1/120s\",\n        },\n      });\n      setAnalyzing(false);\n      toast({\n        title: \"Analysis Complete\",\n        description: \"Image forensic analysis completed successfully\",\n      });\n    }, 2000);\n  };\n\n  return (\n    <div className=\"space-y-6 p-6\">\n      {/* Header */}\n      <div>\n        <h1 className=\"text-3xl font-semibold\">Image Forensics</h1>\n        <p className=\"text-muted-foreground\">\n          EXIF metadata extraction, tampering detection, and hash verification\n        </p>\n      </div>\n\n      <div className=\"grid gap-6 lg:grid-cols-2\">\n        {/* Upload Section */}\n        <Card className=\"p-6\">\n          <h3 className=\"mb-4 text-lg font-semibold\">Upload Image for Analysis</h3>\n          \n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-center\">\n              {preview ? (\n                <div className=\"relative w-full\">\n                  <img\n                    src={preview}\n                    alt=\"Preview\"\n                    className=\"max-h-96 w-full rounded-lg object-contain border border-border\"\n                  />\n                </div>\n              ) : (\n                <label className=\"flex min-h-48 w-full cursor-pointer flex-col items-center justify-center rounded-lg border-2 border-dashed border-border hover-elevate active-elevate-2\">\n                  <FileImage className=\"mb-3 h-12 w-12 text-muted-foreground\" />\n                  <p className=\"text-sm text-muted-foreground\">\n                    Click to upload or drag and drop\n                  </p>\n                  <p className=\"text-xs text-muted-foreground\">\n                    PNG, JPG, JPEG up to 10MB\n                  </p>\n                  <Input\n                    type=\"file\"\n                    className=\"hidden\"\n                    accept=\"image/*\"\n                    onChange={handleFileChange}\n                    data-testid=\"input-image-upload\"\n                  />\n                </label>\n              )}\n            </div>\n\n            {selectedFile && (\n              <div className=\"space-y-2\">\n                <p className=\"text-sm font-medium\">Selected File:</p>\n                <div className=\"rounded-lg bg-muted p-3\">\n                  <p className=\"text-sm font-mono\">{selectedFile.name}</p>\n                  <p className=\"text-xs text-muted-foreground\">\n                    {(selectedFile.size / 1024 / 1024).toFixed(2)} MB\n                  </p>\n                </div>\n              </div>\n            )}\n\n            <div className=\"flex gap-2\">\n              {selectedFile && !results && (\n                <Button\n                  onClick={simulateAnalysis}\n                  disabled={analyzing}\n                  className=\"flex-1\"\n                  data-testid=\"button-analyze\"\n                >\n                  {analyzing ? (\n                    <>\n                      <div className=\"mr-2 h-4 w-4 animate-spin rounded-full border-2 border-primary-foreground border-t-transparent\" />\n                      Analyzing...\n                    </>\n                  ) : (\n                    <>\n                      <Upload className=\"mr-1 h-4 w-4\" />\n                      Analyze Image\n                    </>\n                  )}\n                </Button>\n              )}\n              {selectedFile && (\n                <Button\n                  variant=\"outline\"\n                  onClick={() => {\n                    setSelectedFile(null);\n                    setPreview(null);\n                    setResults(null);\n                  }}\n                  data-testid=\"button-clear\"\n                >\n                  Clear\n                </Button>\n              )}\n            </div>\n          </div>\n        </Card>\n\n        {/* Results Section */}\n        <Card className=\"p-6\">\n          <h3 className=\"mb-4 text-lg font-semibold\">Analysis Results</h3>\n          \n          {!results ? (\n            <div className=\"flex min-h-48 flex-col items-center justify-center rounded-lg border-2 border-dashed border-border\">\n              <ImageIcon className=\"mb-3 h-12 w-12 text-muted-foreground\" />\n              <p className=\"text-sm text-muted-foreground\">\n                Upload and analyze an image to see results\n              </p>\n            </div>\n          ) : (\n            <div className=\"space-y-4\">\n              {/* Tampering Status */}\n              <div className=\"rounded-lg border border-border p-4\">\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm font-medium\">Tampering Detection</span>\n                  {results.tampered ? (\n                    <Badge variant=\"destructive\" className=\"gap-1\">\n                      <AlertTriangle className=\"h-3 w-3\" />\n                      Tampered\n                    </Badge>\n                  ) : (\n                    <Badge className=\"gap-1 bg-chart-4/10 text-chart-4\">\n                      <CheckCircle2 className=\"h-3 w-3\" />\n                      Authentic\n                    </Badge>\n                  )}\n                </div>\n                <div className=\"mt-2\">\n                  <div className=\"text-xs text-muted-foreground\">\n                    Confidence Score: {100 - results.tamperingScore}%\n                  </div>\n                  <div className=\"mt-2 h-2 w-full overflow-hidden rounded-full bg-muted\">\n                    <div\n                      className=\"h-full bg-chart-4\"\n                      style={{ width: `${100 - results.tamperingScore}%` }}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              {/* Hash Verification */}\n              <div className=\"space-y-2\">\n                <div className=\"flex items-center gap-2\">\n                  <Hash className=\"h-4 w-4 text-muted-foreground\" />\n                  <span className=\"text-sm font-medium\">SHA-256 Hash</span>\n                </div>\n                <div className=\"rounded-lg bg-muted p-3\">\n                  <p className=\"break-all font-mono text-xs\" data-testid=\"text-sha256\">\n                    {results.sha256}\n                  </p>\n                </div>\n              </div>\n\n              {/* File Info */}\n              <div className=\"grid grid-cols-2 gap-3\">\n                <div className=\"rounded-lg border border-border p-3\">\n                  <p className=\"text-xs text-muted-foreground\">File Size</p>\n                  <p className=\"font-medium\">{results.fileSize}</p>\n                </div>\n                <div className=\"rounded-lg border border-border p-3\">\n                  <p className=\"text-xs text-muted-foreground\">Dimensions</p>\n                  <p className=\"font-medium\">{results.dimensions}</p>\n                </div>\n              </div>\n            </div>\n          )}\n        </Card>\n      </div>\n\n      {/* EXIF Metadata */}\n      {results && (\n        <Card className=\"p-6\">\n          <h3 className=\"mb-4 text-lg font-semibold\">EXIF Metadata</h3>\n          <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n            <div className=\"space-y-1\">\n              <div className=\"flex items-center gap-2 text-muted-foreground\">\n                <Camera className=\"h-4 w-4\" />\n                <span className=\"text-sm\">Camera</span>\n              </div>\n              <p className=\"font-medium\">{results.metadata.camera}</p>\n            </div>\n            <div className=\"space-y-1\">\n              <div className=\"flex items-center gap-2 text-muted-foreground\">\n                <Calendar className=\"h-4 w-4\" />\n                <span className=\"text-sm\">Date Taken</span>\n              </div>\n              <p className=\"font-medium\">{results.metadata.dateTaken}</p>\n            </div>\n            <div className=\"space-y-1\">\n              <div className=\"flex items-center gap-2 text-muted-foreground\">\n                <MapPin className=\"h-4 w-4\" />\n                <span className=\"text-sm\">GPS Location</span>\n              </div>\n              <p className=\"font-medium\">{results.metadata.gpsLocation}</p>\n            </div>\n            <div className=\"space-y-1\">\n              <p className=\"text-sm text-muted-foreground\">Software</p>\n              <p className=\"font-medium\">{results.metadata.software}</p>\n            </div>\n            <div className=\"space-y-1\">\n              <p className=\"text-sm text-muted-foreground\">F-Number</p>\n              <p className=\"font-medium\">{results.metadata.fNumber}</p>\n            </div>\n            <div className=\"space-y-1\">\n              <p className=\"text-sm text-muted-foreground\">ISO</p>\n              <p className=\"font-medium\">{results.metadata.iso}</p>\n            </div>\n            <div className=\"space-y-1\">\n              <p className=\"text-sm text-muted-foreground\">Exposure Time</p>\n              <p className=\"font-medium\">{results.metadata.exposureTime}</p>\n            </div>\n          </div>\n        </Card>\n      )}\n    </div>\n  );\n}\n","size_bytes":10610},"client/src/components/app-sidebar.tsx":{"content":"import {\n  Shield,\n  FileText,\n  Image,\n  Smartphone,\n  Network,\n  Mail,\n  Search,\n  UserCircle,\n  FileWarning,\n  Database,\n  Lock,\n  Globe,\n  Plane,\n  Car,\n  MapPin,\n  Mic,\n  Video,\n  HardDrive,\n  Cloud,\n  Bitcoin,\n  AlertTriangle,\n  Brain,\n  ScanEye,\n  Fingerprint,\n  Radio,\n  Bug,\n  Users,\n  TrendingUp,\n  Truck,\n  FileCheck,\n  Folder,\n  BarChart3,\n  Settings,\n} from \"lucide-react\";\n\nimport {\n  Sidebar,\n  SidebarContent,\n  SidebarGroup,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarHeader,\n  SidebarFooter,\n} from \"@/components/ui/sidebar\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n} from \"@/components/ui/collapsible\";\nimport { ChevronDown } from \"lucide-react\";\nimport { Badge } from \"@/components/ui/badge\";\n\nconst moduleCategories = [\n  {\n    category: \"AI & Media Analysis\",\n    modules: [\n      { title: \"AI/Deepfake Detection\", url: \"/modules/ai-deepfake\", icon: Brain },\n      { title: \"Image Forensics\", url: \"/modules/image-forensics\", icon: Image },\n      { title: \"Video/CCTV Analysis\", url: \"/modules/video-analysis\", icon: Video },\n      { title: \"Audio Forensics\", url: \"/modules/audio-forensics\", icon: Mic },\n      { title: \"Steganography Detection\", url: \"/modules/steganography\", icon: ScanEye },\n    ],\n  },\n  {\n    category: \"Network & Communications\",\n    modules: [\n      { title: \"Network Traffic Analysis\", url: \"/modules/network-traffic\", icon: Network },\n      { title: \"Email Forensics\", url: \"/modules/email-forensics\", icon: Mail },\n      { title: \"CDR/IPDR Analysis\", url: \"/modules/cdr-analysis\", icon: Radio },\n      { title: \"Dark Web Investigation\", url: \"/modules/dark-web\", icon: Globe },\n      { title: \"Browser Forensics\", url: \"/modules/browser-forensics\", icon: Search },\n    ],\n  },\n  {\n    category: \"Device & Hardware\",\n    modules: [\n      { title: \"Mobile Forensics\", url: \"/modules/mobile-forensics\", icon: Smartphone },\n      { title: \"Disk Forensics\", url: \"/modules/disk-forensics\", icon: HardDrive },\n      { title: \"Drone Forensics\", url: \"/modules/drone-forensics\", icon: Plane },\n      { title: \"Vehicle Forensics\", url: \"/modules/vehicle-forensics\", icon: Car },\n      { title: \"GPS Analysis\", url: \"/modules/gps-analysis\", icon: MapPin },\n    ],\n  },\n  {\n    category: \"Financial & Fraud\",\n    modules: [\n      { title: \"Banking Fraud Investigation\", url: \"/modules/banking-fraud\", icon: TrendingUp },\n      { title: \"AML/CTF Investigation\", url: \"/modules/aml-ctf\", icon: BarChart3 },\n      { title: \"Blockchain Tracing\", url: \"/modules/blockchain\", icon: Bitcoin },\n      { title: \"Financial Audit\", url: \"/modules/financial-audit\", icon: FileCheck },\n    ],\n  },\n  {\n    category: \"Social & OSINT\",\n    modules: [\n      { title: \"Social Media Forensics\", url: \"/modules/social-media\", icon: Users },\n      { title: \"OSINT Intelligence\", url: \"/modules/osint\", icon: Search },\n      { title: \"Face Recognition\", url: \"/modules/face-recognition\", icon: Fingerprint },\n      { title: \"Document Forgery Detection\", url: \"/modules/document-forgery\", icon: FileWarning },\n    ],\n  },\n  {\n    category: \"Security & Malware\",\n    modules: [\n      { title: \"Malware Analysis\", url: \"/modules/malware-analysis\", icon: Bug },\n      { title: \"Sandbox Environment\", url: \"/modules/sandbox\", icon: Shield },\n      { title: \"Password Recovery\", url: \"/modules/password-recovery\", icon: Lock },\n      { title: \"Security Audit\", url: \"/modules/security-audit\", icon: AlertTriangle },\n    ],\n  },\n  {\n    category: \"Case Management\",\n    modules: [\n      { title: \"Case Management\", url: \"/cases\", icon: Folder },\n      { title: \"Evidence Management\", url: \"/evidence\", icon: Database },\n      { title: \"E-Discovery\", url: \"/modules/e-discovery\", icon: FileText },\n      { title: \"CSAM Controls\", url: \"/modules/csam\", icon: AlertTriangle },\n    ],\n  },\n  {\n    category: \"Data & Cloud\",\n    modules: [\n      { title: \"Cloud Evidence\", url: \"/modules/cloud-evidence\", icon: Cloud },\n      { title: \"Big Data Analysis\", url: \"/modules/big-data\", icon: Database },\n      { title: \"Field Acquisition\", url: \"/modules/field-acquisition\", icon: Truck },\n    ],\n  },\n];\n\nexport function AppSidebar() {\n  const { user } = useAuth();\n\n  return (\n    <Sidebar>\n      <SidebarHeader className=\"border-b border-sidebar-border p-4\">\n        <div className=\"flex items-center gap-3\">\n          <div className=\"flex h-10 w-10 items-center justify-center rounded-lg bg-primary\">\n            <Shield className=\"h-6 w-6 text-primary-foreground\" />\n          </div>\n          <div>\n            <h2 className=\"text-lg font-semibold\">CPT</h2>\n            <p className=\"text-xs text-muted-foreground\">Forensics Platform</p>\n          </div>\n        </div>\n      </SidebarHeader>\n\n      <SidebarContent className=\"px-2\">\n        {moduleCategories.map((category) => (\n          <Collapsible key={category.category} defaultOpen className=\"group/collapsible\">\n            <SidebarGroup>\n              <SidebarGroupLabel asChild>\n                <CollapsibleTrigger className=\"flex w-full items-center justify-between hover-elevate active-elevate-2 rounded-md px-2\">\n                  <span className=\"text-xs font-medium\">{category.category}</span>\n                  <ChevronDown className=\"h-4 w-4 transition-transform group-data-[state=open]/collapsible:rotate-180\" />\n                </CollapsibleTrigger>\n              </SidebarGroupLabel>\n              <CollapsibleContent>\n                <SidebarGroupContent>\n                  <SidebarMenu>\n                    {category.modules.map((module) => (\n                      <SidebarMenuItem key={module.title}>\n                        <SidebarMenuButton asChild data-testid={`sidebar-${module.url}`}>\n                          <a href={module.url}>\n                            <module.icon className=\"h-4 w-4\" />\n                            <span className=\"text-sm\">{module.title}</span>\n                          </a>\n                        </SidebarMenuButton>\n                      </SidebarMenuItem>\n                    ))}\n                  </SidebarMenu>\n                </SidebarGroupContent>\n              </CollapsibleContent>\n            </SidebarGroup>\n          </Collapsible>\n        ))}\n      </SidebarContent>\n\n      <SidebarFooter className=\"border-t border-sidebar-border p-4\">\n        {user && (\n          <div className=\"flex items-center gap-3\">\n            <Avatar className=\"h-9 w-9\">\n              <AvatarImage src={user.profileImageUrl || undefined} />\n              <AvatarFallback>\n                {user.firstName?.[0] || user.email?.[0]?.toUpperCase() || \"U\"}\n              </AvatarFallback>\n            </Avatar>\n            <div className=\"flex-1 min-w-0\">\n              <p className=\"text-sm font-medium truncate\" data-testid=\"text-user-name\">\n                {user.firstName && user.lastName\n                  ? `${user.firstName} ${user.lastName}`\n                  : user.email}\n              </p>\n              <Badge variant=\"secondary\" className=\"text-xs capitalize\">\n                {user.role}\n              </Badge>\n            </div>\n          </div>\n        )}\n      </SidebarFooter>\n    </Sidebar>\n  );\n}\n","size_bytes":7334},"client/src/pages/modules/ai-deepfake.tsx":{"content":"import { useState } from \"react\";\nimport { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Brain, Upload, AlertTriangle, CheckCircle2, FileImage } from \"lucide-react\";\nimport { useToast } from \"@/hooks/use-toast\";\n\nexport default function AIDeepfake() {\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [preview, setPreview] = useState<string | null>(null);\n  const [analyzing, setAnalyzing] = useState(false);\n  const [results, setResults] = useState<any>(null);\n  const { toast } = useToast();\n\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      setSelectedFile(file);\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        setPreview(event.target?.result as string);\n      };\n      reader.readAsDataURL(file);\n      setResults(null);\n    }\n  };\n\n  const simulateAnalysis = () => {\n    setAnalyzing(true);\n    setTimeout(() => {\n      const isDeepfake = Math.random() > 0.7;\n      setResults({\n        isDeepfake,\n        confidence: isDeepfake ? 87 : 94,\n        aiModel: \"DeepFake Detection v3.2\",\n        indicators: isDeepfake ? [\n          { name: \"Facial Inconsistency\", score: 78 },\n          { name: \"Lighting Artifacts\", score: 82 },\n          { name: \"Edge Anomalies\", score: 91 },\n          { name: \"Texture Analysis\", score: 85 },\n        ] : [\n          { name: \"Natural Features\", score: 95 },\n          { name: \"Consistent Lighting\", score: 93 },\n          { name: \"Authentic Edges\", score: 96 },\n          { name: \"Genuine Texture\", score: 92 },\n        ],\n      });\n      setAnalyzing(false);\n      toast({\n        title: \"Analysis Complete\",\n        description: isDeepfake ? \"Potential deepfake detected\" : \"Image appears authentic\",\n      });\n    }, 2500);\n  };\n\n  return (\n    <div className=\"space-y-6 p-6\">\n      {/* Header */}\n      <div>\n        <h1 className=\"text-3xl font-semibold\">AI / Deepfake Detection</h1>\n        <p className=\"text-muted-foreground\">\n          Advanced AI-powered detection of deepfake images and manipulated media\n        </p>\n      </div>\n\n      <div className=\"grid gap-6 lg:grid-cols-2\">\n        {/* Upload Section */}\n        <Card className=\"p-6\">\n          <h3 className=\"mb-4 text-lg font-semibold flex items-center gap-2\">\n            <Brain className=\"h-5 w-5 text-primary\" />\n            Upload Media for Analysis\n          </h3>\n          \n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-center\">\n              {preview ? (\n                <div className=\"relative w-full\">\n                  <img\n                    src={preview}\n                    alt=\"Preview\"\n                    className=\"max-h-96 w-full rounded-lg object-contain border border-border\"\n                  />\n                </div>\n              ) : (\n                <label className=\"flex min-h-48 w-full cursor-pointer flex-col items-center justify-center rounded-lg border-2 border-dashed border-border hover-elevate active-elevate-2\">\n                  <FileImage className=\"mb-3 h-12 w-12 text-muted-foreground\" />\n                  <p className=\"text-sm text-muted-foreground\">\n                    Click to upload image or video\n                  </p>\n                  <p className=\"text-xs text-muted-foreground\">\n                    Supported: PNG, JPG, MP4, AVI up to 50MB\n                  </p>\n                  <Input\n                    type=\"file\"\n                    className=\"hidden\"\n                    accept=\"image/*,video/*\"\n                    onChange={handleFileChange}\n                    data-testid=\"input-deepfake-upload\"\n                  />\n                </label>\n              )}\n            </div>\n\n            {selectedFile && (\n              <div className=\"space-y-2\">\n                <p className=\"text-sm font-medium\">Selected File:</p>\n                <div className=\"rounded-lg bg-muted p-3\">\n                  <p className=\"text-sm font-mono\">{selectedFile.name}</p>\n                  <p className=\"text-xs text-muted-foreground\">\n                    {(selectedFile.size / 1024 / 1024).toFixed(2)} MB\n                  </p>\n                </div>\n              </div>\n            )}\n\n            <div className=\"flex gap-2\">\n              {selectedFile && !results && (\n                <Button\n                  onClick={simulateAnalysis}\n                  disabled={analyzing}\n                  className=\"flex-1\"\n                  data-testid=\"button-analyze-deepfake\"\n                >\n                  {analyzing ? (\n                    <>\n                      <div className=\"mr-2 h-4 w-4 animate-spin rounded-full border-2 border-primary-foreground border-t-transparent\" />\n                      Analyzing with AI...\n                    </>\n                  ) : (\n                    <>\n                      <Upload className=\"mr-1 h-4 w-4\" />\n                      Analyze for Deepfake\n                    </>\n                  )}\n                </Button>\n              )}\n              {selectedFile && (\n                <Button\n                  variant=\"outline\"\n                  onClick={() => {\n                    setSelectedFile(null);\n                    setPreview(null);\n                    setResults(null);\n                  }}\n                  data-testid=\"button-clear-deepfake\"\n                >\n                  Clear\n                </Button>\n              )}\n            </div>\n          </div>\n        </Card>\n\n        {/* Results Section */}\n        <Card className=\"p-6\">\n          <h3 className=\"mb-4 text-lg font-semibold\">Detection Results</h3>\n          \n          {!results ? (\n            <div className=\"flex min-h-48 flex-col items-center justify-center rounded-lg border-2 border-dashed border-border\">\n              <Brain className=\"mb-3 h-12 w-12 text-muted-foreground\" />\n              <p className=\"text-sm text-muted-foreground\">\n                Upload media to begin AI analysis\n              </p>\n            </div>\n          ) : (\n            <div className=\"space-y-4\">\n              {/* Detection Status */}\n              <div className=\"rounded-lg border border-border p-6 text-center\">\n                {results.isDeepfake ? (\n                  <>\n                    <div className=\"mx-auto mb-3 flex h-16 w-16 items-center justify-center rounded-full bg-destructive/10\">\n                      <AlertTriangle className=\"h-8 w-8 text-destructive\" />\n                    </div>\n                    <Badge variant=\"destructive\" className=\"mb-2\">\n                      Deepfake Detected\n                    </Badge>\n                  </>\n                ) : (\n                  <>\n                    <div className=\"mx-auto mb-3 flex h-16 w-16 items-center justify-center rounded-full bg-chart-4/10\">\n                      <CheckCircle2 className=\"h-8 w-8 text-chart-4\" />\n                    </div>\n                    <Badge className=\"mb-2 bg-chart-4/10 text-chart-4\">\n                      Appears Authentic\n                    </Badge>\n                  </>\n                )}\n                <p className=\"text-2xl font-bold\" data-testid=\"text-confidence\">\n                  {results.confidence}% Confidence\n                </p>\n                <p className=\"text-sm text-muted-foreground\">\n                  {results.aiModel}\n                </p>\n              </div>\n\n              {/* Indicators */}\n              <div className=\"space-y-2\">\n                <p className=\"text-sm font-medium\">Analysis Indicators</p>\n                {results.indicators.map((indicator: any, index: number) => (\n                  <div key={index} className=\"space-y-1\">\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm\">{indicator.name}</span>\n                      <span className=\"text-sm text-muted-foreground\">\n                        {indicator.score}%\n                      </span>\n                    </div>\n                    <div className=\"h-2 w-full overflow-hidden rounded-full bg-muted\">\n                      <div\n                        className={`h-full ${\n                          results.isDeepfake\n                            ? indicator.score > 85\n                              ? \"bg-destructive\"\n                              : \"bg-chart-5\"\n                            : \"bg-chart-4\"\n                        }`}\n                        style={{ width: `${indicator.score}%` }}\n                      />\n                    </div>\n                  </div>\n                ))}\n              </div>\n\n              <div className=\"rounded-lg bg-muted p-3\">\n                <p className=\"text-xs text-muted-foreground\">\n                  {results.isDeepfake\n                    ? \"⚠️ This media shows signs of AI manipulation. Further investigation recommended.\"\n                    : \"✓ No significant manipulation detected. Media appears to be authentic.\"}\n                </p>\n              </div>\n            </div>\n          )}\n        </Card>\n      </div>\n    </div>\n  );\n}\n","size_bytes":9224},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"attached_assets/forensics_platform_docs_1761898318003.tsx":{"content":"import React, { useState } from 'react';\nimport { FileText, Database, Network, Shield, Workflow, Code, Lock, CheckCircle } from 'lucide-react';\n\nconst ForensicsPlatformDocs = () => {\n  const [activeTab, setActiveTab] = useState('architecture');\n\n  const tabs = [\n    { id: 'architecture', label: 'System Architecture', icon: Network },\n    { id: 'database', label: 'Database Schema', icon: Database },\n    { id: 'modules', label: 'Module Features', icon: FileText },\n    { id: 'workflows', label: 'Workflows', icon: Workflow },\n    { id: 'ui', label: 'UI Wireframes', icon: Code },\n    { id: 'tech', label: 'Tech Stack', icon: Code },\n    { id: 'security', label: 'Security & Compliance', icon: Shield }\n  ];\n\n  const architectureContent = (\n    <div className=\"space-y-6\">\n      <h2 className=\"text-2xl font-bold text-gray-800\">System Architecture</h2>\n      \n      <div className=\"bg-white p-6 rounded-lg shadow\">\n        <h3 className=\"text-xl font-semibold mb-4\">Three-Tier Architecture</h3>\n        <div className=\"space-y-4\">\n          <div className=\"border-l-4 border-blue-500 pl-4\">\n            <h4 className=\"font-semibold text-lg\">Layer 1: Presentation Tier (Frontend)</h4>\n            <ul className=\"list-disc ml-6 mt-2 space-y-1\">\n              <li>React.js with TypeScript for type safety</li>\n              <li>Redux Toolkit for state management</li>\n              <li>Tailwind CSS + shadcn/ui for UI components</li>\n              <li>Recharts & D3.js for data visualization</li>\n              <li>React Query for server state management</li>\n              <li>WebSocket for real-time updates</li>\n            </ul>\n          </div>\n\n          <div className=\"border-l-4 border-green-500 pl-4\">\n            <h4 className=\"font-semibold text-lg\">Layer 2: Application Tier (Backend)</h4>\n            <ul className=\"list-disc ml-6 mt-2 space-y-1\">\n              <li>Python FastAPI for main REST API services</li>\n              <li>Go microservices for high-performance modules (network analysis, PCAP processing)</li>\n              <li>Node.js for real-time communication (Socket.io)</li>\n              <li>Celery + Redis for async task queue</li>\n              <li>Nginx reverse proxy with load balancing</li>\n              <li>Docker containers orchestrated by Kubernetes</li>\n            </ul>\n          </div>\n\n          <div className=\"border-l-4 border-purple-500 pl-4\">\n            <h4 className=\"font-semibold text-lg\">Layer 3: Data Tier</h4>\n            <ul className=\"list-disc ml-6 mt-2 space-y-1\">\n              <li>PostgreSQL (primary relational database) with TimescaleDB extension for time-series data</li>\n              <li>MongoDB for unstructured evidence (documents, logs, JSON data)</li>\n              <li>Redis for caching and session management</li>\n              <li>MinIO/S3 for object storage (images, videos, disk images)</li>\n              <li>Elasticsearch for full-text search and log aggregation</li>\n              <li>Neo4j graph database for relationship mapping (social networks, transactions)</li>\n            </ul>\n          </div>\n\n          <div className=\"border-l-4 border-red-500 pl-4\">\n            <h4 className=\"font-semibold text-lg\">Layer 4: Processing & AI Tier</h4>\n            <ul className=\"list-disc ml-6 mt-2 space-y-1\">\n              <li>TensorFlow/PyTorch GPU cluster for AI/ML models</li>\n              <li>Apache Spark for big data processing</li>\n              <li>FFmpeg for media processing</li>\n              <li>Cuckoo Sandbox for malware analysis</li>\n              <li>Dedicated GPU nodes for deepfake detection, face recognition</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"bg-white p-6 rounded-lg shadow\">\n        <h3 className=\"text-xl font-semibold mb-4\">Architecture Diagram (Text Representation)</h3>\n        <pre className=\"bg-gray-100 p-4 rounded text-sm overflow-x-auto\">\n{`┌─────────────────────────────────────────────────────────────┐\n│                    PRESENTATION LAYER                        │\n│  ┌──────────┐  ┌──────────┐  ┌──────────┐  ┌──────────┐   │\n│  │ Web App  │  │  Mobile  │  │  Field   │  │  Admin   │   │\n│  │ (React)  │  │   App    │  │  Tablet  │  │  Portal  │   │\n│  └──────────┘  └──────────┘  └──────────┘  └──────────┘   │\n└────────────────────────┬────────────────────────────────────┘\n                         │ HTTPS/WSS\n┌────────────────────────┴────────────────────────────────────┐\n│                   API GATEWAY LAYER                          │\n│  ┌─────────────────────────────────────────────────────┐   │\n│  │  Nginx Reverse Proxy + Load Balancer                │   │\n│  │  - SSL/TLS Termination                              │   │\n│  │  - Rate Limiting                                     │   │\n│  │  - Authentication Gateway (JWT)                     │   │\n│  └─────────────────────────────────────────────────────┘   │\n└────────────────────────┬────────────────────────────────────┘\n                         │\n┌────────────────────────┴────────────────────────────────────┐\n│                  APPLICATION LAYER                           │\n│ ┌──────────────┐  ┌──────────────┐  ┌──────────────┐      │\n│ │   FastAPI    │  │  Go Services │  │   Node.js    │      │\n│ │   Services   │  │  (Network/   │  │  (Real-time) │      │\n│ │              │  │   PCAP)      │  │              │      │\n│ └──────────────┘  └──────────────┘  └──────────────┘      │\n│                                                              │\n│ ┌──────────────────────────────────────────────────────┐   │\n│ │          Microservices Architecture                  │   │\n│ │  • Auth Service        • Case Management            │   │\n│ │  • Evidence Service    • AI/ML Service              │   │\n│ │  • Reporting Service   • Analysis Engine            │   │\n│ │  • Audit Log Service   • Export Service             │   │\n│ └──────────────────────────────────────────────────────┘   │\n└────────────────────────┬────────────────────────────────────┘\n                         │\n┌────────────────────────┴────────────────────────────────────┐\n│                   MESSAGE QUEUE LAYER                        │\n│  ┌─────────────┐     ┌──────────────┐                      │\n│  │   Redis     │     │    Celery    │                      │\n│  │   Queue     │────▶│  Task Queue  │                      │\n│  └─────────────┘     └──────────────┘                      │\n└────────────────────────┬────────────────────────────────────┘\n                         │\n┌────────────────────────┴────────────────────────────────────┐\n│                     DATA LAYER                               │\n│ ┌─────────────┐ ┌─────────────┐ ┌─────────────┐           │\n│ │ PostgreSQL  │ │   MongoDB   │ │   Neo4j     │           │\n│ │ (Cases,     │ │ (Logs,      │ │ (Graph      │           │\n│ │  Users,     │ │  Evidence)  │ │  Relations) │           │\n│ │  Metadata)  │ │             │ │             │           │\n│ └─────────────┘ └─────────────┘ └─────────────┘           │\n│                                                              │\n│ ┌─────────────┐ ┌─────────────┐ ┌─────────────┐           │\n│ │  MinIO/S3   │ │Elasticsearch│ │    Redis    │           │\n│ │  (Object    │ │  (Search &  │ │   (Cache)   │           │\n│ │   Storage)  │ │   Logging)  │ │             │           │\n│ └─────────────┘ └─────────────┘ └─────────────┘           │\n└────────────────────────┬────────────────────────────────────┘\n                         │\n┌────────────────────────┴────────────────────────────────────┐\n│                  PROCESSING LAYER                            │\n│ ┌─────────────────────────────────────────────────────┐    │\n│ │  GPU Cluster (TensorFlow/PyTorch)                   │    │\n│ │  - Deepfake Detection                               │    │\n│ │  - Face Recognition                                 │    │\n│ │  - Image Analysis                                   │    │\n│ └─────────────────────────────────────────────────────┘    │\n│                                                              │\n│ ┌─────────────────────────────────────────────────────┐    │\n│ │  Apache Spark Cluster                               │    │\n│ │  - Big Data Processing                              │    │\n│ │  - PCAP Analysis                                    │    │\n│ │  - CDR/IPDR Processing                              │    │\n│ └─────────────────────────────────────────────────────┘    │\n│                                                              │\n│ ┌─────────────────────────────────────────────────────┐    │\n│ │  Isolated Sandbox Environment                       │    │\n│ │  - Malware Analysis (Cuckoo Sandbox)                │    │\n│ │  - Suspicious File Execution                        │    │\n│ └─────────────────────────────────────────────────────┘    │\n└──────────────────────────────────────────────────────────────┘`}\n        </pre>\n      </div>\n\n      <div className=\"bg-white p-6 rounded-lg shadow\">\n        <h3 className=\"text-xl font-semibold mb-4\">Deployment Architecture</h3>\n        <ul className=\"list-disc ml-6 space-y-2\">\n          <li><strong>Containerization:</strong> Docker containers for all services</li>\n          <li><strong>Orchestration:</strong> Kubernetes for auto-scaling and management</li>\n          <li><strong>CI/CD:</strong> GitLab CI or Jenkins for automated deployment</li>\n          <li><strong>Monitoring:</strong> Prometheus + Grafana for metrics, ELK stack for logs</li>\n          <li><strong>Backup:</strong> Automated daily backups with encryption, off-site replication</li>\n          <li><strong>High Availability:</strong> Multi-node cluster with automatic failover</li>\n        </ul>\n      </div>\n    </div>\n  );\n\n  const databaseContent = (\n    <div className=\"space-y-6\">\n      <h2 className=\"text-2xl font-bold text-gray-800\">Database Schema Design</h2>\n      \n      <div className=\"bg-white p-6 rounded-lg shadow\">\n        <h3 className=\"text-xl font-semibold mb-4\">PostgreSQL Core Schema</h3>\n        <div className=\"bg-gray-100 p-4 rounded text-sm overflow-x-auto\">\n          <pre className=\"whitespace-pre\">{`-- USERS AND AUTHENTICATION\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n    username VARCHAR(100) UNIQUE NOT NULL,\n    email VARCHAR(255) UNIQUE NOT NULL,\n    password_hash VARCHAR(255) NOT NULL,\n    full_name VARCHAR(255) NOT NULL,\n    badge_number VARCHAR(50) UNIQUE,\n    department VARCHAR(100),\n    role VARCHAR(50) NOT NULL,\n    is_active BOOLEAN DEFAULT TRUE,\n    last_login TIMESTAMP,\n    mfa_enabled BOOLEAN DEFAULT FALSE,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n-- CASES\nCREATE TABLE cases (\n    case_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n    case_number VARCHAR(50) UNIQUE NOT NULL,\n    case_title VARCHAR(500) NOT NULL,\n    case_type VARCHAR(100) NOT NULL,\n    priority VARCHAR(20),\n    status VARCHAR(50),\n    description TEXT,\n    assigned_to UUID REFERENCES users(user_id),\n    created_by UUID REFERENCES users(user_id),\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\n-- EVIDENCE ITEMS\nCREATE TABLE evidence (\n    evidence_id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n    case_id UUID REFERENCES cases(case_id) ON DELETE CASCADE,\n    evidence_number VARCHAR(100) UNIQUE NOT NULL,\n    evidence_type VARCHAR(100) NOT NULL,\n    description TEXT,\n    file_hash_sha256 VARCHAR(64),\n    status VARCHAR(50),\n    chain_of_custody JSONB,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);`}</pre>\n        </div>\n      </div>\n    </div>\n  );\n\n  const modulesContent = (\n    <div className=\"space-y-6\">\n      <h2 className=\"text-2xl font-bold text-gray-800\">Module Features & Specifications</h2>\n      \n      <div className=\"space-y-4\">\n        {[\n          {\n            num: 1,\n            name: \"AI/Deepfake Forensics\",\n            features: [\n              \"Upload and analyze images/videos for deepfake detection\",\n              \"Face morphing detection using AI models\",\n              \"Audio deepfake detection\",\n              \"Frame-by-frame analysis with inconsistency highlighting\",\n              \"Generate confidence score with detailed report\"\n            ]\n          },\n          {\n            num: 2,\n            name: \"Damaged Media Forensics\",\n            features: [\n              \"Support for corrupted images and videos\",\n              \"Video repair with codec analysis\",\n              \"Audio file restoration\",\n              \"Partial recovery with quality assessment\",\n              \"Export recovered media with integrity verification\"\n            ]\n          },\n          {\n            num: 3,\n            name: \"Social Media Forensics\",\n            features: [\n              \"Multi-platform support: Facebook, Instagram, Twitter, LinkedIn\",\n              \"Profile scraping with connection mapping\",\n              \"Post/comment timeline analysis\",\n              \"Network visualization\",\n              \"Geolocation extraction from posts\"\n            ]\n          },\n          {\n            num: 4,\n            name: \"Case Management System\",\n            features: [\n              \"Create, assign, and track investigation cases\",\n              \"Evidence linking and tagging\",\n              \"Task assignment with deadlines\",\n              \"Case timeline visualization\",\n              \"Document generation\"\n            ]\n          },\n          {\n            num: 5,\n            name: \"Predictive Policing Dashboard\",\n            features: [\n              \"Crime hotspot mapping using historical data\",\n              \"Time-series analysis for crime patterns\",\n              \"ML models for crime prediction\",\n              \"Resource allocation recommendations\",\n              \"Interactive heatmaps and trend charts\"\n            ]\n          },\n          {\n            num: 6,\n            name: \"Cyber Forensics Van Integration\",\n            features: [\n              \"Mobile field acquisition interface\",\n              \"Evidence collection workflow\",\n              \"GPS tagging of evidence location\",\n              \"Offline operation mode with sync\",\n              \"Chain of custody documentation\"\n            ]\n          },\n          {\n            num: 7,\n            name: \"Malware Analysis & Sandbox\",\n            features: [\n              \"Cuckoo Sandbox integration\",\n              \"Behavioral analysis of suspicious files\",\n              \"Network traffic monitoring during execution\",\n              \"Registry and file system changes tracking\",\n              \"Threat intelligence integration\"\n            ]\n          },\n          {\n            num: 8,\n            name: \"Network Forensics\",\n            features: [\n              \"Real-time packet capture and analysis\",\n              \"Protocol analysis and reconstruction\",\n              \"Suspicious activity detection\",\n              \"Flow visualization and statistics\",\n              \"Export filtered packets for evidence\"\n            ]\n          },\n          {\n            num: 9,\n            name: \"Email Forensics Suite\",\n            features: [\n              \"Email header analysis\",\n              \"SPF/DKIM/DMARC verification\",\n              \"Phishing detection algorithms\",\n              \"Attachment extraction and scanning\",\n              \"Email thread reconstruction\"\n            ]\n          },\n          {\n            num: 10,\n            name: \"Big Data PCAP Analyzer\",\n            features: [\n              \"Process multi-gigabyte PCAP files\",\n              \"Apache Spark distributed processing\",\n              \"Protocol statistics and summaries\",\n              \"Advanced filtering and search\",\n              \"Export analysis reports\"\n            ]\n          },\n          {\n            num: 11,\n            name: \"CDR/IPDR Analyzer\",\n            features: [\n              \"Import CDR/IPDR from telecom providers\",\n              \"Call pattern analysis\",\n              \"Location tracking via cell towers\",\n              \"Contact network mapping\",\n              \"Timeline visualization\"\n            ]\n          },\n          {\n            num: 12,\n            name: \"Password Recovery Toolkit\",\n            features: [\n              \"Dictionary and brute-force attacks\",\n              \"Hash cracking support\",\n              \"Archive password recovery\",\n              \"WiFi password extraction\",\n              \"GPU-accelerated cracking\"\n            ]\n          },\n          {\n            num: 13,\n            name: \"Web Browser Forensics\",\n            features: [\n              \"History extraction (Chrome, Firefox, Edge, Safari)\",\n              \"Cookie and session analysis\",\n              \"Download history tracking\",\n              \"Cached file recovery\",\n              \"Bookmark and autofill data extraction\"\n            ]\n          },\n          {\n            num: 14,\n            name: \"Quantum Cryptography Lab\",\n            features: [\n              \"Quantum-resistant encryption testing\",\n              \"Post-quantum algorithm research\",\n              \"Encryption strength analysis\",\n              \"Key generation and distribution simulation\",\n              \"Research documentation tools\"\n            ]\n          },\n          {\n            num: 15,\n            name: \"Steganography Detection\",\n            features: [\n              \"LSB analysis for hidden data\",\n              \"Support for images, audio, and video\",\n              \"Statistical analysis methods\",\n              \"Extract hidden payloads\",\n              \"Generate forensic report\"\n            ]\n          },\n          {\n            num: 16,\n            name: \"Security Audit Panel\",\n            features: [\n              \"System vulnerability scanning\",\n              \"Compliance checking\",\n              \"Security configuration review\",\n              \"Penetration testing logs\",\n              \"Audit report generation\"\n            ]\n          },\n          {\n            num: 17,\n            name: \"Financial Forensic Audit\",\n            features: [\n              \"Transaction pattern analysis\",\n              \"Anomaly detection in financial records\",\n              \"Fund flow tracing\",\n              \"Corporate fraud indicators\",\n              \"Benford's Law analysis\"\n            ]\n          },\n          {\n            num: 18,\n            name: \"Full Disk Analyzer\",\n            features: [\n              \"Support for raw disk images\",\n              \"File system analysis\",\n              \"Deleted file recovery\",\n              \"Partition analysis\",\n              \"Export evidence with hash verification\"\n            ]\n          },\n          {\n            num: 19,\n            name: \"Banking Fraud Investigation\",\n            features: [\n              \"UPI/IMPS transaction tracking\",\n              \"Card fraud pattern detection\",\n              \"Account takeover investigation\",\n              \"Mule account identification\",\n              \"Timeline reconstruction of transactions\"\n            ]\n          },\n          {\n            num: 20,\n            name: \"AML/CTF Investigation\",\n            features: [\n              \"Transaction graph mapping\",\n              \"Suspicious activity flagging\",\n              \"Entity relationship visualization\",\n              \"Cross-border transaction tracking\",\n              \"Regulatory compliance reporting\"\n            ]\n          },\n          {\n            num: 21,\n            name: \"Photo Metadata & Hash Verification\",\n            features: [\n              \"EXIF data extraction\",\n              \"Tampering detection algorithms\",\n              \"Hash comparison and verification\",\n              \"GPS location mapping\",\n              \"Camera fingerprint analysis\"\n            ]\n          },\n          {\n            num: 22,\n            name: \"Document Forgery Detection\",\n            features: [\n              \"Font analysis and comparison\",\n              \"Document metadata examination\",\n              \"Signature verification\",\n              \"Ink and paper analysis markers\",\n              \"Version comparison tools\"\n            ]\n          },\n          {\n            num: 23,\n            name: \"E-Discovery & Legal Evidence\",\n            features: [\n              \"Legal hold management\",\n              \"Document review and tagging\",\n              \"Privilege review workflow\",\n              \"Production set creation\",\n              \"Court-ready report generation\"\n            ]\n          },\n          {\n            num: 24,\n            name: \"OSINT Intelligence Toolkit\",\n            features: [\n              \"Multi-source data aggregation\",\n              \"Web scraping and monitoring\",\n              \"Social media intelligence\",\n              \"Public records search\",\n              \"Data correlation and analysis\"\n            ]\n          },\n          {\n            num: 25,\n            name: \"Face Recognition & Deepfake Engine\",\n            features: [\n              \"Face detection and recognition\",\n              \"1:1 and 1:N matching\",\n              \"Deepfake probability scoring\",\n              \"Age, gender, emotion detection\",\n              \"Watch list comparison\"\n            ]\n          },\n          {\n            num: 26,\n            name: \"Dark Web Investigation\",\n            features: [\n              \"Tor network monitoring\",\n              \"Marketplace tracking\",\n              \"Cryptocurrency transaction linking\",\n              \"Vendor profile analysis\",\n              \"Alert system for new listings\"\n            ]\n          },\n          {\n            num: 27,\n            name: \"Drone Forensics\",\n            features: [\n              \"Flight log extraction\",\n              \"GPS route mapping\",\n              \"Media file recovery\",\n              \"Controller data analysis\",\n              \"Manufacturer-specific parsing\"\n            ]\n          },\n          {\n            num: 28,\n            name: \"Vehicle Digital Forensics\",\n            features: [\n              \"ECU data extraction\",\n              \"GPS history recovery\",\n              \"Infotainment system analysis\",\n              \"CAN bus message decoding\",\n              \"Event data recorder parsing\"\n            ]\n          },\n          {\n            num: 29,\n            name: \"GPS Tracking Analyzer\",\n            features: [\n              \"Location history visualization\",\n              \"Route reconstruction\",\n              \"Speed and movement analysis\",\n              \"Geofencing and alerts\",\n              \"Export to KML/GeoJSON\"\n            ]\n          },\n          {\n            num: 30,\n            name: \"Audio Forensics\",\n            features: [\n              \"Noise reduction and enhancement\",\n              \"Speaker verification and identification\",\n              \"Voice comparison analysis\",\n              \"Audio authentication\",\n              \"Transcript generation with timestamps\"\n            ]\n          },\n          {\n            num: 31,\n            name: \"Video/CCTV Analyzer\",\n            features: [\n              \"Multi-format video playback\",\n              \"Frame-by-frame analysis\",\n              \"Object tracking and detection\",\n              \"Export key frames\",\n              \"Video enhancement tools\"\n            ]\n          },\n          {\n            num: 32,\n            name: \"Mobile Forensics\",\n            features: [\n              \"iOS and Android support\",\n              \"App data extraction\",\n              \"Chat message recovery\",\n              \"Deleted file recovery\",\n              \"Logical and physical acquisition\"\n            ]\n          },\n          {\n            num: 33,\n            name: \"Disk Forensics\",\n            features: [\n              \"Deleted file recovery\",\n              \"Disk imaging with verification\",\n              \"File carving techniques\",\n              \"Slack space analysis\",\n              \"Timeline creation\"\n            ]\n          },\n          {\n            num: 34,\n            name: \"Cloud Evidence Acquisition\",\n            features: [\n              \"AWS, Google Drive, iCloud support\",\n              \"OAuth-based authentication\",\n              \"Selective file download\",\n              \"Metadata preservation\",\n              \"Chain of custody documentation\"\n            ]\n          },\n          {\n            num: 35,\n            name: \"Crypto/Blockchain Tracing\",\n            features: [\n              \"Bitcoin, Ethereum transaction tracking\",\n              \"Wallet clustering analysis\",\n              \"Exchange identification\",\n              \"Fund flow visualization\",\n              \"Mixing service detection\"\n            ]\n          },\n          {\n            num: 36,\n            name: \"CSAM Investigation Module\",\n            features: [\n              \"PhotoDNA hash matching\",\n              \"Age detection algorithms\",\n              \"Secure evidence handling\",\n              \"Automatic reporting workflows\",\n              \"Strict access controls and audit logs\"\n            ]\n          }\n        ].map((module) => (\n          <div key={module.num} className=\"bg-white p-4 rounded-lg shadow\">\n            <h3 className=\"text-lg font-semibold text-blue-600 mb-2\">\n              {module.num}. {module.name}\n            </h3>\n            <ul className=\"list-disc ml-6 space-y-1 text-sm\">\n              {module.features.map((feature, idx) => (\n                <li key={idx}>{feature}</li>\n              ))}\n            </ul>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n\n  const workflowsContent = (\n    <div className=\"space-y-6\">\n      <h2 className=\"text-2xl font-bold text-gray-800\">Investigation Workflows</h2>\n      \n      <div className=\"bg-white p-6 rounded-lg shadow\">\n        <h3 className=\"text-xl font-semibold mb-4\">Standard Evidence Collection Workflow</h3>\n        <div className=\"space-y-3\">\n          <div className=\"flex items-start gap-3\">\n            <div className=\"bg-blue-500 text-white rounded-full w-8 h-8 flex items-center justify-center flex-shrink-0\">1</div>\n            <div>\n              <h4 className=\"font-semibold\">Case Creation</h4>\n              <p className=\"text-sm text-gray-600\">Supervisor creates case, assigns investigators, sets priority</p>\n            </div>\n          </div>\n          <div className=\"flex items-start gap-3\">\n            <div className=\"bg-blue-500 text-white rounded-full w-8 h-8 flex items-center justify-center flex-shrink-0\">2</div>\n            <div>\n              <h4 className=\"font-semibold\">Evidence Collection</h4>\n              <p className=\"text-sm text-gray-600\">Field agents collect evidence, document chain of custody, upload to system</p>\n            </div>\n          </div>\n          <div className=\"flex items-start gap-3\">\n            <div className=\"bg-blue-500 text-white rounded-full w-8 h-8 flex items-center justify-center flex-shrink-0\">3</div>\n            <div>\n              <h4 className=\"font-semibold\">Evidence Processing</h4>\n              <p className=\"text-sm text-gray-600\">System calculates hashes, stores in secure repository, indexes metadata</p>\n            </div>\n          </div>\n          <div className=\"flex items-start gap-3\">\n            <div className=\"bg-blue-500 text-white rounded-full w-8 h-8 flex items-center justify-center flex-shrink-0\">4</div>\n            <div>\n              <h4 className=\"font-semibold\">Analysis</h4>\n              <p className=\"text-sm text-gray-600\">Analysts run appropriate forensic modules, document findings</p>\n            </div>\n          </div>\n          <div className=\"flex items-start gap-3\">\n            <div className=\"bg-blue-500 text-white rounded-full w-8 h-8 flex items-center justify-center flex-shrink-0\">5</div>\n            <div>\n              <h4 className=\"font-semibold\">Review</h4>\n              <p className=\"text-sm text-gray-600\">Supervisor reviews findings, requests additional analysis if needed</p>\n            </div>\n          </div>\n          <div className=\"flex items-start gap-3\">\n            <div className=\"bg-blue-500 text-white rounded-full w-8 h-8 flex items-center justify-center flex-shrink-0\">6</div>\n            <div>\n              <h4 className=\"font-semibold\">Report Generation</h4>\n              <p className=\"text-sm text-gray-600\">System generates comprehensive report with all findings and evidence</p>\n            </div>\n          </div>\n          <div className=\"flex items-start gap-3\">\n            <div className=\"bg-blue-500 text-white rounded-full w-8 h-8 flex items-center justify-center flex-shrink-0\">7</div>\n            <div>\n              <h4 className=\"font-semibold\">Case Closure</h4>\n              <p className=\"text-sm text-gray-600\">Final approval, archival, evidence retention policy applied</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"bg-white p-6 rounded-lg shadow\">\n        <h3 className=\"text-xl font-semibold mb-4\">Digital Evidence Analysis Workflow</h3>\n        <div className=\"bg-gray-100 p-4 rounded\">\n          <pre className=\"text-sm whitespace-pre-wrap\">{`Evidence Upload → Hash Calculation → Duplicate Check → \nMetadata Extraction → Module Selection → Queue Analysis → \nProcessing (AI/ML/Manual) → Results Storage → \nAnalyst Review → Findings Documentation → \nSupervisor Approval → Report Generation → Export`}</pre>\n        </div>\n      </div>\n    </div>\n  );\n\n  const uiContent = (\n    <div className=\"space-y-6\">\n      <h2 className=\"text-2xl font-bold text-gray-800\">UI Layout & Wireframes</h2>\n      \n      <div className=\"bg-white p-6 rounded-lg shadow\">\n        <h3 className=\"text-xl font-semibold mb-4\">Main Dashboard Layout</h3>\n        <div className=\"border-2 border-gray-300 rounded-lg p-4 bg-gray-50\">\n          <div className=\"space-y-2\">\n            <div className=\"bg-blue-600 text-white p-3 rounded\">Top Navigation Bar: Logo | Search | Notifications | Profile</div>\n            <div className=\"flex gap-2 min-h-[400px]\">\n              <div className=\"bg-gray-300 w-1/5 p-3 rounded\">\n                <p className=\"font-semibold mb-2\">Sidebar Menu:</p>\n                <ul className=\"text-sm space-y-1\">\n                  <li>Dashboard</li>\n                  <li>Cases</li>\n                  <li>Evidence</li>\n                  <li>Analysis Modules</li>\n                  <li>Reports</li>\n                  <li>Audit Logs</li>\n                  <li>Settings</li>\n                </ul>\n              </div>\n              <div className=\"flex-1 space-y-2\">\n                <div className=\"grid grid-cols-4 gap-2\">\n                  <div className=\"bg-green-200 p-3 rounded text-center\">\n                    <p className=\"font-bold text-2xl\">42</p>\n                    <p className=\"text-sm\">Active Cases</p>\n                  </div>\n                  <div className=\"bg-yellow-200 p-3 rounded text-center\">\n                    <p className=\"font-bold text-2xl\">156</p>\n                    <p className=\"text-sm\">Evidence Items</p>\n                  </div>\n                  <div className=\"bg-blue-200 p-3 rounded text-center\">\n                    <p className=\"font-bold text-2xl\">23</p>\n                    <p className=\"text-sm\">Pending Analysis</p>\n                  </div>\n                  <div className=\"bg-purple-200 p-3 rounded text-center\">\n                    <p className=\"font-bold text-2xl\">8</p>\n                    <p className=\"text-sm\">Reports Generated</p>\n                  </div>\n                </div>\n                <div className=\"bg-white border-2 border-gray-300 p-4 rounded\">\n                  <p className=\"font-semibold mb-2\">Recent Activity Chart</p>\n                  <div className=\"bg-gray-100 h-32 rounded flex items-center justify-center\">\n                    Line/Bar Chart Visualization\n                  </div>\n                </div>\n                <div className=\"bg-white border-2 border-gray-300 p-4 rounded\">\n                  <p className=\"font-semibold mb-2\">Quick Actions</p>\n                  <div className=\"grid grid-cols-3 gap-2\">\n                    <button className=\"bg-blue-500 text-white p-2 rounded text-sm\">New Case</button>\n                    <button className=\"bg-green-500 text-white p-2 rounded text-sm\">Upload Evidence</button>\n                    <button className=\"bg-purple-500 text-white p-2 rounded text-sm\">Run Analysis</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"bg-white p-6 rounded-lg shadow\">\n        <h3 className=\"text-xl font-semibold mb-4\">Module Analysis Screen</h3>\n        <div className=\"border-2 border-gray-300 rounded-lg p-4 bg-gray-50\">\n          <div className=\"space-y-2\">\n            <div className=\"bg-blue-600 text-white p-2 rounded\">Module Header: Deepfake Detection</div>\n            <div className=\"flex gap-2\">\n              <div className=\"w-1/3 bg-white border-2 border-gray-300 p-3 rounded\">\n                <p className=\"font-semibold mb-2\">Upload Area</p>\n                <div className=\"border-2 border-dashed border-gray-400 p-8 text-center rounded\">\n                  Drop files here or click to browse\n                </div>\n                <div className=\"mt-3 space-y-2\">\n                  <button className=\"w-full bg-green-500 text-white p-2 rounded\">Start Analysis</button>\n                  <button className=\"w-full bg-gray-300 p-2 rounded\">Clear</button>\n                </div>\n              </div>\n              <div className=\"flex-1 bg-white border-2 border-gray-300 p-3 rounded\">\n                <p className=\"font-semibold mb-2\">Analysis Results</p>\n                <div className=\"space-y-2\">\n                  <div className=\"bg-red-100 border border-red-300 p-2 rounded\">\n                    <p className=\"font-semibold\">Deepfake Detected: 87% confidence</p>\n                  </div>\n                  <div className=\"bg-gray-100 p-2 rounded\">\n                    <p className=\"text-sm\">Inconsistencies found in frames 45-78</p>\n                  </div>\n                  <div className=\"bg-gray-100 p-2 rounded\">\n                    <p className=\"text-sm\">Face morphing patterns detected</p>\n                  </div>\n                  <div className=\"mt-4 grid grid-cols-2 gap-2\">\n                    <button className=\"bg-blue-500 text-white p-2 rounded text-sm\">View Details</button>\n                    <button className=\"bg-purple-500 text-white p-2 rounded text-sm\">Export Report</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const techContent = (\n    <div className=\"space-y-6\">\n      <h2 className=\"text-2xl font-bold text-gray-800\">Technology Stack & Libraries</h2>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <div className=\"bg-white p-6 rounded-lg shadow\">\n          <h3 className=\"text-xl font-semibold mb-4 text-blue-600\">Frontend Technologies</h3>\n          <ul className=\"space-y-2\">\n            <li><strong>Framework:</strong> React 18 + TypeScript</li>\n            <li><strong>State Management:</strong> Redux Toolkit, React Query</li>\n            <li><strong>UI Library:</strong> shadcn/ui, Tailwind CSS</li>\n            <li><strong>Charts:</strong> Recharts, D3.js, Chart.js</li>\n            <li><strong>File Upload:</strong> react-dropzone</li>\n            <li><strong>Forms:</strong> React Hook Form + Zod validation</li>\n            <li><strong>Tables:</strong> TanStack Table</li>\n            <li><strong>Maps:</strong> Leaflet.js, Mapbox GL</li>\n            <li><strong>Graph Viz:</strong> Cytoscape.js, vis.js</li>\n            <li><strong>Video Player:</strong> Video.js</li>\n          </ul>\n        </div>\n\n        <div className=\"bg-white p-6 rounded-lg shadow\">\n          <h3 className=\"text-xl font-semibold mb-4 text-green-600\">Backend Technologies</h3>\n          <ul className=\"space-y-2\">\n            <li><strong>API Framework:</strong> Python FastAPI 0.104+</li>\n            <li><strong>Authentication:</strong> JWT, OAuth2, PassLib</li>\n            <li><strong>Task Queue:</strong> Celery + Redis</li>\n            <li><strong>WebSocket:</strong> FastAPI WebSocket, Socket.io</li>\n            <li><strong>ORM:</strong> SQLAlchemy, Alembic migrations</li>\n            <li><strong>Validation:</strong> Pydantic</li>\n            <li><strong>Testing:</strong> Pytest, Coverage.py</li>\n            <li><strong>API Docs:</strong> OpenAPI/Swagger</li>\n          </ul>\n        </div>\n\n        <div className=\"bg-white p-6 rounded-lg shadow\">\n          <h3 className=\"text-xl font-semibold mb-4 text-purple-600\">AI/ML Libraries</h3>\n          <ul className=\"space-y-2\">\n            <li><strong>Deep Learning:</strong> TensorFlow 2.14, PyTorch 2.0</li>\n            <li><strong>Computer Vision:</strong> OpenCV, PIL/Pillow</li>\n            <li><strong>Face Recognition:</strong> dlib, face_recognition</li>\n            <li><strong>NLP:</strong> spaCy, Transformers (HuggingFace)</li>\n            <li><strong>Audio Processing:</strong> librosa, pydub</li>\n            <li><strong>Video Processing:</strong> FFmpeg-python</li>\n            <li><strong>OCR:</strong> Tesseract, EasyOCR</li>\n            <li><strong>ML Utils:</strong> scikit-learn, NumPy, Pandas</li>\n          </ul>\n        </div>\n\n        <div className=\"bg-white p-6 rounded-lg shadow\">\n          <h3 className=\"text-xl font-semibold mb-4 text-red-600\">Forensics Tools</h3>\n          <ul className=\"space-y-2\">\n            <li><strong>Disk Analysis:</strong> pytsk3, libewf</li>\n            <li><strong>Network:</strong> Scapy, dpkt, pyshark</li>\n            <li><strong>Mobile:</strong> ADB (Android Debug Bridge)</li>\n            <li><strong>Hash:</strong> hashlib, ssdeep</li>\n            <li><strong>Metadata:</strong> exiftool, pymediainfo</li>\n            <li><strong>Email:</strong> email-parser, flanker</li>\n            <li><strong>PDF:</strong> PyPDF2, pdfminer</li>\n            <li><strong>Archive:</strong> py7zr, rarfile</li>\n          </ul>\n        </div>\n\n        <div className=\"bg-white p-6 rounded-lg shadow\">\n          <h3 className=\"text-xl font-semibold mb-4 text-orange-600\">Data Processing</h3>\n          <ul className=\"space-y-2\">\n            <li><strong>Big Data:</strong> Apache Spark (PySpark)</li>\n            <li><strong>Search:</strong> Elasticsearch, elasticsearch-py</li>\n            <li><strong>Graph DB:</strong> Neo4j, py2neo</li>\n            <li><strong>Time Series:</strong> TimescaleDB, InfluxDB</li>\n            <li><strong>Caching:</strong> Redis, redis-py</li>\n            <li><strong>Message Queue:</strong> RabbitMQ, Kafka</li>\n          </ul>\n        </div>\n\n        <div className=\"bg-white p-6 rounded-lg shadow\">\n          <h3 className=\"text-xl font-semibold mb-4 text-indigo-600\">Security & Compliance</h3>\n          <ul className=\"space-y-2\">\n            <li><strong>Encryption:</strong> cryptography, PyCryptodome</li>\n            <li><strong>SSL/TLS:</strong> Let's Encrypt, certbot</li>\n            <li><strong>Rate Limiting:</strong> slowapi</li>\n            <li><strong>Input Validation:</strong> bleach, html5lib</li>\n            <li><strong>Secrets:</strong> HashiCorp Vault</li>\n            <li><strong>Audit:</strong> Custom audit logging middleware</li>\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"bg-white p-6 rounded-lg shadow\">\n        <h3 className=\"text-xl font-semibold mb-4\">Recommended APIs & Services</h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div>\n            <h4 className=\"font-semibold mb-2\">External APIs</h4>\n            <ul className=\"list-disc ml-6 space-y-1 text-sm\">\n              <li>VirusTotal API - Malware scanning</li>\n              <li>Shodan API - Network intelligence</li>\n              <li>Have I Been Pwned - Data breach checks</li>\n              <li>MaxMind GeoIP - IP geolocation</li>\n              <li>Google Vision AI - Image analysis</li>\n              <li>AWS Rekognition - Face detection</li>\n              <li>Blockchain.com API - Crypto tracking</li>\n            </ul>\n          </div>\n          <div>\n            <h4 className=\"font-semibold mb-2\">Infrastructure Services</h4>\n            <ul className=\"list-disc ml-6 space-y-1 text-sm\">\n              <li>AWS S3/MinIO - Object storage</li>\n              <li>CloudFlare - CDN & DDoS protection</li>\n              <li>Sentry - Error tracking</li>\n              <li>Datadog - Monitoring</li>\n              <li>GitLab - CI/CD</li>\n              <li>Docker Hub - Container registry</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const securityContent = (\n    <div className=\"space-y-6\">\n      <h2 className=\"text-2xl font-bold text-gray-800\">Security & Compliance</h2>\n      \n      <div className=\"bg-white p-6 rounded-lg shadow\">\n        <h3 className=\"text-xl font-semibold mb-4\">Security Measures</h3>\n        <div className=\"space-y-4\">\n          <div className=\"border-l-4 border-red-500 pl-4\">\n            <h4 className=\"font-semibold\">Authentication & Authorization</h4>\n            <ul className=\"list-disc ml-6 mt-2 space-y-1\">\n              <li>Multi-factor authentication (TOTP, SMS, Hardware tokens)</li>\n              <li>Role-based access control (RBAC) with granular permissions</li>\n              <li>JWT tokens with short expiration and refresh mechanism</li>\n              <li>Session management with automatic logout</li>\n              <li>Password policy enforcement (complexity, rotation)</li>\n              <li>Account lockout after failed login attempts</li>\n              <li>Single Sign-On (SSO) integration capability</li>\n            </ul>\n          </div>\n\n          <div className=\"border-l-4 border-orange-500 pl-4\">\n            <h4 className=\"font-semibold\">Data Protection</h4>\n            <ul className=\"list-disc ml-6 mt-2 space-y-1\">\n              <li>End-to-end encryption for data in transit (TLS 1.3)</li>\n              <li>AES-256 encryption for data at rest</li>\n              <li>Hardware Security Module (HSM) for key management</li>\n              <li>Database encryption at column level for sensitive fields</li>\n              <li>Secure file storage with access controls</li>\n              <li>Encrypted backup with off-site replication</li>\n              <li>Data sanitization on deletion</li>\n            </ul>\n          </div>\n\n          <div className=\"border-l-4 border-yellow-500 pl-4\">\n            <h4 className=\"font-semibold\">Network Security</h4>\n            <ul className=\"list-disc ml-6 mt-2 space-y-1\">\n              <li>Firewall rules and network segmentation</li>\n              <li>VPN requirement for remote access</li>\n              <li>DDoS protection and rate limiting</li>\n              <li>Intrusion Detection System (IDS)</li>\n              <li>Regular penetration testing</li>\n              <li>Security groups and network ACLs</li>\n              <li>API gateway with throttling</li>\n            </ul>\n          </div>\n\n          <div className=\"border-l-4 border-green-500 pl-4\">\n            <h4 className=\"font-semibold\">Audit & Monitoring</h4>\n            <ul className=\"list-disc ml-6 mt-2 space-y-1\">\n              <li>Comprehensive audit logging of all actions</li>\n              <li>Tamper-proof audit trail with blockchain verification</li>\n              <li>Real-time security event monitoring</li>\n              <li>Automated alert system for suspicious activities</li>\n              <li>User activity tracking and analytics</li>\n              <li>Compliance reporting dashboards</li>\n              <li>Log retention for minimum 7 years</li>\n            </ul>\n          </div>\n\n          <div className=\"border-l-4 border-blue-500 pl-4\">\n            <h4 className=\"font-semibold\">Evidence Integrity</h4>\n            <ul className=\"list-disc ml-6 mt-2 space-y-1\">\n              <li>SHA-256 hash calculation on evidence upload</li>\n              <li>Hash verification before analysis</li>\n              <li>Write-blocking for disk imaging</li>\n              <li>Chain of custody with digital signatures</li>\n              <li>Immutable evidence storage</li>\n              <li>Timestamping service integration</li>\n              <li>Evidence seal with cryptographic proof</li>\n            </ul>\n          </div>\n\n          <div className=\"border-l-4 border-purple-500 pl-4\">\n            <h4 className=\"font-semibold\">Application Security</h4>\n            <ul className=\"list-disc ml-6 mt-2 space-y-1\">\n              <li>Input validation and sanitization</li>\n              <li>SQL injection prevention (parameterized queries)</li>\n              <li>Cross-Site Scripting (XSS) protection</li>\n              <li>Cross-Site Request Forgery (CSRF) tokens</li>\n              <li>Content Security Policy (CSP) headers</li>\n              <li>Regular security updates and patching</li>\n              <li>Code review and static analysis</li>\n              <li>Dependency vulnerability scanning</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"bg-white p-6 rounded-lg shadow\">\n        <h3 className=\"text-xl font-semibold mb-4\">Compliance Requirements</h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div className=\"border p-4 rounded\">\n            <h4 className=\"font-semibold mb-2\">ISO 27001</h4>\n            <p className=\"text-sm\">Information security management system compliance</p>\n            <ul className=\"list-disc ml-6 mt-2 text-sm\">\n              <li>Risk assessment procedures</li>\n              <li>Security policy documentation</li>\n              <li>Incident response plan</li>\n              <li>Business continuity planning</li>\n            </ul>\n          </div>\n\n          <div className=\"border p-4 rounded\">\n            <h4 className=\"font-semibold mb-2\">SOC 2 Type II</h4>\n            <p className=\"text-sm\">Service organization controls for security</p>\n            <ul className=\"list-disc ml-6 mt-2 text-sm\">\n              <li>Security controls documentation</li>\n              <li>Independent audit requirements</li>\n              <li>Continuous monitoring</li>\n              <li>Availability and confidentiality</li>\n            </ul>\n          </div>\n\n          <div className=\"border p-4 rounded\">\n            <h4 className=\"font-semibold mb-2\">GDPR Compliance</h4>\n            <p className=\"text-sm\">General Data Protection Regulation</p>\n            <ul className=\"list-disc ml-6 mt-2 text-sm\">\n              <li>Data subject rights (access, deletion)</li>\n              <li>Privacy by design</li>\n              <li>Data breach notification</li>\n              <li>Cross-border data transfer controls</li>\n            </ul>\n          </div>\n\n          <div className=\"border p-4 rounded\">\n            <h4 className=\"font-semibold mb-2\">CJIS Security Policy</h4>\n            <p className=\"text-sm\">Criminal Justice Information Services</p>\n            <ul className=\"list-disc ml-6 mt-2 text-sm\">\n              <li>Advanced authentication</li>\n              <li>Audit and accountability</li>\n              <li>Physical security requirements</li>\n              <li>Personnel security screening</li>\n            </ul>\n          </div>\n\n          <div className=\"border p-4 rounded\">\n            <h4 className=\"font-semibold mb-2\">NIST Cybersecurity Framework</h4>\n            <p className=\"text-sm\">National Institute of Standards and Technology</p>\n            <ul className=\"list-disc ml-6 mt-2 text-sm\">\n              <li>Identify, Protect, Detect framework</li>\n              <li>Respond and Recover procedures</li>\n              <li>Continuous improvement cycle</li>\n            </ul>\n          </div>\n\n          <div className=\"border p-4 rounded\">\n            <h4 className=\"font-semibold mb-2\">Chain of Custody Standards</h4>\n            <p className=\"text-sm\">Legal evidence handling</p>\n            <ul className=\"list-disc ml-6 mt-2 text-sm\">\n              <li>Federal Rules of Evidence compliance</li>\n              <li>Admissibility documentation</li>\n              <li>Expert witness support</li>\n              <li>Court-ready reporting</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"bg-white p-6 rounded-lg shadow\">\n        <h3 className=\"text-xl font-semibold mb-4\">Data Retention & Privacy</h3>\n        <div className=\"space-y-3\">\n          <div className=\"bg-gray-50 p-4 rounded\">\n            <h4 className=\"font-semibold\">Evidence Retention Policy</h4>\n            <ul className=\"list-disc ml-6 mt-2 text-sm\">\n              <li>Active cases: Unlimited retention</li>\n              <li>Closed cases: Minimum 7 years per jurisdiction requirements</li>\n              <li>Audit logs: Minimum 10 years</li>\n              <li>Automated archival after case closure</li>\n              <li>Secure deletion with certificate of destruction</li>\n            </ul>\n          </div>\n\n          <div className=\"bg-gray-50 p-4 rounded\">\n            <h4 className=\"font-semibold\">Access Controls</h4>\n            <ul className=\"list-disc ml-6 mt-2 text-sm\">\n              <li>Need-to-know basis access only</li>\n              <li>Sensitive case marking with restricted access</li>\n              <li>Automatic access revocation on role change</li>\n              <li>Periodic access review and recertification</li>\n              <li>Privileged access management (PAM)</li>\n            </ul>\n          </div>\n\n          <div className=\"bg-gray-50 p-4 rounded\">\n            <h4 className=\"font-semibold\">Disaster Recovery</h4>\n            <ul className=\"list-disc ml-6 mt-2 text-sm\">\n              <li>Recovery Time Objective (RTO): 4 hours</li>\n              <li>Recovery Point Objective (RPO): 15 minutes</li>\n              <li>Geographic redundancy across data centers</li>\n              <li>Regular disaster recovery drills</li>\n              <li>Backup verification and testing</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"bg-white p-6 rounded-lg shadow\">\n        <h3 className=\"text-xl font-semibold mb-4\">Security Best Practices Checklist</h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\n          {[\n            'Regular security assessments',\n            'Penetration testing (quarterly)',\n            'Security awareness training',\n            'Incident response procedures',\n            'Vulnerability management program',\n            'Third-party risk assessment',\n            'Secure development lifecycle',\n            'Code signing certificates',\n            'Security patch management',\n            'Endpoint protection',\n            'Data loss prevention (DLP)',\n            'Mobile device management'\n          ].map((item, idx) => (\n            <div key={idx} className=\"flex items-center gap-2\">\n              <CheckCircle className=\"w-5 h-5 text-green-500 flex-shrink-0\" />\n              <span className=\"text-sm\">{item}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderContent = () => {\n    switch(activeTab) {\n      case 'architecture': return architectureContent;\n      case 'database': return databaseContent;\n      case 'modules': return modulesContent;\n      case 'workflows': return workflowsContent;\n      case 'ui': return uiContent;\n      case 'tech': return techContent;\n      case 'security': return securityContent;\n      default: return architectureContent;\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 p-6\">\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"bg-white rounded-lg shadow-lg p-6 mb-6\">\n          <h1 className=\"text-3xl font-bold text-gray-800 mb-2\">\n            Digital Forensics & Cyber Investigation Platform\n          </h1>\n          <p className=\"text-gray-600\">\n            Complete System Design Documentation - 36 Forensic Modules\n          </p>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-lg overflow-hidden\">\n          <div className=\"flex border-b overflow-x-auto\">\n            {tabs.map((tab) => {\n              const Icon = tab.icon;\n              return (\n                <button\n                  key={tab.id}\n                  onClick={() => setActiveTab(tab.id)}\n                  className={`flex items-center gap-2 px-6 py-4 font-medium transition-colors whitespace-nowrap ${\n                    activeTab === tab.id\n                      ? 'bg-blue-500 text-white border-b-2 border-blue-600'\n                      : 'text-gray-600 hover:bg-gray-50'\n                  }`}\n                >\n                  <Icon className=\"w-5 h-5\" />\n                  {tab.label}\n                </button>\n              );\n            })}\n          </div>\n\n          <div className=\"p-6 overflow-y-auto\" style={{ maxHeight: '70vh' }}>\n            {renderContent()}\n          </div>\n        </div>\n\n        <div className=\"mt-6 bg-white rounded-lg shadow-lg p-6\">\n          <h3 className=\"text-xl font-semibold mb-3\">Implementation Notes</h3>\n          <ul className=\"list-disc ml-6 space-y-2 text-sm text-gray-700\">\n            <li>This platform requires significant infrastructure investment including GPU clusters, high-performance storage, and dedicated security infrastructure</li>\n            <li>Estimated development timeline: 18-24 months with a team of 15-20 developers</li>\n            <li>Consider phased rollout starting with core modules (Case Management, Evidence Storage, Basic Forensics)</li>\n            <li>Regular training programs required for investigators to use specialized forensic modules effectively</li>\n            <li>Compliance certification process should begin early in development</li>\n            <li>Budget for ongoing maintenance, security updates, and AI model retraining</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ForensicsPlatformDocs;","size_bytes":57648},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(`\n      after:content-[''] after:block after:absolute after:inset-0 after:rounded-full after:pointer-events-none after:border after:border-black/10 dark:after:border-white/10\n      relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full`,\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1592},"client/src/pages/modules/mobile-forensics.tsx":{"content":"import { Card } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { \n  Smartphone, \n  MessageSquare, \n  Phone, \n  Image, \n  MapPin, \n  Calendar,\n  Database as DatabaseIcon\n} from \"lucide-react\";\n\nexport default function MobileForensics() {\n  const deviceInfo = {\n    device: \"Apple iPhone 14 Pro\",\n    os: \"iOS 17.2.1\",\n    imei: \"356728114726824\",\n    serialNumber: \"F2LXH7XKPN83\",\n    carrier: \"AT&T\",\n    lastBackup: \"2025-01-18 23:15:42\",\n  };\n\n  const appData = [\n    { app: \"WhatsApp\", messages: 4523, media: 1247, databases: 3 },\n    { app: \"Instagram\", messages: 892, media: 3421, databases: 2 },\n    { app: \"Telegram\", messages: 2341, media: 876, databases: 4 },\n    { app: \"Signal\", messages: 156, media: 45, databases: 2 },\n  ];\n\n  const recentActivities = [\n    { type: \"Call\", contact: \"+1 (555) 123-4567\", time: \"2025-01-20 14:23\", duration: \"4:32\" },\n    { type: \"SMS\", contact: \"+1 (555) 987-6543\", time: \"2025-01-20 13:45\", duration: null },\n    { type: \"Location\", contact: \"Golden Gate Park, SF\", time: \"2025-01-20 12:00\", duration: null },\n    { type: \"Photo\", contact: \"Camera\", time: \"2025-01-20 11:30\", duration: null },\n  ];\n\n  return (\n    <div className=\"space-y-6 p-6\">\n      <div>\n        <h1 className=\"text-3xl font-semibold\">Mobile Forensics & App Storage</h1>\n        <p className=\"text-muted-foreground\">\n          Comprehensive mobile device analysis, app data extraction, and SQLite database viewer\n        </p>\n      </div>\n\n      <Card className=\"p-6\">\n        <h3 className=\"mb-4 text-lg font-semibold\">Device Information</h3>\n        <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n          <div className=\"space-y-1\">\n            <p className=\"text-sm text-muted-foreground\">Device Model</p>\n            <p className=\"font-medium\">{deviceInfo.device}</p>\n          </div>\n          <div className=\"space-y-1\">\n            <p className=\"text-sm text-muted-foreground\">Operating System</p>\n            <p className=\"font-medium\">{deviceInfo.os}</p>\n          </div>\n          <div className=\"space-y-1\">\n            <p className=\"text-sm text-muted-foreground\">IMEI</p>\n            <p className=\"font-medium font-mono text-sm\">{deviceInfo.imei}</p>\n          </div>\n          <div className=\"space-y-1\">\n            <p className=\"text-sm text-muted-foreground\">Serial Number</p>\n            <p className=\"font-medium font-mono text-sm\">{deviceInfo.serialNumber}</p>\n          </div>\n          <div className=\"space-y-1\">\n            <p className=\"text-sm text-muted-foreground\">Carrier</p>\n            <p className=\"font-medium\">{deviceInfo.carrier}</p>\n          </div>\n          <div className=\"space-y-1\">\n            <p className=\"text-sm text-muted-foreground\">Last Backup</p>\n            <p className=\"font-medium\">{deviceInfo.lastBackup}</p>\n          </div>\n        </div>\n      </Card>\n\n      <Card className=\"p-6\">\n        <h3 className=\"mb-4 text-lg font-semibold\">Application Data</h3>\n        <div className=\"space-y-3\">\n          {appData.map((app) => (\n            <div\n              key={app.app}\n              className=\"rounded-lg border border-border p-4 hover-elevate cursor-pointer\"\n            >\n              <div className=\"flex items-center justify-between mb-3\">\n                <div className=\"flex items-center gap-3\">\n                  <div className=\"flex h-10 w-10 items-center justify-center rounded-lg bg-primary/10\">\n                    <Smartphone className=\"h-5 w-5 text-primary\" />\n                  </div>\n                  <h4 className=\"font-semibold\">{app.app}</h4>\n                </div>\n                <Badge variant=\"secondary\">{app.databases} databases</Badge>\n              </div>\n              <div className=\"grid grid-cols-3 gap-4 text-sm\">\n                <div>\n                  <p className=\"text-muted-foreground\">Messages</p>\n                  <p className=\"font-medium\">{app.messages.toLocaleString()}</p>\n                </div>\n                <div>\n                  <p className=\"text-muted-foreground\">Media Files</p>\n                  <p className=\"font-medium\">{app.media.toLocaleString()}</p>\n                </div>\n                <div>\n                  <p className=\"text-muted-foreground\">Database Size</p>\n                  <p className=\"font-medium\">{(Math.random() * 100 + 20).toFixed(1)} MB</p>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </Card>\n\n      <Card className=\"p-6\">\n        <h3 className=\"mb-4 text-lg font-semibold\">Recent Activities</h3>\n        <div className=\"space-y-3\">\n          {recentActivities.map((activity, index) => (\n            <div\n              key={index}\n              className=\"flex items-start gap-4 rounded-lg border border-border p-3 hover-elevate\"\n            >\n              <div className=\"flex h-9 w-9 items-center justify-center rounded-lg bg-chart-1/10\">\n                {activity.type === \"Call\" && <Phone className=\"h-4 w-4 text-chart-1\" />}\n                {activity.type === \"SMS\" && <MessageSquare className=\"h-4 w-4 text-chart-2\" />}\n                {activity.type === \"Location\" && <MapPin className=\"h-4 w-4 text-chart-3\" />}\n                {activity.type === \"Photo\" && <Image className=\"h-4 w-4 text-chart-4\" />}\n              </div>\n              <div className=\"flex-1 min-w-0\">\n                <div className=\"flex items-center gap-2 mb-1\">\n                  <Badge variant=\"secondary\" className=\"text-xs\">{activity.type}</Badge>\n                  {activity.duration && (\n                    <span className=\"text-xs text-muted-foreground\">Duration: {activity.duration}</span>\n                  )}\n                </div>\n                <p className=\"text-sm font-medium\">{activity.contact}</p>\n                <p className=\"text-xs text-muted-foreground\">{activity.time}</p>\n              </div>\n            </div>\n          ))}\n        </div>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":5940},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  // Whitespace-nowrap: Badges should never wrap.\n  \"whitespace-nowrap inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\" +\n  \" hover-elevate \" ,\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow-xs\",\n        secondary: \"border-transparent bg-secondary text-secondary-foreground\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow-xs\",\n\n        outline: \" border [border-color:var(--badge-outline)] shadow-xs\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1202},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    // h-9 to match icon buttons and default buttons.\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":844},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"replit.md":{"content":"# CPT Digital Forensics Platform\n\n## Overview\nComprehensive Digital Forensics & Cyber Investigation Web Application Platform designed for law enforcement, cyber cells, and security agencies. The platform features 36 specialized forensic modules with professional dark-themed UI matching law enforcement aesthetics.\n\n## Project Architecture\n**Stack**: Full-stack JavaScript application\n- **Frontend**: React + TypeScript, Tailwind CSS, Shadcn UI\n- **Backend**: Express.js + Node.js\n- **Database**: PostgreSQL (Neon) with Drizzle ORM\n- **Authentication**: Replit Auth with role-based access control\n- **Charts**: Recharts for data visualization\n\n## Core Features\n\n### Authentication & Access Control\n- Replit Auth integration with 4 role levels:\n  - **Admin**: Full system access + configuration\n  - **Analyst**: Standard forensic module access\n  - **Supervisor**: Read-only + approval workflows\n  - **Auditor**: Audit trails + reports only\n\n### Case Management System\n- Create and track investigation cases\n- Assign cases to analysts\n- Track case status (open, in_progress, closed, archived)\n- Priority levels (low, medium, high, critical)\n- Complete case timeline and history\n\n### Evidence Management\n- Secure evidence upload with SHA-256 hash verification\n- Chain-of-custody tracking with complete audit trail\n- Evidence categorization by type (image, video, document, mobile, network, etc.)\n- File metadata extraction\n- Evidence integrity verification\n\n### 36 Forensic Modules (MVP includes 20+ modules)\n\n#### AI & Media Analysis\n1. **AI/Deepfake Detection** - Advanced AI-powered deepfake detection\n2. **Image Forensics** - EXIF metadata extraction, tampering detection\n3. **Video/CCTV Analysis** - Frame-by-frame analysis, enhancement\n4. **Audio Forensics** - Noise reduction, speaker verification\n5. **Steganography Detection** - Hidden data scanner\n\n#### Network & Communications\n6. **Network Traffic Analyzer** - PCAP analysis, protocol breakdown\n7. **Email Forensics** - Header analysis, sender verification\n8. **CDR/IPDR Analysis** - Communication logs analyzer\n9. **Dark Web Investigation** - Dark web monitoring\n10. **Browser Forensics** - Web browser history and artifact analysis\n\n#### Device & Hardware\n11. **Mobile Forensics** - App data analysis, SQLite database viewer\n12. **Disk Forensics** - Deleted file recovery, disk imaging\n13. **Drone Forensics** - Flight log, GPS, media extraction\n14. **Vehicle Forensics** - ECU, GPS, infotainment analysis\n15. **GPS Analysis** - Location metadata analyzer\n\n#### Financial & Fraud\n16. **Banking Fraud Investigation** - UPI/IMPS/Card fraud detection\n17. **AML/CTF Investigation** - Transaction graph mapping\n18. **Blockchain Tracing** - Crypto transaction analysis\n19. **Financial Audit** - Corporate forensic audit\n\n#### Social & OSINT\n20. **Social Media Forensics** - Profile data extraction, timeline visualization\n21. **OSINT Intelligence** - Open source intelligence gathering\n22. **Face Recognition** - Facial matching and comparison\n23. **Document Forgery Detection** - PDF/image authenticity verification\n\n### Dashboard & Analytics\n- Real-time KPI metrics (active cases, evidence count, analyses)\n- Weekly activity charts\n- Case distribution by status\n- Module usage statistics\n- Recent activity timeline\n- Interactive data visualizations\n\n### Audit & Compliance\n- Complete audit log system tracking all user actions\n- IP address and user agent logging\n- Timestamp tracking for all operations\n- Chain-of-custody maintenance\n- Evidence hash verification\n- Legal compliance for chain-of-evidence\n\n## Database Schema\n\n### Core Tables\n- **users**: User accounts with role-based access\n- **cases**: Investigation case records\n- **evidence**: Evidence files with hash verification\n- **chain_of_custody**: Evidence custody tracking\n- **analysis_results**: Forensic analysis outputs (JSON)\n- **audit_logs**: Complete system audit trail\n- **sessions**: Authentication session storage\n\n### Key Relationships\n- Cases → Evidence (one-to-many)\n- Evidence → Chain of Custody (one-to-many)\n- Cases → Analysis Results (one-to-many)\n- Evidence → Analysis Results (one-to-many)\n- Users → Cases (assigned, created)\n- Users → Evidence (collected by)\n- Users → Audit Logs (activity tracking)\n\n## Design System\n- **Theme**: Professional dark mode with blue law enforcement accents\n- **Typography**: IBM Plex Sans (UI), IBM Plex Mono (technical data)\n- **Colors**: \n  - Primary: Blue (#214395) for trust and authority\n  - Charts: 5-color palette for data visualization\n  - Status indicators: Color-coded badges for case/evidence status\n- **Layout**: Sidebar navigation with 8 collapsible module categories\n- **Components**: Shadcn UI components with custom forensics styling\n\n## Technical Implementation\n\n### Frontend Structure\n```\nclient/src/\n├── pages/\n│   ├── landing.tsx - Public landing page\n│   ├── dashboard.tsx - Main analytics dashboard\n│   ├── cases.tsx - Case management interface\n│   ├── evidence.tsx - Image forensics module\n│   └── modules/\n│       ├── ai-deepfake.tsx\n│       ├── social-media.tsx\n│       ├── network-traffic.tsx\n│       ├── face-recognition.tsx\n│       └── mobile-forensics.tsx\n├── components/\n│   ├── app-sidebar.tsx - Navigation sidebar\n│   └── theme-toggle.tsx - Dark/light mode toggle\n└── hooks/\n    └── useAuth.ts - Authentication hook\n```\n\n### Backend Structure\n```\nserver/\n├── routes.ts - API endpoints\n├── storage.ts - Database operations (IStorage interface)\n├── db.ts - Database connection\n└── replitAuth.ts - Authentication middleware\n```\n\n### API Endpoints\n- `GET /api/auth/user` - Get current user\n- `GET /api/stats` - Dashboard statistics\n- `GET /api/cases` - List all cases\n- `POST /api/cases` - Create new case\n- `GET /api/evidence` - List evidence\n- `POST /api/evidence` - Upload evidence\n- `POST /api/analysis` - Create analysis result\n- `GET /api/audit-logs` - Retrieve audit logs\n\n## Development Workflow\n\n### Prerequisites\n- Node.js 20\n- PostgreSQL database (provisioned via Replit)\n- Replit Auth configured\n\n### Environment Variables\n- `DATABASE_URL` - PostgreSQL connection string\n- `SESSION_SECRET` - Session encryption secret\n- `REPL_ID` - Replit application ID\n- `ISSUER_URL` - OIDC issuer URL (defaults to Replit)\n\n### Commands\n- `npm run dev` - Start development server\n- `npm run db:push` - Push database schema changes\n\n## Security Features\n- SHA-256 hash verification for all evidence\n- Complete chain-of-custody logging\n- Role-based access control (RBAC)\n- Audit trail for all system operations\n- Secure session management\n- PostgreSQL for data persistence\n- Evidence integrity verification\n\n## Future Enhancements (Phase 2)\n- GPU-accelerated AI processing for video analysis\n- Real-time collaboration features with WebSocket\n- 3D graph mapping for relationship analysis (Neo4j)\n- Mobile field application for Cyber Forensics Van\n- Advanced encryption recovery toolkit\n- Automated cloud evidence acquisition (AWS, GDrive, iCloud)\n- Elasticsearch for full-text search\n- Batch processing capabilities\n- Advanced compliance reporting\n- Malware sandbox environment\n- Remaining 16 advanced modules\n\n## Recent Changes\n- 2025-01-31: Initial platform setup with core infrastructure\n- Database schema created with all forensic tables\n- Replit Auth integration with role-based access\n- Dashboard with KPI metrics and visualizations\n- Case Management system implemented\n- 6+ forensic modules created (AI/Deepfake, Social Media, Image Forensics, Network Traffic, Face Recognition, Mobile Forensics)\n- Professional dark-themed UI with IBM Carbon design system\n- Comprehensive sidebar navigation for 36 modules\n\n## User Preferences\n- Default theme: Dark mode (professional law enforcement aesthetic)\n- Professional blue color scheme (#214395)\n- High information density layout\n- Collapsible sidebar navigation\n- Real-time data visualization preferred\n\n## Notes\n- All evidence files require SHA-256 hash verification\n- Chain-of-custody must be maintained for legal compliance\n- Audit logs capture IP addresses and user agents\n- Module results stored as JSONB for flexibility\n- Analysis confidence scores range 0-100\n- Case numbers follow format: CASE-YYYY-NNNN\n","size_bytes":8312},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/App.tsx":{"content":"// Reference: Replit Auth integration blueprint\nimport { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { SidebarProvider, SidebarTrigger } from \"@/components/ui/sidebar\";\nimport { AppSidebar } from \"@/components/app-sidebar\";\nimport { ThemeToggle } from \"@/components/theme-toggle\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport NotFound from \"@/pages/not-found\";\nimport Landing from \"@/pages/landing\";\nimport Dashboard from \"@/pages/dashboard\";\nimport Cases from \"@/pages/cases\";\nimport ImageForensics from \"@/pages/evidence\";\nimport AIDeepfake from \"@/pages/modules/ai-deepfake\";\nimport SocialMedia from \"@/pages/modules/social-media\";\nimport NetworkTraffic from \"@/pages/modules/network-traffic\";\nimport FaceRecognition from \"@/pages/modules/face-recognition\";\nimport MobileForensics from \"@/pages/modules/mobile-forensics\";\nimport ModulePlaceholder from \"@/pages/modules/module-placeholder\";\nimport { Button } from \"@/components/ui/button\";\nimport { LogOut } from \"lucide-react\";\n\n// Module placeholder configs\nconst moduleConfigs: Record<string, any> = {\n  \"video-analysis\": {\n    title: \"Video/CCTV Analysis\",\n    description: \"Frame-by-frame video analysis and enhancement\",\n    features: [\"CCTV/DVR playback\", \"Frame extraction\", \"Video enhancement\", \"Metadata analysis\"]\n  },\n  \"audio-forensics\": {\n    title: \"Audio Forensics\",\n    description: \"Audio analysis, noise reduction, and speaker verification\",\n    features: [\"Noise reduction\", \"Speaker verification\", \"Audio enhancement\", \"Waveform analysis\"]\n  },\n  \"steganography\": {\n    title: \"Steganography Detection\",\n    description: \"Hidden data scanner and detection\",\n    features: [\"Hidden data detection\", \"LSB analysis\", \"File carving\", \"Data extraction\"]\n  },\n  \"email-forensics\": {\n    title: \"Email Forensics\",\n    description: \"Email header analysis and sender verification\",\n    features: [\"Header analysis\", \"Sender verification\", \"Email threading\", \"Attachment analysis\"]\n  },\n  \"cdr-analysis\": {\n    title: \"CDR/IPDR Analysis\",\n    description: \"Communication logs analyzer\",\n    features: [\"Call detail records\", \"IP detail records\", \"Pattern analysis\", \"Timeline visualization\"]\n  },\n  \"dark-web\": {\n    title: \"Dark Web Investigation\",\n    description: \"Dark web monitoring and investigation\",\n    features: [\"Dark web crawling\", \"Threat monitoring\", \"Content analysis\", \"Link mapping\"]\n  },\n  \"browser-forensics\": {\n    title: \"Web Browser Forensics\",\n    description: \"Browser history and artifact analysis\",\n    features: [\"History recovery\", \"Cache analysis\", \"Cookie examination\", \"Download tracking\"]\n  },\n  \"disk-forensics\": {\n    title: \"Disk Forensics\",\n    description: \"Deleted file recovery and disk imaging\",\n    features: [\"File recovery\", \"Disk imaging\", \"Partition analysis\", \"File system examination\"]\n  },\n  \"drone-forensics\": {\n    title: \"Drone Forensics\",\n    description: \"Flight log, GPS, and media extraction\",\n    features: [\"Flight log analysis\", \"GPS tracking\", \"Media extraction\", \"Metadata recovery\"]\n  },\n  \"vehicle-forensics\": {\n    title: \"Vehicle Digital Forensics\",\n    description: \"ECU, GPS, and infotainment system analysis\",\n    features: [\"ECU data extraction\", \"GPS history\", \"Infotainment analysis\", \"Event logging\"]\n  },\n  \"gps-analysis\": {\n    title: \"GPS Tracking & Location Analysis\",\n    description: \"Location metadata analyzer\",\n    features: [\"GPS coordinate parsing\", \"Route reconstruction\", \"Location clustering\", \"Timeline mapping\"]\n  },\n  \"banking-fraud\": {\n    title: \"Banking Fraud Investigation\",\n    description: \"UPI/IMPS/Card fraud detection\",\n    features: [\"Transaction analysis\", \"Fraud pattern detection\", \"Account linking\", \"Risk scoring\"]\n  },\n  \"aml-ctf\": {\n    title: \"AML/CTF Investigation\",\n    description: \"Anti-money laundering and counter-terrorism financing\",\n    features: [\"Transaction graph mapping\", \"Pattern analysis\", \"Risk assessment\", \"Compliance reporting\"]\n  },\n  \"blockchain\": {\n    title: \"Blockchain Transaction Tracing\",\n    description: \"Cryptocurrency transaction analysis\",\n    features: [\"Wallet tracking\", \"Transaction flow\", \"Address clustering\", \"Exchange analysis\"]\n  },\n  \"financial-audit\": {\n    title: \"Financial & Corporate Audit\",\n    description: \"Corporate forensic audit module\",\n    features: [\"Financial statement analysis\", \"Fraud detection\", \"Compliance checking\", \"Report generation\"]\n  },\n  \"osint\": {\n    title: \"OSINT Intelligence Gathering\",\n    description: \"Open source intelligence toolkit\",\n    features: [\"Public data collection\", \"Social media monitoring\", \"Domain analysis\", \"Email verification\"]\n  },\n  \"document-forgery\": {\n    title: \"Document Forgery Detection\",\n    description: \"PDF/image authenticity verification\",\n    features: [\"Document tampering detection\", \"Signature verification\", \"Font analysis\", \"Metadata examination\"]\n  },\n  \"e-discovery\": {\n    title: \"E-Discovery & Legal Evidence\",\n    description: \"Legal evidence management\",\n    features: [\"Document collection\", \"Legal hold\", \"Review workflow\", \"Production management\"]\n  },\n  \"csam\": {\n    title: \"CSAM/Child Abuse Investigation\",\n    description: \"Case workflow controls\",\n    features: [\"Evidence flagging\", \"Secure storage\", \"Automated detection\", \"Case tracking\"]\n  },\n  \"cloud-evidence\": {\n    title: \"Cloud Evidence Acquisition\",\n    description: \"AWS, GDrive, iCloud evidence collection\",\n    features: [\"Cloud data extraction\", \"API integration\", \"Automated collection\", \"Chain-of-custody\"]\n  },\n  \"big-data\": {\n    title: \"Big Data / PCAP Traffic Analyzer\",\n    description: \"Large-scale data processing\",\n    features: [\"PCAP processing\", \"Big data analytics\", \"Pattern detection\", \"Performance optimization\"]\n  },\n  \"field-acquisition\": {\n    title: \"Cyber Forensics Van Integration\",\n    description: \"Field acquisition module\",\n    features: [\"Mobile data collection\", \"Field device imaging\", \"Remote analysis\", \"Offline capability\"]\n  },\n  \"malware-analysis\": {\n    title: \"Malware Analysis\",\n    description: \"Malware detection and analysis\",\n    features: [\"Static analysis\", \"Behavior monitoring\", \"Signature detection\", \"Threat intelligence\"]\n  },\n  \"sandbox\": {\n    title: \"Sandbox Environment\",\n    description: \"Safe malware execution environment\",\n    features: [\"Isolated execution\", \"Behavior analysis\", \"Network monitoring\", \"Report generation\"]\n  },\n  \"password-recovery\": {\n    title: \"Password & Encryption Recovery\",\n    description: \"Password recovery toolkit\",\n    features: [\"Hash cracking\", \"Password recovery\", \"Encryption analysis\", \"Brute force tools\"]\n  },\n  \"security-audit\": {\n    title: \"Information System Security Audit\",\n    description: \"Security audit panel\",\n    features: [\"Vulnerability scanning\", \"Compliance checking\", \"Penetration testing\", \"Risk assessment\"]\n  }\n};\n\nfunction Router() {\n  const { isAuthenticated, isLoading } = useAuth();\n\n  if (isLoading || !isAuthenticated) {\n    return (\n      <Switch>\n        <Route path=\"/\" component={Landing} />\n        <Route component={NotFound} />\n      </Switch>\n    );\n  }\n\n  return (\n    <Switch>\n      <Route path=\"/\" component={Dashboard} />\n      <Route path=\"/cases\" component={Cases} />\n      <Route path=\"/evidence\" component={ImageForensics} />\n      \n      {/* Implemented Modules */}\n      <Route path=\"/modules/image-forensics\" component={ImageForensics} />\n      <Route path=\"/modules/ai-deepfake\" component={AIDeepfake} />\n      <Route path=\"/modules/social-media\" component={SocialMedia} />\n      <Route path=\"/modules/network-traffic\" component={NetworkTraffic} />\n      <Route path=\"/modules/face-recognition\" component={FaceRecognition} />\n      <Route path=\"/modules/mobile-forensics\" component={MobileForensics} />\n      \n      {/* Dynamic placeholder for other modules */}\n      <Route path=\"/modules/:module\">\n        {(params) => {\n          const config = moduleConfigs[params.module];\n          if (config) {\n            return <ModulePlaceholder {...config} />;\n          }\n          return <Dashboard />;\n        }}\n      </Route>\n      \n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  const { isAuthenticated, isLoading } = useAuth();\n\n  // Custom sidebar width for forensics application\n  const style = {\n    \"--sidebar-width\": \"20rem\",\n    \"--sidebar-width-icon\": \"4rem\",\n  };\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        {isLoading || !isAuthenticated ? (\n          <Router />\n        ) : (\n          <SidebarProvider style={style as React.CSSProperties}>\n            <div className=\"flex h-screen w-full\">\n              <AppSidebar />\n              <div className=\"flex flex-1 flex-col\">\n                <header className=\"flex h-16 items-center justify-between border-b border-border px-4\">\n                  <SidebarTrigger data-testid=\"button-sidebar-toggle\" />\n                  <div className=\"flex items-center gap-2\">\n                    <ThemeToggle />\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => window.location.href = \"/api/logout\"}\n                      data-testid=\"button-logout\"\n                    >\n                      <LogOut className=\"mr-1 h-4 w-4\" />\n                      Logout\n                    </Button>\n                  </div>\n                </header>\n                <main className=\"flex-1 overflow-auto\">\n                  <Router />\n                </main>\n              </div>\n            </div>\n          </SidebarProvider>\n        )}\n        <Toaster />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":9862},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \".5625rem\", /* 9px */\n        md: \".375rem\", /* 6px */\n        sm: \".1875rem\", /* 3px */\n      },\n      colors: {\n        // Flat / base colors (regular buttons)\n        background: \"hsl(var(--background) / <alpha-value>)\",\n        foreground: \"hsl(var(--foreground) / <alpha-value>)\",\n        border: \"hsl(var(--border) / <alpha-value>)\",\n        input: \"hsl(var(--input) / <alpha-value>)\",\n        card: {\n          DEFAULT: \"hsl(var(--card) / <alpha-value>)\",\n          foreground: \"hsl(var(--card-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--card-border) / <alpha-value>)\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover) / <alpha-value>)\",\n          foreground: \"hsl(var(--popover-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--popover-border) / <alpha-value>)\",\n        },\n        primary: {\n          DEFAULT: \"hsl(var(--primary) / <alpha-value>)\",\n          foreground: \"hsl(var(--primary-foreground) / <alpha-value>)\",\n          border: \"var(--primary-border)\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary) / <alpha-value>)\",\n          foreground: \"hsl(var(--secondary-foreground) / <alpha-value>)\",\n          border: \"var(--secondary-border)\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted) / <alpha-value>)\",\n          foreground: \"hsl(var(--muted-foreground) / <alpha-value>)\",\n          border: \"var(--muted-border)\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent) / <alpha-value>)\",\n          foreground: \"hsl(var(--accent-foreground) / <alpha-value>)\",\n          border: \"var(--accent-border)\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive) / <alpha-value>)\",\n          foreground: \"hsl(var(--destructive-foreground) / <alpha-value>)\",\n          border: \"var(--destructive-border)\",\n        },\n        ring: \"hsl(var(--ring) / <alpha-value>)\",\n        chart: {\n          \"1\": \"hsl(var(--chart-1) / <alpha-value>)\",\n          \"2\": \"hsl(var(--chart-2) / <alpha-value>)\",\n          \"3\": \"hsl(var(--chart-3) / <alpha-value>)\",\n          \"4\": \"hsl(var(--chart-4) / <alpha-value>)\",\n          \"5\": \"hsl(var(--chart-5) / <alpha-value>)\",\n        },\n        sidebar: {\n          ring: \"hsl(var(--sidebar-ring) / <alpha-value>)\",\n          DEFAULT: \"hsl(var(--sidebar) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--sidebar-border) / <alpha-value>)\",\n        },\n        \"sidebar-primary\": {\n          DEFAULT: \"hsl(var(--sidebar-primary) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-primary-foreground) / <alpha-value>)\",\n          border: \"var(--sidebar-primary-border)\",\n        },\n        \"sidebar-accent\": {\n          DEFAULT: \"hsl(var(--sidebar-accent) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-accent-foreground) / <alpha-value>)\",\n          border: \"var(--sidebar-accent-border)\"\n        },\n        status: {\n          online: \"rgb(34 197 94)\",\n          away: \"rgb(245 158 11)\",\n          busy: \"rgb(239 68 68)\",\n          offline: \"rgb(156 163 175)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":4050},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/pages/modules/social-media.tsx":{"content":"import { useState } from \"react\";\nimport { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Users, Search, ExternalLink, Calendar, MapPin, Link as LinkIcon } from \"lucide-react\";\n\nexport default function SocialMedia() {\n  const [profileUrl, setProfileUrl] = useState(\"\");\n  const [searching, setSearching] = useState(false);\n  const [results, setResults] = useState<any>(null);\n\n  const simulateSearch = () => {\n    setSearching(true);\n    setTimeout(() => {\n      setResults({\n        platform: \"Twitter/X\",\n        username: \"@example_user\",\n        displayName: \"Example User\",\n        verified: false,\n        followers: 1247,\n        following: 892,\n        posts: 3456,\n        joined: \"March 2020\",\n        location: \"San Francisco, CA\",\n        bio: \"Digital forensics investigator | Technology enthusiast | Photography lover\",\n        recentPosts: [\n          { date: \"2025-01-20\", content: \"Just finished analyzing...\", engagement: 45 },\n          { date: \"2025-01-19\", content: \"Interesting case today...\", engagement: 89 },\n          { date: \"2025-01-18\", content: \"New tools for investigation...\", engagement: 123 },\n        ],\n        connections: [\n          { name: \"Related User 1\", type: \"Frequent interaction\" },\n          { name: \"Related User 2\", type: \"Mentioned often\" },\n          { name: \"Related User 3\", type: \"Shared content\" },\n        ],\n      });\n      setSearching(false);\n    }, 1500);\n  };\n\n  return (\n    <div className=\"space-y-6 p-6\">\n      {/* Header */}\n      <div>\n        <h1 className=\"text-3xl font-semibold\">Social Media Forensics</h1>\n        <p className=\"text-muted-foreground\">\n          Profile data extraction, timeline visualization, and relationship mapping\n        </p>\n      </div>\n\n      {/* Search Section */}\n      <Card className=\"p-6\">\n        <div className=\"flex gap-2\">\n          <div className=\"relative flex-1\">\n            <LinkIcon className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground\" />\n            <Input\n              placeholder=\"Enter social media profile URL...\"\n              className=\"pl-9\"\n              value={profileUrl}\n              onChange={(e) => setProfileUrl(e.target.value)}\n              data-testid=\"input-profile-url\"\n            />\n          </div>\n          <Button\n            onClick={simulateSearch}\n            disabled={!profileUrl || searching}\n            data-testid=\"button-analyze-profile\"\n          >\n            {searching ? (\n              <>\n                <div className=\"mr-2 h-4 w-4 animate-spin rounded-full border-2 border-primary-foreground border-t-transparent\" />\n                Analyzing...\n              </>\n            ) : (\n              <>\n                <Search className=\"mr-1 h-4 w-4\" />\n                Analyze Profile\n              </>\n            )}\n          </Button>\n        </div>\n      </Card>\n\n      {results && (\n        <>\n          {/* Profile Overview */}\n          <Card className=\"p-6\">\n            <div className=\"mb-4 flex items-start justify-between\">\n              <div>\n                <h3 className=\"text-2xl font-semibold\">{results.displayName}</h3>\n                <p className=\"text-muted-foreground\">{results.username}</p>\n              </div>\n              {results.verified && (\n                <Badge className=\"bg-chart-1/10 text-chart-1\">Verified</Badge>\n              )}\n            </div>\n\n            <div className=\"grid gap-4 md:grid-cols-3\">\n              <div className=\"rounded-lg border border-border p-4 text-center\">\n                <p className=\"text-2xl font-bold\">{results.followers.toLocaleString()}</p>\n                <p className=\"text-sm text-muted-foreground\">Followers</p>\n              </div>\n              <div className=\"rounded-lg border border-border p-4 text-center\">\n                <p className=\"text-2xl font-bold\">{results.following.toLocaleString()}</p>\n                <p className=\"text-sm text-muted-foreground\">Following</p>\n              </div>\n              <div className=\"rounded-lg border border-border p-4 text-center\">\n                <p className=\"text-2xl font-bold\">{results.posts.toLocaleString()}</p>\n                <p className=\"text-sm text-muted-foreground\">Posts</p>\n              </div>\n            </div>\n\n            <div className=\"mt-4 space-y-2\">\n              <div className=\"flex items-center gap-2 text-sm\">\n                <Calendar className=\"h-4 w-4 text-muted-foreground\" />\n                <span>Joined {results.joined}</span>\n              </div>\n              <div className=\"flex items-center gap-2 text-sm\">\n                <MapPin className=\"h-4 w-4 text-muted-foreground\" />\n                <span>{results.location}</span>\n              </div>\n            </div>\n\n            <div className=\"mt-4 rounded-lg bg-muted p-3\">\n              <p className=\"text-sm\">{results.bio}</p>\n            </div>\n          </Card>\n\n          <div className=\"grid gap-6 lg:grid-cols-2\">\n            {/* Recent Activity */}\n            <Card className=\"p-6\">\n              <h3 className=\"mb-4 text-lg font-semibold\">Recent Activity</h3>\n              <div className=\"space-y-3\">\n                {results.recentPosts.map((post: any, index: number) => (\n                  <div\n                    key={index}\n                    className=\"rounded-lg border border-border p-3 hover-elevate\"\n                  >\n                    <div className=\"mb-1 flex items-center justify-between\">\n                      <span className=\"text-xs text-muted-foreground\">{post.date}</span>\n                      <Badge variant=\"secondary\" className=\"text-xs\">\n                        {post.engagement} interactions\n                      </Badge>\n                    </div>\n                    <p className=\"text-sm\">{post.content}</p>\n                  </div>\n                ))}\n              </div>\n            </Card>\n\n            {/* Connections */}\n            <Card className=\"p-6\">\n              <h3 className=\"mb-4 text-lg font-semibold\">Key Connections</h3>\n              <div className=\"space-y-3\">\n                {results.connections.map((connection: any, index: number) => (\n                  <div\n                    key={index}\n                    className=\"flex items-center justify-between rounded-lg border border-border p-3 hover-elevate\"\n                  >\n                    <div className=\"flex items-center gap-3\">\n                      <div className=\"flex h-10 w-10 items-center justify-center rounded-full bg-primary/10\">\n                        <Users className=\"h-5 w-5 text-primary\" />\n                      </div>\n                      <div>\n                        <p className=\"text-sm font-medium\">{connection.name}</p>\n                        <p className=\"text-xs text-muted-foreground\">{connection.type}</p>\n                      </div>\n                    </div>\n                    <Button variant=\"ghost\" size=\"icon\">\n                      <ExternalLink className=\"h-4 w-4\" />\n                    </Button>\n                  </div>\n                ))}\n              </div>\n            </Card>\n          </div>\n        </>\n      )}\n\n      {!results && (\n        <Card className=\"flex flex-col items-center justify-center p-12 text-center\">\n          <Users className=\"mb-4 h-12 w-12 text-muted-foreground\" />\n          <h3 className=\"mb-2 text-lg font-semibold\">No Profile Data</h3>\n          <p className=\"text-sm text-muted-foreground\">\n            Enter a social media profile URL to begin analysis\n          </p>\n        </Card>\n      )}\n    </div>\n  );\n}\n","size_bytes":7664},"design_guidelines.md":{"content":"# Digital Forensics Platform - Design Guidelines (Compacted)\n\n## Design System: IBM Carbon\n\n**Rationale:** Enterprise-grade, data-heavy applications requiring professional authority and consistency across 36 investigative modules.\n\n**Principles:** Clarity over decoration | Workflow efficiency | Information density | Professional trust\n\n---\n\n## Typography\n\n**Font Family:** IBM Plex Sans (UI), IBM Plex Mono (technical data)\n\n**Hierarchy:**\n- Page Titles: `text-3xl font-semibold` (36px)\n- Section Headers: `text-2xl font-semibold` (24px)\n- Card Titles: `text-lg font-medium` (18px)\n- Body: `text-base leading-relaxed` (16px)\n- Labels: `text-sm font-medium` (14px)\n- Captions: `text-xs` (12px)\n- Technical Data: `text-sm font-mono` (14px) - hashes, IPs, identifiers\n\n---\n\n## Layout & Spacing\n\n**Spacing Scale:** `2, 4, 6, 8, 12, 16` (Tailwind units)\n- Compact: `p-2 gap-2` - tables, toolbars\n- Standard: `p-4 gap-4` - cards, forms\n- Sections: `p-6 gap-6` - panels\n- Large: `p-8 gap-8` - page margins\n- XL: `p-12 gap-12` - dashboard columns\n- XXL: `p-16 gap-16` - page-level rhythm\n\n**Grids:**\n- Dashboard: `grid-cols-12` (sidebar + content)\n- Module Cards: `grid-cols-1 md:grid-cols-2 lg:grid-cols-3`\n- Split Views: 2-column comparison layouts\n- Tables: Full-width with `overflow-x-auto`\n\n**Containers:**\n- Sidebar: `w-64` (collapses to `w-16` icon-only)\n- Forms: `max-w-2xl`\n- Tables: `max-w-full`\n\n---\n\n## Navigation\n\n**Sidebar (Left, Fixed):**\n- 8 collapsible categories organizing 36 modules:\n  1. AI & Media (5): Deepfake, Image, Video, Audio, Steganography\n  2. Network & Comm (6): Network, Email, CDR/IPDR, Dark Web, Traffic, Browser\n  3. Device & Hardware (5): Mobile, Disk, Drone, Vehicle, GPS\n  4. Financial (4): Banking Fraud, AML/CTF, Financial/Corporate Audit\n  5. Social & OSINT (4): Social Media, OSINT, Face Recognition, Document Forgery\n  6. Security (4): Malware, Sandbox, Password Recovery, Quantum Crypto\n  7. Legal (4): Case Mgmt, E-Discovery, CSAM Controls, Audit Panel\n  8. Data & Cloud (4): Big Data, Cloud Evidence, Blockchain, Full Disk\n- Active module indicator | User profile at bottom | `h-16` header\n\n**Top Bar (`h-16`):**\n- Breadcrumbs | Global search (`min-w-96`) | Notifications | Active case | Quick actions | User avatar/role\n\n**Quick Access (`h-12`):**\n- Horizontal scrollable pinned favorites below top bar\n\n---\n\n## Core Components\n\n### Dashboard KPI Cards\n```html\n<div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n  <div class=\"p-6 rounded-lg shadow\">\n    <div class=\"text-3xl font-bold\">[Metric]</div>\n    <div class=\"text-sm text-muted\">[Label]</div>\n    <div class=\"text-xs\">[Trend: +12%]</div>\n  </div>\n</div>\n```\n\n### Case List Table\n- Sticky header, sortable columns\n- `h-14` rows, zebra striping\n- Columns: ID | Title | Status Badge | Priority | Assigned | Date | Actions (⋮)\n- Hover state on full row\n\n### Evidence Timeline\n- Vertical timeline with connection lines\n- `p-4 rounded-lg` cards per entry\n- Left: timestamp (`text-sm text-muted`) | Icon | Details | Chain-of-custody badge | Hash verification\n\n### Forms\n```html\n<form class=\"space-y-4 max-w-2xl\">\n  <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n    <div>\n      <label class=\"text-sm font-medium mb-2\">[Label]</label>\n      <input class=\"h-10 border rounded-md w-full\" />\n      <p class=\"text-xs text-muted\">[Helper text]</p>\n    </div>\n  </div>\n</form>\n```\n\n**File Upload:** `min-h-48 border-2 border-dashed` | Centered icon (`size-12`) | Instruction text | File restrictions\n\n### Data Tables\n- Sticky header with sort indicators\n- Fixed-width for IDs/dates\n- Expandable rows, inline edit\n- Bulk select checkboxes\n- Pagination bottom-right (10/25/50/100)\n\n### Modals\n**Evidence Detail:** `max-w-4xl max-h-screen overflow-y-auto` | Header with close | Tabbed interface | Right-aligned footer actions\n\n**Confirmation:** `max-w-md` centered | Icon | Clear primary action | Cancel button | Backdrop dismiss\n\n**Toasts:** Top-right | Auto-dismiss 5s | Progress bar | Icon + message + close | `max-w-sm`\n\n---\n\n## Specialized Forensics Components\n\n**Hash Verification:**\n```html\n<div class=\"font-mono text-sm\">\n  <div>Expected: [hash]</div>\n  <div>Actual: [hash]</div>\n  <span class=\"text-green-600\">✓ Match</span>\n  <button>Copy</button>\n</div>\n```\n\n**Chain-of-Custody Log:** Vertical timeline | Entry: timestamp, user, action, IP | Digital signature badge | Tamper-proof indicator\n\n**Image Comparison:** Before/After slider with draggable divider | Zoom controls | EXIF metadata panel | Tampering heatmap toggle\n\n**Audit Trail:** Filterable table | Expandable rows | Geolocation flags | Status indicators | CSV export\n\n---\n\n## Charts & Visualizations\n\n**Container Standard:**\n```html\n<div class=\"p-6 rounded-lg\">\n  <h3 class=\"text-lg font-semibold mb-4\">[Title]</h3>\n  <div class=\"h-64\">[Chart Canvas]</div>\n  <div>[Legend]</div>\n  <button class=\"absolute top-6 right-6\">Export</button>\n</div>\n```\n\n**Types:** Line (trends) | Bar (comparisons) | Pie/Donut (distribution) | Network graphs | Heatmaps | Sankey (flows)\n\n---\n\n## Security Visual Language\n\n**Trust Indicators:**\n- ✓ Verified badges (validated data)\n- 🔒 Lock icons (encrypted)\n- 🛡️ Shield (security-scanned)\n- ⚠️ Warning triangles (flagged)\n\n**Access Control:**\n- Disabled state for unauthorized actions\n- Role badges next to usernames\n- Permission tooltips\n- Visible audit log icon\n\n**Data Integrity:**\n- Green checkmark: hash verified\n- Red alert: tamper detected\n- Chain-of-custody intact badge\n- Digital signature verification\n\n---\n\n## Icons\n\n**Library:** Lucide React\n**Sizes:**\n- Navigation: `size-5` (20px) + `mr-2`\n- Dashboard cards: `size-8` (32px, semi-transparent)\n- Buttons: `size-4` (16px) + `mr-1`\n- Status: `size-3` (12px)\n- File types: `size-6` (24px)\n\n**Custom:** Use `<!-- CUSTOM ICON: [Name] -->` placeholders\n\n---\n\n## Responsive Design\n\n**Breakpoints:**\n- **Mobile (<768px):** Single column | Hamburger menu | Stacked cards | Bottom tab nav | Sticky action buttons\n- **Tablet (768-1024px):** Icon-only sidebar | 2-column grids | Collapsible filters\n- **Desktop (>1024px):** Full sidebar | 3-4 column grids | Split views\n\n---\n\n## Role-Based UI\n\n**Admin:** Full access + system settings  \n**Analyst:** Standard modules, no config  \n**Supervisor:** Read-only + approval workflows  \n**Auditor:** Audit trails + reports only\n\n**Personalization:** Draggable widgets | Pinned favorites | Recent cases | Custom metrics\n\n---\n\n## Interaction Patterns\n\n**Batch Operations:** Multi-select checkboxes → bulk action toolbar → confirmation → progress indicator\n\n**Progressive Disclosure:** Summary cards with \"View Details\" | Collapsible advanced options | Tabbed multi-faceted data\n\n**Status Feedback:** Loading spinners | Success/error toasts | Inline validation | Progress bars for long operations\n\n---\n\n**All components maintain:** Professional authority | High information density | Consistent spacing | Clear hierarchy | Accessibility compliance | Workflow optimization for investigators","size_bytes":7007},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5741},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n          await import(\"@replit/vite-plugin-dev-banner\").then((m) =>\n            m.devBanner(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":1080},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n/* LIGHT MODE */\n:root {\n  --button-outline: rgba(0,0,0, .10);\n  --badge-outline: rgba(0,0,0, .05);\n\n  /* Automatic computation of border around primary / danger buttons */\n  --opaque-button-border-intensity: -8; /* In terms of percentages */\n\n  /* Backgrounds applied on top of other backgrounds when hovered/active */\n  --elevate-1: rgba(0,0,0, .03);\n  --elevate-2: rgba(0,0,0, .08);\n\n  --background: 220 0% 98%;\n\n  --foreground: 220 0% 12%;\n\n  --border: 220 0% 88%;\n\n  --card: 220 0% 96%;\n\n  --card-foreground: 220 0% 12%;\n\n  --card-border: 220 0% 90%;\n\n  --sidebar: 220 0% 94%;\n\n  --sidebar-foreground: 220 0% 12%;\n\n  --sidebar-border: 220 0% 88%;\n\n  --sidebar-primary: 214 95% 36%;\n\n  --sidebar-primary-foreground: 214 95% 98%;\n\n  --sidebar-accent: 220 3% 88%;\n\n  --sidebar-accent-foreground: 220 3% 18%;\n\n  --sidebar-ring: 214 95% 36%;\n\n  --popover: 220 0% 92%;\n\n  --popover-foreground: 220 0% 12%;\n\n  --popover-border: 220 0% 86%;\n\n  --primary: 214 95% 36%;\n\n  --primary-foreground: 214 95% 98%;\n\n  --secondary: 220 3% 86%;\n\n  --secondary-foreground: 220 3% 16%;\n\n  --muted: 220 4% 89%;\n\n  --muted-foreground: 220 4% 32%;\n\n  --accent: 220 5% 87%;\n\n  --accent-foreground: 220 5% 18%;\n\n  --destructive: 0 84% 42%;\n\n  --destructive-foreground: 0 84% 98%;\n\n  --input: 220 0% 72%;\n  --ring: 214 95% 36%;\n  --chart-1: 214 95% 36%;\n  --chart-2: 199 89% 42%;\n  --chart-3: 173 58% 39%;\n  --chart-4: 43 96% 56%;\n  --chart-5: 27 87% 57%;\n\n  --font-sans: IBM Plex Sans, Open Sans, sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: IBM Plex Mono, Menlo, monospace;\n  --radius: .5rem; /* 8px */\n  --shadow-2xs: 0px 1px 2px 0px hsl(220 10% 10% / 0.05);\n  --shadow-xs: 0px 1px 2px 0px hsl(220 10% 10% / 0.06);\n  --shadow-sm: 0px 1px 3px 0px hsl(220 10% 10% / 0.08), 0px 1px 2px -1px hsl(220 10% 10% / 0.06);\n  --shadow: 0px 2px 4px -1px hsl(220 10% 10% / 0.08), 0px 4px 6px -1px hsl(220 10% 10% / 0.07);\n  --shadow-md: 0px 4px 6px -1px hsl(220 10% 10% / 0.08), 0px 2px 4px -2px hsl(220 10% 10% / 0.06);\n  --shadow-lg: 0px 10px 15px -3px hsl(220 10% 10% / 0.08), 0px 4px 6px -4px hsl(220 10% 10% / 0.05);\n  --shadow-xl: 0px 20px 25px -5px hsl(220 10% 10% / 0.08), 0px 8px 10px -6px hsl(220 10% 10% / 0.05);\n  --shadow-2xl: 0px 25px 50px -12px hsl(220 10% 10% / 0.15);\n  --tracking-normal: 0em;\n  --spacing: 0.25rem;\n\n  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */\n\n  /* Fallback for older browsers */\n  --sidebar-primary-border: hsl(var(--sidebar-primary));\n  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --sidebar-accent-border: hsl(var(--sidebar-accent));\n  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --primary-border: hsl(var(--primary));\n  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --secondary-border: hsl(var(--secondary));\n  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --muted-border: hsl(var(--muted));\n  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --accent-border: hsl(var(--accent));\n  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --destructive-border: hsl(var(--destructive));\n  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n}\n\n.dark {\n  --button-outline: rgba(255,255,255, .10);\n  --badge-outline: rgba(255,255,255, .05);\n\n  --opaque-button-border-intensity: 9;  /* In terms of percentages */\n\n  /* Backgrounds applied on top of other backgrounds when hovered/active */\n  --elevate-1: rgba(255,255,255, .04);\n  --elevate-2: rgba(255,255,255, .09);\n\n  --background: 220 0% 9%;\n\n  --foreground: 220 0% 96%;\n\n  --border: 220 0% 18%;\n\n  --card: 220 0% 11%;\n\n  --card-foreground: 220 0% 96%;\n\n  --card-border: 220 0% 16%;\n\n  --sidebar: 220 0% 13%;\n\n  --sidebar-foreground: 220 0% 96%;\n\n  --sidebar-border: 220 0% 19%;\n\n  --sidebar-primary: 214 95% 36%;\n\n  --sidebar-primary-foreground: 214 95% 98%;\n\n  --sidebar-accent: 220 4% 18%;\n\n  --sidebar-accent-foreground: 220 4% 90%;\n\n  --sidebar-ring: 214 95% 48%;\n\n  --popover: 220 0% 15%;\n\n  --popover-foreground: 220 0% 96%;\n\n  --popover-border: 220 0% 21%;\n\n  --primary: 214 95% 36%;\n\n  --primary-foreground: 214 95% 98%;\n\n  --secondary: 220 4% 20%;\n\n  --secondary-foreground: 220 4% 92%;\n\n  --muted: 220 5% 17%;\n\n  --muted-foreground: 220 5% 72%;\n\n  --accent: 220 6% 19%;\n\n  --accent-foreground: 220 6% 90%;\n\n  --destructive: 0 84% 42%;\n\n  --destructive-foreground: 0 84% 98%;\n\n  --input: 220 0% 32%;\n  --ring: 214 95% 48%;\n  --chart-1: 214 95% 58%;\n  --chart-2: 199 89% 62%;\n  --chart-3: 173 58% 59%;\n  --chart-4: 43 96% 66%;\n  --chart-5: 27 87% 67%;\n\n  --shadow-2xs: 0px 1px 2px 0px hsl(220 0% 0% / 0.40);\n  --shadow-xs: 0px 1px 2px 0px hsl(220 0% 0% / 0.45);\n  --shadow-sm: 0px 1px 3px 0px hsl(220 0% 0% / 0.50), 0px 1px 2px -1px hsl(220 0% 0% / 0.45);\n  --shadow: 0px 2px 4px -1px hsl(220 0% 0% / 0.50), 0px 4px 6px -1px hsl(220 0% 0% / 0.48);\n  --shadow-md: 0px 4px 6px -1px hsl(220 0% 0% / 0.50), 0px 2px 4px -2px hsl(220 0% 0% / 0.45);\n  --shadow-lg: 0px 10px 15px -3px hsl(220 0% 0% / 0.50), 0px 4px 6px -4px hsl(220 0% 0% / 0.40);\n  --shadow-xl: 0px 20px 25px -5px hsl(220 0% 0% / 0.50), 0px 8px 10px -6px hsl(220 0% 0% / 0.40);\n  --shadow-2xl: 0px 25px 50px -12px hsl(220 0% 0% / 0.60);\n\n  /* Fallback for older browsers */\n  --sidebar-primary-border: hsl(var(--sidebar-primary));\n  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --sidebar-accent-border: hsl(var(--sidebar-accent));\n  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --primary-border: hsl(var(--primary));\n  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --secondary-border: hsl(var(--secondary));\n  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --muted-border: hsl(var(--muted));\n  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --accent-border: hsl(var(--accent));\n  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --destructive-border: hsl(var(--destructive));\n  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n}\n\n/**\n * Using the elevate system.\n * Automatic contrast adjustment.\n *\n * <element className=\"hover-elevate\" />\n * <element className=\"active-elevate-2\" />\n *\n * // Using the tailwind utility when a data attribute is \"on\"\n * <element className=\"toggle-elevate data-[state=on]:toggle-elevated\" />\n * // Or manually controlling the toggle state\n * <element className=\"toggle-elevate toggle-elevated\" />\n *\n * Elevation systems have to handle many states.\n * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)\n * - toggled or not\n * - focused or not (this is not handled with these utilities)\n *\n * Even without handling focused or not, this is six possible combinations that\n * need to be distinguished from eachother visually.\n */\n@layer utilities {\n\n  /* Hide ugly search cancel button in Chrome until we can style it properly */\n  input[type=\"search\"]::-webkit-search-cancel-button {\n    @apply hidden;\n  }\n\n  /* Placeholder styling for contentEditable div */\n  [contenteditable][data-placeholder]:empty::before {\n    content: attr(data-placeholder);\n    color: hsl(var(--muted-foreground));\n    pointer-events: none;\n  }\n\n  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of\n   * buttons/badges can remove the automatic brightness adjustment on interactions\n   * and program their own. */\n  .no-default-hover-elevate {}\n\n  .no-default-active-elevate {}\n\n\n  /**\n   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.\n   * This way they can stack/compound. Both will overlap the parent's borders!\n   * So borders will be automatically adjusted both on toggle, and hover/active,\n   * and they will be compounded.\n   */\n  .toggle-elevate::before,\n  .toggle-elevate-2::before {\n    content: \"\";\n    pointer-events: none;\n    position: absolute;\n    inset: 0px;\n    /*border-radius: inherit;   match rounded corners */\n    border-radius: inherit;\n    z-index: -1;\n    /* sits behind content but above backdrop */\n  }\n\n  .toggle-elevate.toggle-elevated::before {\n    background-color: var(--elevate-2);\n  }\n\n  /* If there's a 1px border, adjust the inset so that it covers that parent's border */\n  .border.toggle-elevate::before {\n    inset: -1px;\n  }\n\n  /* Does not work on elements with overflow:hidden! */\n  .hover-elevate:not(.no-default-hover-elevate),\n  .active-elevate:not(.no-default-active-elevate),\n  .hover-elevate-2:not(.no-default-hover-elevate),\n  .active-elevate-2:not(.no-default-active-elevate) {\n    position: relative;\n    z-index: 0;\n  }\n\n  .hover-elevate:not(.no-default-hover-elevate)::after,\n  .active-elevate:not(.no-default-active-elevate)::after,\n  .hover-elevate-2:not(.no-default-hover-elevate)::after,\n  .active-elevate-2:not(.no-default-active-elevate)::after {\n    content: \"\";\n    pointer-events: none;\n    position: absolute;\n    inset: 0px;\n    /*border-radius: inherit;   match rounded corners */\n    border-radius: inherit;\n    z-index: 999;\n    /* sits in front of content */\n  }\n\n  .hover-elevate:hover:not(.no-default-hover-elevate)::after,\n  .active-elevate:active:not(.no-default-active-elevate)::after {\n    background-color: var(--elevate-1);\n  }\n\n  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,\n  .active-elevate-2:active:not(.no-default-active-elevate)::after {\n    background-color: var(--elevate-2);\n  }\n\n  /* If there's a 1px border, adjust the inset so that it covers that parent's border */\n  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,\n  .border.active-elevate:not(.no-active-interaction-elevate)::after,\n  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,\n  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,\n  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {\n    inset: -1px;\n  }\n}","size_bytes":11250},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689}},"version":2}